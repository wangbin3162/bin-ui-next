(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[62],{

/***/ 711:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm-bundler.js + 3 modules\nvar vue_runtime_esm_bundler = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./build/md-loader!./examples/docs/tree.md?vue&type=template&id=11915a18\n\nvar treevue_type_template_id_11915a18_hoisted_1 = {\n  class: \"content element-doc\"\n};\n\nvar treevue_type_template_id_11915a18_hoisted_2 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h2\", {\n  id: \"tree-shu-jie-gou\"\n}, \"Tree 树结构\", -1);\n\nvar treevue_type_template_id_11915a18_hoisted_3 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"ji-chu-yong-fa\"\n}, \"基础用法\", -1);\n\nvar treevue_type_template_id_11915a18_hoisted_4 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"div\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", null, \"lockSelect\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\" 设置可以锁定树的选中事件，这个可以用来控制树菜单在不同情况下的操作\")])], -1);\n\nvar treevue_type_template_id_11915a18_hoisted_5 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div flex>\\n    <div style=\\\"width: 200px\\\">\\n      <b-tree :data=\\\"data\\\" @select-change=\\\"handleSelect\\\" :lock-select=\\\"lockSelect\\\"></b-tree>\\n    </div>\\n    <div style=\\\"width: 80px\\\">\\n      <b-switch v-model=\\\"lockSelect\\\" size=\\\"large\\\">\\n        <template #open>锁定</template>\\n        <template #close>解锁</template>\\n      </b-switch>\\n    </div>\\n  </div>\\n  <div>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: '一级 1',\\n            expand: true,\\n            children: [\\n              {\\n                title: '二级 1-1',\\n                expand: true,\\n                children: [\\n                  { title: '三级 1-1-1', },\\n                  { title: '三级 1-1-2' }\\n                ]\\n              },\\n              {\\n                title: '二级 1-2',\\n                expand: true,\\n                children: [\\n                  { title: '三级 1-2-1' },\\n                  { title: '三级 1-2-2' }\\n                ]\\n              }\\n            ]\\n          }\\n        ],\\n        lockSelect: false\\n      }\\n    },\\n    methods: {\\n      handleSelect(selected, node) {\\n        console.log(node)\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar treevue_type_template_id_11915a18_hoisted_6 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"e-wai-can-shu-pei-zhi\"\n}, \"额外参数配置\", -1);\n\nvar treevue_type_template_id_11915a18_hoisted_7 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\"可以配置额外参数设置，比如附加id，code等业务参数，也可以指定title显示的字段名称，默认为\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", null, \"title\")], -1);\n\nvar treevue_type_template_id_11915a18_hoisted_8 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <b-button @click=\\\"initData\\\">初始化数据并默认选中前端组</b-button>\\n  <div flex class=\\\"mt-10\\\">\\n    <div style=\\\"width: 200px\\\">\\n      <b-tree :data=\\\"data\\\" ref=\\\"tree\\\" @select-change=\\\"handleSelect\\\" titleKey=\\\"text\\\"></b-tree>\\n    </div>\\n  </div>\\n  <div>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [],\\n        defaultId: '00102'\\n      }\\n    },\\n    methods: {\\n      initData() {\\n        // 初始化数据后\\n        this.data = [\\n          {\\n            id: '001',\\n            text: '研发部',\\n            deptCode: 'yfb',\\n            status: '1',\\n            desc: '研发中心',\\n            parentId: null,\\n            children: [\\n              {\\n                id: '00101',\\n                text: '后端组',\\n                deptCode: 'hd',\\n                status: '1',\\n                desc: '后端研发中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00102',\\n                text: '前端组',\\n                deptCode: 'qd',\\n                status: '1',\\n                desc: '前端研发中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00103',\\n                text: 'UI设计',\\n                deptCode: 'sj',\\n                status: '1',\\n                desc: '交互、ui设计中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00104',\\n                text: '测试组',\\n                deptCode: 'cs',\\n                status: '1',\\n                desc: '测试组',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00105',\\n                text: '运维组',\\n                deptCode: 'yw',\\n                status: '1',\\n                desc: '运维、服务、巡检',\\n                parentId: '001'\\n              }\\n            ]\\n          },\\n          {\\n            id: '002',\\n            text: '项目部',\\n            deptCode: 'xmb',\\n            status: '1',\\n            desc: '项目服务部',\\n            parentId: null,\\n            children: [\\n              {\\n                id: '00201',\\n                text: '开发组',\\n                deptCode: 'kf',\\n                status: '1',\\n                desc: '后端项目开发',\\n                parentId: '002'\\n              },\\n              {\\n                id: '00202',\\n                text: '交付服务组',\\n                deptCode: 'jf',\\n                status: '1',\\n                desc: '交付项目，技术服务支持',\\n                parentId: '002'\\n              }\\n            ]\\n          }\\n        ]\\n        this.$nextTick(() => {\\n          // 获取树结构的拍平数据，查找当前需要选中的节点值\\n          const flatState = this.$refs.tree.getFlatState()\\n          const current = flatState.find(node => node.node.id === this.defaultId)\\n          if (current && current) {\\n            this.$refs.tree.setSelected([current.nodeKey])\\n          }\\n        })\\n      },\\n      handleSelect(selected, node) {\\n        console.log(node)\\n        this.$message(`选中节点${node.text}`)\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar treevue_type_template_id_11915a18_hoisted_9 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"qi-ta-shu-xing\"\n}, \"其他属性\", -1);\n\nvar treevue_type_template_id_11915a18_hoisted_10 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, \"可以设置show-checkbox开启勾选，并可以设置数据格式中的默认选中\", -1);\n\nvar _hoisted_11 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, \"expand、selected、checked 和 disabled 可以设置展开，选中，勾选和禁用。multiple 开启多选\", -1);\n\nvar _hoisted_12 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div>\\n    <b-tree :data=\\\"data\\\" show-checkbox multiple @select-change=\\\"handleSelect\\\" @check-change=\\\"handleChecked\\\"></b-tree>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: '一级 1',\\n            expand: true,\\n            children: [\\n              {\\n                title: '二级 1-1',\\n                expand: true,\\n                disabled: true,\\n                children: [\\n                  { title: '三级 1-1-1', },\\n                  { title: '三级 1-1-2' }\\n                ]\\n              },\\n              {\\n                title: '二级 1-2',\\n                expand: true,\\n                children: [\\n                  { title: '三级 1-2-1' },\\n                  { title: '三级 1-2-2' }\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    methods: {\\n      handleSelect(selected, node) {\\n        console.log(selected)\\n        console.log(node)\\n      },\\n      handleChecked(checked, node) {\\n        console.log(checked)\\n        console.log(node)\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_13 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"shu-jie-dian-de-cao-zuo\"\n}, \"树节点的操作\", -1);\n\nvar _hoisted_14 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, \"树结构默认拍平了所有节点数组，并塞入了唯一的nodeKey值用于索引节点，这样可以方便快捷的获取和设置树的状态\", -1);\n\nvar _hoisted_15 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div class=\\\"mb-16\\\">\\n    <b-button @click=\\\"expandAll\\\" size=\\\"small\\\">展开全部</b-button>\\n    <b-button @click=\\\"collapseAll\\\" size=\\\"small\\\">收起全部</b-button>\\n    <b-button @click=\\\"setExpand\\\" size=\\\"small\\\">展开三级</b-button>\\n    <b-button @click=\\\"checkAll\\\" size=\\\"small\\\">选择全部</b-button>\\n    <b-button @click=\\\"uncheckAll\\\" size=\\\"small\\\">取消全选</b-button>\\n    <b-button @click=\\\"setChecked\\\" size=\\\"small\\\">设置选中1-2及以下</b-button>\\n    <b-button @click=\\\"setSelected\\\" size=\\\"small\\\">单选 1-2-1</b-button>\\n    <b-button @click=\\\"clear\\\" size=\\\"small\\\">清空单选和多选</b-button>\\n  </div>\\n  <div style=\\\"width: 300px;\\\">\\n    <b-tree :data=\\\"data\\\" show-checkbox ref=\\\"tree\\\"></b-tree>\\n  </div>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: '一级 1',\\n            children: [\\n              {\\n                title: '二级 1-1',\\n                children: [\\n                  { title: '三级 1-1-1', },\\n                  { title: '三级 1-1-2' }\\n                ]\\n              },\\n              {\\n                title: '二级 1-2',\\n                children: [\\n                  { title: '三级 1-2-1' },\\n                  { title: '三级 1-2-2' }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            title: '一级 2',\\n            children: [\\n              {\\n                title: '二级 2-1',\\n              },\\n              {\\n                title: '二级 2-2',\\n              }\\n            ]\\n          }\\n        ],\\n      }\\n    },\\n    methods: {\\n      expandAll() {\\n        this.$refs.tree.expandAll()\\n      },\\n      collapseAll() {\\n        this.$refs.tree.collapseAll()\\n      },\\n      checkAll() {\\n        this.$refs.tree.checkAll()\\n      },\\n      uncheckAll() {\\n        this.$refs.tree.uncheckAll()\\n      },\\n      setChecked() {\\n        // 默认是获取了nodeKey索引，如有特殊判断，如id，则可以自行根据flatState.find所有nodeKey值\\n        this.$refs.tree.setChecked([5, 6])\\n      },\\n      setSelected() {\\n        this.$refs.tree.setSelected([5])\\n      },\\n      clear() {\\n        this.$refs.tree.uncheckAll()\\n        this.$refs.tree.unselectAll()\\n      },\\n      setExpand() {\\n        this.$refs.tree.setExpand([0, 4])\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_16 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"yi-bu-jia-zai-zi-jie-dian\"\n}, \"异步加载子节点\", -1);\n\nvar _hoisted_17 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <b-tree :data=\\\"data3\\\" show-checkbox :load-data=\\\"loadData\\\"></b-tree>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data3: [\\n          {\\n            title: 'root',\\n            children: []\\n          },\\n          {\\n            title: 'leaf',\\n            isLeaf: true,\\n            children: []\\n          }\\n        ]\\n      }\\n    },\\n    methods: {\\n      loadData(item, callback) {\\n        console.log(item)\\n        setTimeout(() => {\\n          let data = [\\n            {\\n              title: 'have-child',\\n              loading: false,\\n              children: []\\n            },\\n            {\\n              title: 'no-child',\\n              loading: false,\\n              children: []\\n            }\\n          ]\\n          // 模拟请求数据有子项的时候\\n          if (item.title === 'have-child') {\\n            data = [\\n              {\\n                title: 'child1',\\n                loading: false,\\n                isLeaf: false,\\n                children: [],\\n                visible: true\\n              },\\n              {\\n                title: 'leaf node',\\n                isLeaf: true,\\n                children: []\\n              }\\n            ]\\n          } else if (item.title === 'no-child') {\\n            // 按需自行设置是否是叶子节点或者不设置\\n            item['isLeaf'] = true\\n            // 不设置会保留箭头可以再次点击\\n            // data = []\\n          }\\n\\n          callback(data);\\n        }, 1000);\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_18 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"ke-yi-shai-xuan\"\n}, \"可以筛选\", -1);\n\nvar _hoisted_19 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, \"如果树结构层级较多，可配合过滤函数进行过滤筛选\", -1);\n\nvar _hoisted_20 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div>\\n    <b-input v-model=\\\"query\\\" search placeholder=\\\"输入过滤条件后回车筛选\\\" @search=\\\"handleFilter\\\" style=\\\"width: 230px;\\\"></b-input>\\n    <b-divider style=\\\"margin: 14px 0;\\\"></b-divider>\\n    <b-tree :data=\\\"data\\\" ref=\\\"treeRef\\\" :filter-node-method=\\\"filterNode\\\" highlight-filter></b-tree>\\n  </div>\\n</template>\\n<script>\\n  import { reactive, toRefs, ref } from 'vue'\\n\\n  export default {\\n    setup() {\\n      const states = reactive({\\n        query: '',\\n        data: [\\n          {\\n            id: '1',\\n            title: '江苏省',\\n            children: [\\n              {\\n                id: '1-1',\\n                title: '南京市',\\n                children: [\\n                  { id: '1-1-1', title: '玄武区' },\\n                  { id: '1-1-2', title: '鼓楼区' },\\n                  { id: '1-1-3', title: '建邺区' },\\n                  { id: '1-1-4', title: '秦淮区' }\\n                ]\\n              },\\n              {\\n                id: '1-2',\\n                title: '无锡市',\\n                children: [\\n                  { id: '1-2-1', title: '锡山区' },\\n                  { id: '1-2-2', title: '惠山区' },\\n                  { id: '1-2-3', title: '滨湖区' },\\n                  { id: '1-2-4', title: '梁溪区' }\\n                ]\\n              },\\n              {\\n                id: '1-3',\\n                title: '徐州市',\\n                children: [\\n                  { id: '1-3-1', title: '鼓楼区' },\\n                  { id: '1-3-2', title: '云龙区' },\\n                  { id: '1-3-3', title: '泉山区' },\\n                  { id: '1-3-4', title: '铜山区' },\\n                  { id: '1-3-5', title: '贾汪区' },\\n                  { id: '1-3-6', title: '沛县' },\\n                  { id: '1-3-7', title: '丰县' },\\n                  { id: '1-3-8', title: '睢宁县' },\\n                  { id: '1-3-9', title: '新沂市' },\\n                  { id: '1-3-10', title: '邳州市' }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            id: '2',\\n            title: '河北省',\\n            children: [\\n              {\\n                id: '2-1',\\n                title: '石家庄',\\n                children: [\\n                  { id: '2-1-1', title: '长安区' },\\n                  { id: '2-1-2', title: '新华区' },\\n                  { id: '2-1-3', title: '鼓楼区' }\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      })\\n      const treeRef = ref(null)\\n      const handleFilter = (value) => {\\n        treeRef.value.filter(value)\\n      }\\n      const filterNode = (value, node) => {\\n        if (!value) return true;\\n        // return node.title===value.trim()\\n        return node.title.indexOf(value) !== -1;\\n      }\\n      return {\\n        ...toRefs(states),\\n        treeRef,\\n        handleFilter,\\n        filterNode\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_21 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"renderhan-shu\"\n}, \"render函数\", -1);\n\nvar _hoisted_22 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, \"使用render函数可以设置更多自定义的效果\", -1);\n\nvar _hoisted_23 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div style=\\\"width: 300px;\\\">\\n    <b-tree :data=\\\"data\\\" :render=\\\"renderContent\\\" ref=\\\"tree\\\"></b-tree>\\n  </div>\\n</template>\\n<script>\\n  import { h } from 'vue'\\n\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: 'parent 1',\\n            expand: true,\\n            render: ({ root, node, data }) => {\\n              return h('span', {\\n                style: { display: 'inline-flex', justifyContent: 'space-between', width: '100%', }\\n              }, [\\n                h('span', data.title),\\n                h('i', {\\n                  'class': ['b-iconfont', 'b-icon-plus-square'],\\n                  style: { fontSize: '16px', color: '#1089ff' },\\n                  onClick: () => {\\n                    this.append(data)\\n                  }\\n                })\\n              ]);\\n            },\\n            children: [\\n              { title: 'child 1-1', },\\n              { title: 'child 1-2', }\\n            ]\\n          }\\n        ],\\n        id: 0,\\n      }\\n    },\\n    methods: {\\n      renderContent({ root, node, data }) {\\n        return h('span', {\\n          style: { display: 'inline-flex', justifyContent: 'space-between', width: '100%', }\\n        }, [\\n          h('span', data.title),\\n          h('span', { style: { display: 'inline-block', } }, [\\n            h('i', {\\n              'class': ['b-iconfont', 'b-icon-plus-circle'],\\n              style: { fontSize: '16px', color: '#5d6d7e' },\\n              onClick: (e) => {\\n                e.stopPropagation()\\n                this.append(data)\\n              }\\n            }),\\n            h('i', {\\n              'class': ['b-iconfont', 'b-icon-minus-circle'],\\n              style: { fontSize: '16px', color: '#f5222d' },\\n              onClick: (e) => {\\n                e.stopPropagation()\\n                this.remove(root, node, data)\\n              }\\n            })\\n          ])\\n        ]);\\n      },\\n      append(data) {\\n        const children = data.children || [];\\n        data.expand = true\\n        children.push({ title: 'new node' });\\n        data.children = children\\n        this.data = [...this.data]\\n      },\\n      remove(root, node, data) {\\n        console.log(root, node, data)\\n        const parentKey = root.find(el => el === node).parent;\\n        const parent = root.find(el => el.nodeKey === parentKey).node;\\n        const index = parent.children.indexOf(data);\\n        parent.children.splice(index, 1);\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_24 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"shu-xuan-ze\"\n}, \"树选择\", -1);\n\nvar _hoisted_25 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, \"由于书选择场景较多，这里也额外封装了一个树形选择器以供表单进行节点选择\", -1);\n\nvar _hoisted_26 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div flex>\\n    <div flex>\\n      <b-tree-select\\n          style=\\\"width: 200px;\\\"\\n          :data=\\\"data\\\"\\n          v-model=\\\"currentId\\\"\\n          titleKey=\\\"text\\\"\\n          @change=\\\"handleChange\\\"\\n      ></b-tree-select>\\n      <b-button @click=\\\"defaultSelect\\\">设置默认选中前端组</b-button>\\n    </div>\\n    <div flex class=\\\"ml-16\\\">\\n      <b-tree-select\\n          style=\\\"width: 200px;\\\"\\n          :data=\\\"data\\\"\\n          v-model=\\\"currentId\\\"\\n          v-model:checked=\\\"checked\\\"\\n          titleKey=\\\"text\\\"\\n          show-checkbox\\n          @change=\\\"handleChange\\\"\\n      ></b-tree-select>\\n      <b-button @click=\\\"setChecked\\\">设置默认勾选项目部</b-button>\\n    </div>\\n  </div>\\n  <div>{{ currentId }}</div>\\n  <div>{{ currentNode }}</div>\\n  <div>{{ checked }}</div>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            id: '001',\\n            text: '研发部',\\n            deptCode: 'yfb',\\n            status: '1',\\n            desc: '研发中心',\\n            parentId: null,\\n            children: [\\n              {\\n                id: '00101',\\n                text: '后端组',\\n                deptCode: 'hd',\\n                status: '1',\\n                desc: '后端研发中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00102',\\n                text: '前端组',\\n                deptCode: 'qd',\\n                status: '1',\\n                desc: '前端研发中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00103',\\n                text: 'UI设计',\\n                deptCode: 'sj',\\n                status: '1',\\n                desc: '交互、ui设计中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00104',\\n                text: '测试组',\\n                deptCode: 'cs',\\n                status: '1',\\n                desc: '测试组',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00105',\\n                text: '运维组',\\n                deptCode: 'yw',\\n                status: '1',\\n                desc: '运维、服务、巡检',\\n                parentId: '001'\\n              }\\n            ]\\n          },\\n          {\\n            id: '002',\\n            text: '项目部',\\n            deptCode: 'xmb',\\n            status: '1',\\n            desc: '项目服务部',\\n            parentId: null,\\n            children: [\\n              {\\n                id: '00201',\\n                text: '开发组',\\n                deptCode: 'kf',\\n                status: '1',\\n                desc: '后端项目开发',\\n                parentId: '002'\\n              },\\n              {\\n                id: '00202',\\n                text: '交付服务组',\\n                deptCode: 'jf',\\n                status: '1',\\n                desc: '交付项目，技术服务支持',\\n                parentId: '002'\\n              }\\n            ]\\n          }\\n        ],\\n        currentId: '',\\n        currentNode: {},\\n        checked: []\\n      }\\n    },\\n    methods: {\\n      defaultSelect() {\\n        this.currentId = '00102'\\n      },\\n      handleChange(val, node) {\\n        console.log(val, node)\\n        this.currentNode = node ? { id: node.id, text: node.text } : {}\\n      },\\n      setChecked() {\\n        this.checked = [\\\"002\\\", \\\"00201\\\", \\\"00202\\\"]\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_27 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"h3\", {\n  id: \"big-tree-chao-da-shu-ju\"\n}, \"Big-Tree 超大数据\", -1);\n\nvar _hoisted_28 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\"如果需要渲染超大数据量的属性结构，需要使用扩展组件\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", null, \"<b-big-tree>\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\",组件内部api基本复用树结构所有属性，对树形结构进行优化，利用可视区域位置来进行过滤筛选节点并进行操作， 但为了性能的提示必然要牺牲部分体验，因此大数据量的树结构不提供动画展开缩放效果\")], -1);\n\nvar _hoisted_29 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\"默认节点高度为\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", null, \"28px\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\"，可通过\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", null, \"visible-count\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\"指定树可是区域显示的节点个数，默认为15个 即\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", null, \"420px\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"o\" /* createTextVNode */])(\"因为是针对可视区域的滚动优化，因此必须指定容器高度\")], -1);\n\nvar _hoisted_30 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createElementVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div>\\n    <div style=\\\"margin-bottom: 8px;\\\">\\n      数据条数：\\n      <b-input-number v-model=\\\"number\\\"></b-input-number>\\n      <b-button @click=\\\"init\\\">渲染</b-button>\\n    </div>\\n    <div flex=\\\"main:justify\\\">\\n      <b-input v-model=\\\"query\\\" search placeholder=\\\"输入过滤条件后回车筛选\\\" @search=\\\"handleFilter\\\" style=\\\"width: 230px;\\\"></b-input>\\n      <b-button-group>\\n        <b-button @click=\\\"expandAll\\\">展开所有</b-button>\\n        <b-button @click=\\\"collapseAll\\\">收起所有</b-button>\\n      </b-button-group>\\n    </div>\\n    <b-divider style=\\\"margin: 14px 0;\\\"></b-divider>\\n    <b-big-tree ref=\\\"tree\\\" :data=\\\"data\\\" :visible-count=\\\"10\\\"\\n                @select-change=\\\"handleSelected\\\" :filter-node-method=\\\"filterNode\\\"></b-big-tree>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        number: 5000,\\n        query: '',\\n        data: []\\n      }\\n    },\\n    methods: {\\n      init() {\\n        this.data = this.$generateTree(this.number)\\n      },\\n      handleSelected(allSelected, node) {\\n        console.log(allSelected, node)\\n      },\\n      expandAll() {\\n        this.$refs.tree.expandAll()\\n      },\\n      collapseAll() {\\n        this.$refs.tree.collapseAll()\\n      },\\n      handleFilter(value) {\\n        this.$refs.tree.filter(value)\\n      },\\n      filterNode(value, node) {\\n        if (!value) return true;\\n        // return node.title===value.trim()\\n        return node.title.indexOf(value) !== -1;\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_31 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createStaticVNode */])(\"<h3 id=\\\"props\\\">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>data</td><td>可嵌套的节点属性的数组，生成 tree 的数据</td><td>Array</td><td>—</td><td>[]</td></tr><tr><td>multiple</td><td>是否支持多选</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>show-checkbox</td><td>是否显示多选框</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>empty-text</td><td>没有数据时的提示</td><td>String</td><td>—</td><td>暂无数据</td></tr><tr><td>load-data</td><td>异步加载数据的方法，见示例</td><td>Function</td><td>—</td><td>—</td></tr><tr><td>title-key</td><td>定义title键,默认title</td><td>String</td><td>—</td><td>title</td></tr><tr><td>children-key</td><td>定义子节点键,默认children为子节点key</td><td>String</td><td>—</td><td>children</td></tr><tr><td>check-strictly</td><td>复选框的情况下，是否严格的遵循父子不互相关联的做法</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>check-directly</td><td>开启后，在 show-checkbox 模式下，select 的交互也将转为 check</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>lock-select</td><td>锁定树选择，再部分业务中常用，比如开启弹窗后禁用树的选中操作</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>filter-node-method</td><td>筛选过滤树节点函数</td><td>Function</td><td>—</td><td>—</td></tr><tr><td>highlight-filter</td><td>高亮搜索条件文字</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>timeout</td><td>刷新频率（<code>&lt;b-big-tree&gt;</code>扩展组件可用）</td><td>Number</td><td>—</td><td>17</td></tr><tr><td>itemHeight</td><td>节点高度 （<code>&lt;b-big-tree&gt;</code>扩展组件可用）</td><td>Number</td><td>—</td><td>28</td></tr><tr><td>visibleCount</td><td>显示区域个数（<code>&lt;b-big-tree&gt;</code>扩展组件可用）</td><td>Number</td><td>—</td><td>15</td></tr></tbody></table><h3 id=\\\"events\\\">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>select-change</td><td>点击树节点时触发</td><td>当前已选中的节点数组、当前项、flatState</td></tr><tr><td>check-change</td><td>点击复选框时触发</td><td>当前已勾选节点的数组、当前项、包含半选的节点数组、flatState</td></tr><tr><td>toggle-expand</td><td>展开和收起子列表时触发</td><td>当前节点的数据</td></tr></tbody></table><h3 id=\\\"methods\\\">Methods</h3><table><thead><tr><th>事件名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>getFlatState</td><td>拍平的数组buffer，包含层级关系及索引 无</td><td></td></tr><tr><td>getCheckedNodes</td><td>获取被勾选的节点</td><td>无</td></tr><tr><td>getSelectedNodes</td><td>获取被选中的节点</td><td>无</td></tr><tr><td>getCheckedAndIndeterminateNodes</td><td>获取选中及半选节点</td><td>无</td></tr><tr><td>filter</td><td>树节点过滤函数，必须设置filter-node-method 过滤匹配函数</td><td>无</td></tr><tr><td>setChecked</td><td>设置node勾选 ，参数为 keys：nodeKey数组, flag：勾选状态，默认true</td><td>无</td></tr><tr><td>setSelected</td><td>设置node单选 ，参数为 keys：nodeKey数组, flag：勾选状态，默认true，expandParent：是否展开祖先节点，默认true</td><td>无</td></tr><tr><td>setExpand</td><td>设置node展开 ，参数为 keys：nodeKey数组, flag：勾选状态，默认true</td><td>无</td></tr><tr><td>expandAll</td><td>展开所有</td><td>无</td></tr><tr><td>collapseAll</td><td>收起所有</td><td>无</td></tr><tr><td>checkAll</td><td>勾选所有</td><td>无</td></tr><tr><td>unselectAll</td><td>取消所有单选</td><td>无</td></tr><tr><td>uncheckAll</td><td>取消全部勾选</td><td>无</td></tr></tbody></table><h3 id=\\\"children\\\">Children</h3><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>节点显示标题</td><td>String</td><td>—</td></tr><tr><td>expand</td><td>是否展开直子节点</td><td>Boolean</td><td>false</td></tr><tr><td>disabled</td><td>禁用</td><td>Boolean</td><td>false</td></tr><tr><td>disableCheckbox</td><td>禁用单选框</td><td>Boolean</td><td>false</td></tr><tr><td>selected</td><td>是否选中子节点</td><td>Boolean</td><td>false</td></tr><tr><td>checked</td><td>是否勾选(如果勾选，子节点也会全部勾选)</td><td>Boolean</td><td>false</td></tr><tr><td>visible</td><td>是否显示节点(可通过操作节点visible属性隐藏节点)</td><td>Boolean</td><td>false</td></tr><tr><td>children</td><td>子节点属性数组，可以设置tree 组件children-key属性来自定义</td><td>Array</td><td>—</td></tr><tr><td>loading</td><td>可设置为异步加载节点，需配合loadData设置加载函数</td><td>Boolean</td><td>—</td></tr><tr><td>isLeaf</td><td>是否为叶子节点，可控制是否显示箭头，可配合异步加载实现</td><td>Boolean</td><td>—</td></tr></tbody></table>\", 8);\n\nfunction treevue_type_template_id_11915a18_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_element_demo0 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo0\");\n\n  var _component_demo_block = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"demo-block\");\n\n  var _component_element_demo1 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo1\");\n\n  var _component_element_demo2 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo2\");\n\n  var _component_element_demo3 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo3\");\n\n  var _component_element_demo4 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo4\");\n\n  var _component_element_demo5 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo5\");\n\n  var _component_element_demo6 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo6\");\n\n  var _component_element_demo7 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo7\");\n\n  var _component_element_demo8 = Object(vue_runtime_esm_bundler[\"S\" /* resolveComponent */])(\"element-demo8\");\n\n  return Object(vue_runtime_esm_bundler[\"J\" /* openBlock */])(), Object(vue_runtime_esm_bundler[\"k\" /* createElementBlock */])(\"section\", treevue_type_template_id_11915a18_hoisted_1, [treevue_type_template_id_11915a18_hoisted_2, treevue_type_template_id_11915a18_hoisted_3, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo0)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [treevue_type_template_id_11915a18_hoisted_5];\n    }),\n    default: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [treevue_type_template_id_11915a18_hoisted_4];\n    }),\n    _: 1\n  }), treevue_type_template_id_11915a18_hoisted_6, treevue_type_template_id_11915a18_hoisted_7, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo1)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [treevue_type_template_id_11915a18_hoisted_8];\n    }),\n    _: 1\n  }), treevue_type_template_id_11915a18_hoisted_9, treevue_type_template_id_11915a18_hoisted_10, _hoisted_11, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo2)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [_hoisted_12];\n    }),\n    _: 1\n  }), _hoisted_13, _hoisted_14, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo3)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [_hoisted_15];\n    }),\n    _: 1\n  }), _hoisted_16, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo4)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [_hoisted_17];\n    }),\n    _: 1\n  }), _hoisted_18, _hoisted_19, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo5)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [_hoisted_20];\n    }),\n    _: 1\n  }), _hoisted_21, _hoisted_22, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo6)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [_hoisted_23];\n    }),\n    _: 1\n  }), _hoisted_24, _hoisted_25, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo7)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [_hoisted_26];\n    }),\n    _: 1\n  }), _hoisted_27, _hoisted_28, _hoisted_29, Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"p\" /* createVNode */])(_component_element_demo8)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"hb\" /* withCtx */])(function () {\n      return [_hoisted_30];\n    }),\n    _: 1\n  }), _hoisted_31]);\n}\n// CONCATENATED MODULE: ./examples/docs/tree.md?vue&type=template&id=11915a18\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--2-0!./build/md-loader!./examples/docs/tree.md?vue&type=script&lang=js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n/* harmony default export */ var treevue_type_script_lang_js = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _createTextVNode = vue_runtime_esm_bundler[\"o\" /* createTextVNode */],\n          _withCtx = vue_runtime_esm_bundler[\"hb\" /* withCtx */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n      var _hoisted_1 = {\n        flex: \"\"\n      };\n      var _hoisted_2 = {\n        style: {\n          \"width\": \"200px\"\n        }\n      };\n      var _hoisted_3 = {\n        style: {\n          \"width\": \"80px\"\n        }\n      };\n\n      var _hoisted_4 = /*#__PURE__*/_createTextVNode(\"锁定\");\n\n      var _hoisted_5 = /*#__PURE__*/_createTextVNode(\"解锁\");\n\n      var _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1);\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        var _component_b_switch = _resolveComponent(\"b-switch\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          onSelectChange: _ctx.handleSelect,\n          \"lock-select\": _ctx.lockSelect\n        }, null, 8, [\"data\", \"onSelectChange\", \"lock-select\"])]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_b_switch, {\n          modelValue: _ctx.lockSelect,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.lockSelect = $event;\n          }),\n          size: \"large\"\n        }, {\n          open: _withCtx(function () {\n            return [_hoisted_4];\n          }),\n          close: _withCtx(function () {\n            return [_hoisted_5];\n          }),\n          _: 1\n        }, 8, [\"modelValue\"])])]), _hoisted_6]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [{\n              title: '一级 1',\n              expand: true,\n              children: [{\n                title: '二级 1-1',\n                expand: true,\n                children: [{\n                  title: '三级 1-1-1'\n                }, {\n                  title: '三级 1-1-2'\n                }]\n              }, {\n                title: '二级 1-2',\n                expand: true,\n                children: [{\n                  title: '三级 1-2-1'\n                }, {\n                  title: '三级 1-2-2'\n                }]\n              }]\n            }],\n            lockSelect: false\n          };\n        },\n        methods: {\n          handleSelect: function handleSelect(selected, node) {\n            console.log(node);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo1\": function () {\n      var _createTextVNode = vue_runtime_esm_bundler[\"o\" /* createTextVNode */],\n          _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _withCtx = vue_runtime_esm_bundler[\"hb\" /* withCtx */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n\n      var _hoisted_1 = /*#__PURE__*/_createTextVNode(\"初始化数据并默认选中前端组\");\n\n      var _hoisted_2 = {\n        flex: \"\",\n        class: \"mt-10\"\n      };\n      var _hoisted_3 = {\n        style: {\n          \"width\": \"200px\"\n        }\n      };\n\n      var _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1);\n\n      function render(_ctx, _cache) {\n        var _component_b_button = _resolveComponent(\"b-button\");\n\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_b_button, {\n          onClick: _ctx.initData\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_1];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          ref: \"tree\",\n          onSelectChange: _ctx.handleSelect,\n          titleKey: \"text\"\n        }, null, 8, [\"data\", \"onSelectChange\"])])]), _hoisted_4]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [],\n            defaultId: '00102'\n          };\n        },\n        methods: {\n          initData: function initData() {\n            var _this = this;\n\n            // 初始化数据后\n            this.data = [{\n              id: '001',\n              text: '研发部',\n              deptCode: 'yfb',\n              status: '1',\n              desc: '研发中心',\n              parentId: null,\n              children: [{\n                id: '00101',\n                text: '后端组',\n                deptCode: 'hd',\n                status: '1',\n                desc: '后端研发中心',\n                parentId: '001'\n              }, {\n                id: '00102',\n                text: '前端组',\n                deptCode: 'qd',\n                status: '1',\n                desc: '前端研发中心',\n                parentId: '001'\n              }, {\n                id: '00103',\n                text: 'UI设计',\n                deptCode: 'sj',\n                status: '1',\n                desc: '交互、ui设计中心',\n                parentId: '001'\n              }, {\n                id: '00104',\n                text: '测试组',\n                deptCode: 'cs',\n                status: '1',\n                desc: '测试组',\n                parentId: '001'\n              }, {\n                id: '00105',\n                text: '运维组',\n                deptCode: 'yw',\n                status: '1',\n                desc: '运维、服务、巡检',\n                parentId: '001'\n              }]\n            }, {\n              id: '002',\n              text: '项目部',\n              deptCode: 'xmb',\n              status: '1',\n              desc: '项目服务部',\n              parentId: null,\n              children: [{\n                id: '00201',\n                text: '开发组',\n                deptCode: 'kf',\n                status: '1',\n                desc: '后端项目开发',\n                parentId: '002'\n              }, {\n                id: '00202',\n                text: '交付服务组',\n                deptCode: 'jf',\n                status: '1',\n                desc: '交付项目，技术服务支持',\n                parentId: '002'\n              }]\n            }];\n            this.$nextTick(function () {\n              // 获取树结构的拍平数据，查找当前需要选中的节点值\n              var flatState = _this.$refs.tree.getFlatState();\n\n              var current = flatState.find(function (node) {\n                return node.node.id === _this.defaultId;\n              });\n\n              if (current && current) {\n                _this.$refs.tree.setSelected([current.nodeKey]);\n              }\n            });\n          },\n          handleSelect: function handleSelect(selected, node) {\n            console.log(node);\n            this.$message(\"\\u9009\\u4E2D\\u8282\\u70B9\" + node.text);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo2\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          multiple: \"\",\n          onSelectChange: _ctx.handleSelect,\n          onCheckChange: _ctx.handleChecked\n        }, null, 8, [\"data\", \"onSelectChange\", \"onCheckChange\"])])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [{\n              title: '一级 1',\n              expand: true,\n              children: [{\n                title: '二级 1-1',\n                expand: true,\n                disabled: true,\n                children: [{\n                  title: '三级 1-1-1'\n                }, {\n                  title: '三级 1-1-2'\n                }]\n              }, {\n                title: '二级 1-2',\n                expand: true,\n                children: [{\n                  title: '三级 1-2-1'\n                }, {\n                  title: '三级 1-2-2'\n                }]\n              }]\n            }]\n          };\n        },\n        methods: {\n          handleSelect: function handleSelect(selected, node) {\n            console.log(selected);\n            console.log(node);\n          },\n          handleChecked: function handleChecked(checked, node) {\n            console.log(checked);\n            console.log(node);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo3\": function () {\n      var _createTextVNode = vue_runtime_esm_bundler[\"o\" /* createTextVNode */],\n          _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _withCtx = vue_runtime_esm_bundler[\"hb\" /* withCtx */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n      var _hoisted_1 = {\n        class: \"mb-16\"\n      };\n\n      var _hoisted_2 = /*#__PURE__*/_createTextVNode(\"展开全部\");\n\n      var _hoisted_3 = /*#__PURE__*/_createTextVNode(\"收起全部\");\n\n      var _hoisted_4 = /*#__PURE__*/_createTextVNode(\"展开三级\");\n\n      var _hoisted_5 = /*#__PURE__*/_createTextVNode(\"选择全部\");\n\n      var _hoisted_6 = /*#__PURE__*/_createTextVNode(\"取消全选\");\n\n      var _hoisted_7 = /*#__PURE__*/_createTextVNode(\"设置选中1-2及以下\");\n\n      var _hoisted_8 = /*#__PURE__*/_createTextVNode(\"单选 1-2-1\");\n\n      var _hoisted_9 = /*#__PURE__*/_createTextVNode(\"清空单选和多选\");\n\n      var _hoisted_10 = {\n        style: {\n          \"width\": \"300px\"\n        }\n      };\n\n      function render(_ctx, _cache) {\n        var _component_b_button = _resolveComponent(\"b-button\");\n\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_b_button, {\n          onClick: _ctx.expandAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_2];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.collapseAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_3];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.setExpand,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_4];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.checkAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_5];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.uncheckAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_6];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.setChecked,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_7];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.setSelected,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_8];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.clear,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_9];\n          }),\n          _: 1\n        }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          ref: \"tree\"\n        }, null, 8, [\"data\"])])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [{\n              title: '一级 1',\n              children: [{\n                title: '二级 1-1',\n                children: [{\n                  title: '三级 1-1-1'\n                }, {\n                  title: '三级 1-1-2'\n                }]\n              }, {\n                title: '二级 1-2',\n                children: [{\n                  title: '三级 1-2-1'\n                }, {\n                  title: '三级 1-2-2'\n                }]\n              }]\n            }, {\n              title: '一级 2',\n              children: [{\n                title: '二级 2-1'\n              }, {\n                title: '二级 2-2'\n              }]\n            }]\n          };\n        },\n        methods: {\n          expandAll: function expandAll() {\n            this.$refs.tree.expandAll();\n          },\n          collapseAll: function collapseAll() {\n            this.$refs.tree.collapseAll();\n          },\n          checkAll: function checkAll() {\n            this.$refs.tree.checkAll();\n          },\n          uncheckAll: function uncheckAll() {\n            this.$refs.tree.uncheckAll();\n          },\n          setChecked: function setChecked() {\n            // 默认是获取了nodeKey索引，如有特殊判断，如id，则可以自行根据flatState.find所有nodeKey值\n            this.$refs.tree.setChecked([5, 6]);\n          },\n          setSelected: function setSelected() {\n            this.$refs.tree.setSelected([5]);\n          },\n          clear: function clear() {\n            this.$refs.tree.uncheckAll();\n            this.$refs.tree.unselectAll();\n          },\n          setExpand: function setExpand() {\n            this.$refs.tree.setExpand([0, 4]);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo4\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_b_tree, {\n          data: _ctx.data3,\n          \"show-checkbox\": \"\",\n          \"load-data\": _ctx.loadData\n        }, null, 8, [\"data\", \"load-data\"])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data3: [{\n              title: 'root',\n              children: []\n            }, {\n              title: 'leaf',\n              isLeaf: true,\n              children: []\n            }]\n          };\n        },\n        methods: {\n          loadData: function loadData(item, callback) {\n            console.log(item);\n            setTimeout(function () {\n              var data = [{\n                title: 'have-child',\n                loading: false,\n                children: []\n              }, {\n                title: 'no-child',\n                loading: false,\n                children: []\n              }]; // 模拟请求数据有子项的时候\n\n              if (item.title === 'have-child') {\n                data = [{\n                  title: 'child1',\n                  loading: false,\n                  isLeaf: false,\n                  children: [],\n                  visible: true\n                }, {\n                  title: 'leaf node',\n                  isLeaf: true,\n                  children: []\n                }];\n              } else if (item.title === 'no-child') {\n                // 按需自行设置是否是叶子节点或者不设置\n                item['isLeaf'] = true; // 不设置会保留箭头可以再次点击\n                // data = []\n              }\n\n              callback(data);\n            }, 1000);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo5\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n\n      function render(_ctx, _cache) {\n        var _component_b_input = _resolveComponent(\"b-input\");\n\n        var _component_b_divider = _resolveComponent(\"b-divider\");\n\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createVNode(_component_b_input, {\n          modelValue: _ctx.query,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.query = $event;\n          }),\n          search: \"\",\n          placeholder: \"输入过滤条件后回车筛选\",\n          onSearch: _ctx.handleFilter,\n          style: {\n            \"width\": \"230px\"\n          }\n        }, null, 8, [\"modelValue\", \"onSearch\"]), _createVNode(_component_b_divider, {\n          style: {\n            \"margin\": \"14px 0\"\n          }\n        }), _createVNode(_component_b_tree, {\n          data: _ctx.data,\n          ref: \"treeRef\",\n          \"filter-node-method\": _ctx.filterNode,\n          \"highlight-filter\": \"\"\n        }, null, 8, [\"data\", \"filter-node-method\"])])]);\n      }\n\n      var reactive = vue_runtime_esm_bundler[\"N\" /* reactive */],\n          toRefs = vue_runtime_esm_bundler[\"Z\" /* toRefs */],\n          ref = vue_runtime_esm_bundler[\"O\" /* ref */];\n      var democomponentExport = {\n        setup: function setup() {\n          var states = reactive({\n            query: '',\n            data: [{\n              id: '1',\n              title: '江苏省',\n              children: [{\n                id: '1-1',\n                title: '南京市',\n                children: [{\n                  id: '1-1-1',\n                  title: '玄武区'\n                }, {\n                  id: '1-1-2',\n                  title: '鼓楼区'\n                }, {\n                  id: '1-1-3',\n                  title: '建邺区'\n                }, {\n                  id: '1-1-4',\n                  title: '秦淮区'\n                }]\n              }, {\n                id: '1-2',\n                title: '无锡市',\n                children: [{\n                  id: '1-2-1',\n                  title: '锡山区'\n                }, {\n                  id: '1-2-2',\n                  title: '惠山区'\n                }, {\n                  id: '1-2-3',\n                  title: '滨湖区'\n                }, {\n                  id: '1-2-4',\n                  title: '梁溪区'\n                }]\n              }, {\n                id: '1-3',\n                title: '徐州市',\n                children: [{\n                  id: '1-3-1',\n                  title: '鼓楼区'\n                }, {\n                  id: '1-3-2',\n                  title: '云龙区'\n                }, {\n                  id: '1-3-3',\n                  title: '泉山区'\n                }, {\n                  id: '1-3-4',\n                  title: '铜山区'\n                }, {\n                  id: '1-3-5',\n                  title: '贾汪区'\n                }, {\n                  id: '1-3-6',\n                  title: '沛县'\n                }, {\n                  id: '1-3-7',\n                  title: '丰县'\n                }, {\n                  id: '1-3-8',\n                  title: '睢宁县'\n                }, {\n                  id: '1-3-9',\n                  title: '新沂市'\n                }, {\n                  id: '1-3-10',\n                  title: '邳州市'\n                }]\n              }]\n            }, {\n              id: '2',\n              title: '河北省',\n              children: [{\n                id: '2-1',\n                title: '石家庄',\n                children: [{\n                  id: '2-1-1',\n                  title: '长安区'\n                }, {\n                  id: '2-1-2',\n                  title: '新华区'\n                }, {\n                  id: '2-1-3',\n                  title: '鼓楼区'\n                }]\n              }]\n            }]\n          });\n          var treeRef = ref(null);\n\n          var handleFilter = function handleFilter(value) {\n            treeRef.value.filter(value);\n          };\n\n          var filterNode = function filterNode(value, node) {\n            if (!value) return true; // return node.title===value.trim()\n\n            return node.title.indexOf(value) !== -1;\n          };\n\n          return _extends({}, toRefs(states), {\n            treeRef: treeRef,\n            handleFilter: handleFilter,\n            filterNode: filterNode\n          });\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo6\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n      var _hoisted_1 = {\n        style: {\n          \"width\": \"300px\"\n        }\n      };\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          render: _ctx.renderContent,\n          ref: \"tree\"\n        }, null, 8, [\"data\", \"render\"])])]);\n      }\n\n      var h = vue_runtime_esm_bundler[\"s\" /* h */];\n      var democomponentExport = {\n        data: function data() {\n          var _this2 = this;\n\n          return {\n            data: [{\n              title: 'parent 1',\n              expand: true,\n              render: function render(_ref) {\n                var root = _ref.root,\n                    node = _ref.node,\n                    data = _ref.data;\n                return h('span', {\n                  style: {\n                    display: 'inline-flex',\n                    justifyContent: 'space-between',\n                    width: '100%'\n                  }\n                }, [h('span', data.title), h('i', {\n                  'class': ['b-iconfont', 'b-icon-plus-square'],\n                  style: {\n                    fontSize: '16px',\n                    color: '#1089ff'\n                  },\n                  onClick: function onClick() {\n                    _this2.append(data);\n                  }\n                })]);\n              },\n              children: [{\n                title: 'child 1-1'\n              }, {\n                title: 'child 1-2'\n              }]\n            }],\n            id: 0\n          };\n        },\n        methods: {\n          renderContent: function renderContent(_ref2) {\n            var _this3 = this;\n\n            var root = _ref2.root,\n                node = _ref2.node,\n                data = _ref2.data;\n            return h('span', {\n              style: {\n                display: 'inline-flex',\n                justifyContent: 'space-between',\n                width: '100%'\n              }\n            }, [h('span', data.title), h('span', {\n              style: {\n                display: 'inline-block'\n              }\n            }, [h('i', {\n              'class': ['b-iconfont', 'b-icon-plus-circle'],\n              style: {\n                fontSize: '16px',\n                color: '#5d6d7e'\n              },\n              onClick: function onClick(e) {\n                e.stopPropagation();\n\n                _this3.append(data);\n              }\n            }), h('i', {\n              'class': ['b-iconfont', 'b-icon-minus-circle'],\n              style: {\n                fontSize: '16px',\n                color: '#f5222d'\n              },\n              onClick: function onClick(e) {\n                e.stopPropagation();\n\n                _this3.remove(root, node, data);\n              }\n            })])]);\n          },\n          append: function append(data) {\n            var children = data.children || [];\n            data.expand = true;\n            children.push({\n              title: 'new node'\n            });\n            data.children = children;\n            this.data = [].concat(this.data);\n          },\n          remove: function remove(root, node, data) {\n            console.log(root, node, data);\n            var parentKey = root.find(function (el) {\n              return el === node;\n            }).parent;\n            var parent = root.find(function (el) {\n              return el.nodeKey === parentKey;\n            }).node;\n            var index = parent.children.indexOf(data);\n            parent.children.splice(index, 1);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo7\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createTextVNode = vue_runtime_esm_bundler[\"o\" /* createTextVNode */],\n          _withCtx = vue_runtime_esm_bundler[\"hb\" /* withCtx */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _toDisplayString = vue_runtime_esm_bundler[\"W\" /* toDisplayString */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n      var _hoisted_1 = {\n        flex: \"\"\n      };\n      var _hoisted_2 = {\n        flex: \"\"\n      };\n\n      var _hoisted_3 = /*#__PURE__*/_createTextVNode(\"设置默认选中前端组\");\n\n      var _hoisted_4 = {\n        flex: \"\",\n        class: \"ml-16\"\n      };\n\n      var _hoisted_5 = /*#__PURE__*/_createTextVNode(\"设置默认勾选项目部\");\n\n      function render(_ctx, _cache) {\n        var _component_b_tree_select = _resolveComponent(\"b-tree-select\");\n\n        var _component_b_button = _resolveComponent(\"b-button\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_b_tree_select, {\n          style: {\n            \"width\": \"200px\"\n          },\n          data: _ctx.data,\n          modelValue: _ctx.currentId,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.currentId = $event;\n          }),\n          titleKey: \"text\",\n          onChange: _ctx.handleChange\n        }, null, 8, [\"data\", \"modelValue\", \"onChange\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.defaultSelect\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_3];\n          }),\n          _: 1\n        }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_b_tree_select, {\n          style: {\n            \"width\": \"200px\"\n          },\n          data: _ctx.data,\n          modelValue: _ctx.currentId,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.currentId = $event;\n          }),\n          checked: _ctx.checked,\n          \"onUpdate:checked\": _cache[2] || (_cache[2] = function ($event) {\n            return _ctx.checked = $event;\n          }),\n          titleKey: \"text\",\n          \"show-checkbox\": \"\",\n          onChange: _ctx.handleChange\n        }, null, 8, [\"data\", \"modelValue\", \"checked\", \"onChange\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.setChecked\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_5];\n          }),\n          _: 1\n        }, 8, [\"onClick\"])])]), _createElementVNode(\"div\", null, _toDisplayString(_ctx.currentId), 1), _createElementVNode(\"div\", null, _toDisplayString(_ctx.currentNode), 1), _createElementVNode(\"div\", null, _toDisplayString(_ctx.checked), 1)]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [{\n              id: '001',\n              text: '研发部',\n              deptCode: 'yfb',\n              status: '1',\n              desc: '研发中心',\n              parentId: null,\n              children: [{\n                id: '00101',\n                text: '后端组',\n                deptCode: 'hd',\n                status: '1',\n                desc: '后端研发中心',\n                parentId: '001'\n              }, {\n                id: '00102',\n                text: '前端组',\n                deptCode: 'qd',\n                status: '1',\n                desc: '前端研发中心',\n                parentId: '001'\n              }, {\n                id: '00103',\n                text: 'UI设计',\n                deptCode: 'sj',\n                status: '1',\n                desc: '交互、ui设计中心',\n                parentId: '001'\n              }, {\n                id: '00104',\n                text: '测试组',\n                deptCode: 'cs',\n                status: '1',\n                desc: '测试组',\n                parentId: '001'\n              }, {\n                id: '00105',\n                text: '运维组',\n                deptCode: 'yw',\n                status: '1',\n                desc: '运维、服务、巡检',\n                parentId: '001'\n              }]\n            }, {\n              id: '002',\n              text: '项目部',\n              deptCode: 'xmb',\n              status: '1',\n              desc: '项目服务部',\n              parentId: null,\n              children: [{\n                id: '00201',\n                text: '开发组',\n                deptCode: 'kf',\n                status: '1',\n                desc: '后端项目开发',\n                parentId: '002'\n              }, {\n                id: '00202',\n                text: '交付服务组',\n                deptCode: 'jf',\n                status: '1',\n                desc: '交付项目，技术服务支持',\n                parentId: '002'\n              }]\n            }],\n            currentId: '',\n            currentNode: {},\n            checked: []\n          };\n        },\n        methods: {\n          defaultSelect: function defaultSelect() {\n            this.currentId = '00102';\n          },\n          handleChange: function handleChange(val, node) {\n            console.log(val, node);\n            this.currentNode = node ? {\n              id: node.id,\n              text: node.text\n            } : {};\n          },\n          setChecked: function setChecked() {\n            this.checked = [\"002\", \"00201\", \"00202\"];\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo8\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"S\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"p\" /* createVNode */],\n          _createTextVNode = vue_runtime_esm_bundler[\"o\" /* createTextVNode */],\n          _withCtx = vue_runtime_esm_bundler[\"hb\" /* withCtx */],\n          _createElementVNode = vue_runtime_esm_bundler[\"l\" /* createElementVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"J\" /* openBlock */],\n          _createElementBlock = vue_runtime_esm_bundler[\"k\" /* createElementBlock */];\n      var _hoisted_1 = {\n        style: {\n          \"margin-bottom\": \"8px\"\n        }\n      };\n\n      var _hoisted_2 = /*#__PURE__*/_createTextVNode(\" 数据条数： \");\n\n      var _hoisted_3 = /*#__PURE__*/_createTextVNode(\"渲染\");\n\n      var _hoisted_4 = {\n        flex: \"main:justify\"\n      };\n\n      var _hoisted_5 = /*#__PURE__*/_createTextVNode(\"展开所有\");\n\n      var _hoisted_6 = /*#__PURE__*/_createTextVNode(\"收起所有\");\n\n      function render(_ctx, _cache) {\n        var _component_b_input_number = _resolveComponent(\"b-input-number\");\n\n        var _component_b_button = _resolveComponent(\"b-button\");\n\n        var _component_b_input = _resolveComponent(\"b-input\");\n\n        var _component_b_button_group = _resolveComponent(\"b-button-group\");\n\n        var _component_b_divider = _resolveComponent(\"b-divider\");\n\n        var _component_b_big_tree = _resolveComponent(\"b-big-tree\");\n\n        return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_b_input_number, {\n          modelValue: _ctx.number,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.number = $event;\n          })\n        }, null, 8, [\"modelValue\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.init\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_3];\n          }),\n          _: 1\n        }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_b_input, {\n          modelValue: _ctx.query,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.query = $event;\n          }),\n          search: \"\",\n          placeholder: \"输入过滤条件后回车筛选\",\n          onSearch: _ctx.handleFilter,\n          style: {\n            \"width\": \"230px\"\n          }\n        }, null, 8, [\"modelValue\", \"onSearch\"]), _createVNode(_component_b_button_group, null, {\n          default: _withCtx(function () {\n            return [_createVNode(_component_b_button, {\n              onClick: _ctx.expandAll\n            }, {\n              default: _withCtx(function () {\n                return [_hoisted_5];\n              }),\n              _: 1\n            }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n              onClick: _ctx.collapseAll\n            }, {\n              default: _withCtx(function () {\n                return [_hoisted_6];\n              }),\n              _: 1\n            }, 8, [\"onClick\"])];\n          }),\n          _: 1\n        })]), _createVNode(_component_b_divider, {\n          style: {\n            \"margin\": \"14px 0\"\n          }\n        }), _createVNode(_component_b_big_tree, {\n          ref: \"tree\",\n          data: _ctx.data,\n          \"visible-count\": 10,\n          onSelectChange: _ctx.handleSelected,\n          \"filter-node-method\": _ctx.filterNode\n        }, null, 8, [\"data\", \"onSelectChange\", \"filter-node-method\"])])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            number: 5000,\n            query: '',\n            data: []\n          };\n        },\n        methods: {\n          init: function init() {\n            this.data = this.$generateTree(this.number);\n          },\n          handleSelected: function handleSelected(allSelected, node) {\n            console.log(allSelected, node);\n          },\n          expandAll: function expandAll() {\n            this.$refs.tree.expandAll();\n          },\n          collapseAll: function collapseAll() {\n            this.$refs.tree.collapseAll();\n          },\n          handleFilter: function handleFilter(value) {\n            this.$refs.tree.filter(value);\n          },\n          filterNode: function filterNode(value, node) {\n            if (!value) return true; // return node.title===value.trim()\n\n            return node.title.indexOf(value) !== -1;\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }()\n  }\n});\n// CONCATENATED MODULE: ./examples/docs/tree.md?vue&type=script&lang=js\n \n// CONCATENATED MODULE: ./examples/docs/tree.md\n\n\n\ntreevue_type_script_lang_js.render = treevue_type_template_id_11915a18_render\n\n/* harmony default export */ var tree = __webpack_exports__[\"default\"] = (treevue_type_script_lang_js);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///711\n");

/***/ })

}]);