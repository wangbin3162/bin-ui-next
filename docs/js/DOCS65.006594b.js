(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[62],{

/***/ 711:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm-bundler.js + 3 modules\nvar vue_runtime_esm_bundler = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./build/md-loader!./examples/docs/tree.md?vue&type=template&id=afbfa88e\n\nvar treevue_type_template_id_afbfa88e_hoisted_1 = {\n  class: \"content element-doc\"\n};\n\nvar treevue_type_template_id_afbfa88e_hoisted_2 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h2\", {\n  id: \"tree-shu-jie-gou\"\n}, \"Tree 树结构\", -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_3 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"ji-chu-yong-fa\"\n}, \"基础用法\", -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_4 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"div\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", null, \"lockSelect\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\" 设置可以锁定树的选中事件，这个可以用来控制树菜单在不同情况下的操作\")])], -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_5 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div flex>\\n    <div style=\\\"width: 200px\\\">\\n      <b-tree :data=\\\"data\\\" @select-change=\\\"handleSelect\\\" :lock-select=\\\"lockSelect\\\"></b-tree>\\n    </div>\\n    <div style=\\\"width: 80px\\\">\\n      <b-switch v-model=\\\"lockSelect\\\" size=\\\"large\\\">\\n        <template #open>锁定</template>\\n        <template #close>解锁</template>\\n      </b-switch>\\n    </div>\\n  </div>\\n  <div>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: '一级 1',\\n            expand: true,\\n            children: [\\n              {\\n                title: '二级 1-1',\\n                expand: true,\\n                children: [\\n                  {title: '三级 1-1-1',},\\n                  {title: '三级 1-1-2'}\\n                ]\\n              },\\n              {\\n                title: '二级 1-2',\\n                expand: true,\\n                children: [\\n                  {title: '三级 1-2-1'},\\n                  {title: '三级 1-2-2'}\\n                ]\\n              }\\n            ]\\n          }\\n        ],\\n        lockSelect: false\\n      }\\n    },\\n    methods: {\\n      handleSelect(selected, node) {\\n        console.log(node)\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_6 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"e-wai-can-shu-pei-zhi\"\n}, \"额外参数配置\", -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_7 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\"可以配置额外参数设置，比如附加id，code等业务参数，也可以指定title显示的字段名称，默认为\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", null, \"title\")], -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_8 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <b-button @click=\\\"initData\\\">初始化数据并默认选中前端组</b-button>\\n  <div flex class=\\\"mt-10\\\">\\n    <div style=\\\"width: 200px\\\">\\n      <b-tree :data=\\\"data\\\" ref=\\\"tree\\\" @select-change=\\\"handleSelect\\\" titleKey=\\\"text\\\"></b-tree>\\n    </div>\\n  </div>\\n  <div>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [],\\n        defaultId: '00102'\\n      }\\n    },\\n    methods: {\\n      initData() {\\n        // 初始化数据后\\n        this.data = [\\n          {\\n            id: '001',\\n            text: '研发部',\\n            deptCode: 'yfb',\\n            status: '1',\\n            desc: '研发中心',\\n            parentId: null,\\n            children: [\\n              {\\n                id: '00101',\\n                text: '后端组',\\n                deptCode: 'hd',\\n                status: '1',\\n                desc: '后端研发中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00102',\\n                text: '前端组',\\n                deptCode: 'qd',\\n                status: '1',\\n                desc: '前端研发中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00103',\\n                text: 'UI设计',\\n                deptCode: 'sj',\\n                status: '1',\\n                desc: '交互、ui设计中心',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00104',\\n                text: '测试组',\\n                deptCode: 'cs',\\n                status: '1',\\n                desc: '测试组',\\n                parentId: '001'\\n              },\\n              {\\n                id: '00105',\\n                text: '运维组',\\n                deptCode: 'yw',\\n                status: '1',\\n                desc: '运维、服务、巡检',\\n                parentId: '001'\\n              }\\n            ]\\n          },\\n          {\\n            id: '002',\\n            text: '项目部',\\n            deptCode: 'xmb',\\n            status: '1',\\n            desc: '项目服务部',\\n            parentId: null,\\n            children: [\\n              {\\n                id: '00201',\\n                text: '开发组',\\n                deptCode: 'kf',\\n                status: '1',\\n                desc: '后端项目开发',\\n                parentId: '002'\\n              },\\n              {\\n                id: '00202',\\n                text: '交付服务组',\\n                deptCode: 'jf',\\n                status: '1',\\n                desc: '交付项目，技术服务支持',\\n                parentId: '002'\\n              }\\n            ]\\n          }\\n        ]\\n        this.$nextTick(() => {\\n          // 获取树结构的拍平数据，查找当前需要选中的节点值\\n          const flatState = this.$refs.tree.getFlatState()\\n          const current = flatState.find(node => node.node.id === this.defaultId)\\n          if (current && current) {\\n            this.$refs.tree.setSelected([current.nodeKey])\\n          }\\n        })\\n      },\\n      handleSelect(selected, node) {\\n        console.log(node)\\n        this.$message(`选中节点${node.text}`)\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_9 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"qi-ta-shu-xing\"\n}, \"其他属性\", -1);\n\nvar treevue_type_template_id_afbfa88e_hoisted_10 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, \"可以设置show-checkbox开启勾选，并可以设置数据格式中的默认选中\", -1);\n\nvar _hoisted_11 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, \"expand、selected、checked 和 disabled 可以设置展开，选中，勾选和禁用。multiple 开启多选\", -1);\n\nvar _hoisted_12 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div>\\n    <b-tree :data=\\\"data\\\" show-checkbox multiple @select-change=\\\"handleSelect\\\" @check-change=\\\"handleChecked\\\"></b-tree>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: '一级 1',\\n            expand: true,\\n            children: [\\n              {\\n                title: '二级 1-1',\\n                expand: true,\\n                disabled: true,\\n                children: [\\n                  {title: '三级 1-1-1',},\\n                  {title: '三级 1-1-2'}\\n                ]\\n              },\\n              {\\n                title: '二级 1-2',\\n                expand: true,\\n                children: [\\n                  {title: '三级 1-2-1'},\\n                  {title: '三级 1-2-2'}\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    methods: {\\n      handleSelect(selected, node) {\\n        console.log(selected)\\n        console.log(node)\\n      },\\n      handleChecked(checked, node) {\\n        console.log(checked)\\n        console.log(node)\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_13 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"shu-jie-dian-de-cao-zuo\"\n}, \"树节点的操作\", -1);\n\nvar _hoisted_14 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, \"树结构默认拍平了所有节点数组，并塞入了唯一的nodeKey值用于索引节点，这样可以方便快捷的获取和设置树的状态\", -1);\n\nvar _hoisted_15 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div class=\\\"mb-16\\\">\\n    <b-button @click=\\\"expandAll\\\" size=\\\"small\\\">展开全部</b-button>\\n    <b-button @click=\\\"collapseAll\\\" size=\\\"small\\\">收起全部</b-button>\\n    <b-button @click=\\\"setExpand\\\" size=\\\"small\\\">展开三级</b-button>\\n    <b-button @click=\\\"checkAll\\\" size=\\\"small\\\">选择全部</b-button>\\n    <b-button @click=\\\"uncheckAll\\\" size=\\\"small\\\">取消全选</b-button>\\n    <b-button @click=\\\"setChecked\\\" size=\\\"small\\\">设置选中1-2及以下</b-button>\\n    <b-button @click=\\\"setSelected\\\" size=\\\"small\\\">单选 1-2-1</b-button>\\n    <b-button @click=\\\"clear\\\" size=\\\"small\\\">清空单选和多选</b-button>\\n  </div>\\n  <div style=\\\"width: 300px;\\\">\\n    <b-tree :data=\\\"data\\\" show-checkbox ref=\\\"tree\\\"></b-tree>\\n  </div>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: '一级 1',\\n            children: [\\n              {\\n                title: '二级 1-1',\\n                children: [\\n                  {title: '三级 1-1-1',},\\n                  {title: '三级 1-1-2'}\\n                ]\\n              },\\n              {\\n                title: '二级 1-2',\\n                children: [\\n                  {title: '三级 1-2-1'},\\n                  {title: '三级 1-2-2'}\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            title: '一级 2',\\n            children: [\\n              {\\n                title: '二级 2-1',\\n              },\\n              {\\n                title: '二级 2-2',\\n              }\\n            ]\\n          }\\n        ],\\n      }\\n    },\\n    methods: {\\n      expandAll() {\\n        this.$refs.tree.expandAll()\\n      },\\n      collapseAll() {\\n        this.$refs.tree.collapseAll()\\n      },\\n      checkAll() {\\n        this.$refs.tree.checkAll()\\n      },\\n      uncheckAll() {\\n        this.$refs.tree.uncheckAll()\\n      },\\n      setChecked() {\\n        // 默认是获取了nodeKey索引，如有特殊判断，如id，则可以自行根据flatState.find所有nodeKey值\\n        this.$refs.tree.setChecked([5, 6])\\n      },\\n      setSelected() {\\n        this.$refs.tree.setSelected([5])\\n      },\\n      clear() {\\n        this.$refs.tree.uncheckAll()\\n        this.$refs.tree.unselectAll()\\n      },\\n      setExpand() {\\n        this.$refs.tree.setExpand([0, 4])\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_16 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"yi-bu-jia-zai-zi-jie-dian\"\n}, \"异步加载子节点\", -1);\n\nvar _hoisted_17 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <b-tree :data=\\\"data3\\\" show-checkbox :load-data=\\\"loadData\\\"></b-tree>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data3: [\\n          {\\n            title: 'root',\\n            children: []\\n          },\\n          {\\n            title: 'leaf',\\n            isLeaf: true,\\n            children: []\\n          }\\n        ]\\n      }\\n    },\\n    methods: {\\n      loadData(item, callback) {\\n        console.log(item)\\n        setTimeout(() => {\\n          let data = [\\n            {\\n              title: 'have-child',\\n              loading: false,\\n              children: []\\n            },\\n            {\\n              title: 'no-child',\\n              loading: false,\\n              children: []\\n            }\\n          ]\\n          // 模拟请求数据有子项的时候\\n          if (item.title === 'have-child') {\\n            data = [\\n              {\\n                title: 'child1',\\n                loading: false,\\n                isLeaf: false,\\n                children: [],\\n                visible: true\\n              },\\n              {\\n                title: 'leaf node',\\n                isLeaf: true,\\n                children: []\\n              }\\n            ]\\n          } else if (item.title === 'no-child') {\\n            // 按需自行设置是否是叶子节点或者不设置\\n            item['isLeaf'] = true\\n            // 不设置会保留箭头可以再次点击\\n            // data = []\\n          }\\n\\n          callback(data);\\n        }, 1000);\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_18 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"ke-yi-shai-xuan\"\n}, \"可以筛选\", -1);\n\nvar _hoisted_19 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, \"如果树结构层级较多，可配合过滤函数进行过滤筛选\", -1);\n\nvar _hoisted_20 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div>\\n    <b-input v-model=\\\"query\\\" search placeholder=\\\"输入过滤条件后回车筛选\\\" @search=\\\"handleFilter\\\" style=\\\"width: 230px;\\\"></b-input>\\n    <b-divider style=\\\"margin: 14px 0;\\\"></b-divider>\\n    <b-tree :data=\\\"data\\\" ref=\\\"treeRef\\\" :filter-node-method=\\\"filterNode\\\"></b-tree>\\n  </div>\\n</template>\\n<script>\\n  import {reactive, toRefs, ref} from 'vue'\\n\\n  export default {\\n    setup() {\\n      const states = reactive({\\n        query: '',\\n        data: [\\n          {\\n            id: '1',\\n            title: '江苏省',\\n            children: [\\n              {\\n                id: '1-1',\\n                title: '南京市',\\n                children: [\\n                  {id: '1-1-1', title: '玄武区'},\\n                  {id: '1-1-2', title: '鼓楼区'},\\n                  {id: '1-1-3', title: '建邺区'},\\n                  {id: '1-1-4', title: '秦淮区'}\\n                ]\\n              },\\n              {\\n                id: '1-2',\\n                title: '无锡市',\\n                children: [\\n                  {id: '1-2-1', title: '锡山区'},\\n                  {id: '1-2-2', title: '惠山区'},\\n                  {id: '1-2-3', title: '滨湖区'},\\n                  {id: '1-2-4', title: '梁溪区'}\\n                ]\\n              },\\n              {\\n                id: '1-3',\\n                title: '徐州市',\\n                children: [\\n                  {id: '1-3-1', title: '鼓楼区'},\\n                  {id: '1-3-2', title: '云龙区'},\\n                  {id: '1-3-3', title: '泉山区'},\\n                  {id: '1-3-4', title: '铜山区'},\\n                  {id: '1-3-5', title: '贾汪区'},\\n                  {id: '1-3-6', title: '沛县'},\\n                  {id: '1-3-7', title: '丰县'},\\n                  {id: '1-3-8', title: '睢宁县'},\\n                  {id: '1-3-9', title: '新沂市'},\\n                  {id: '1-3-10', title: '邳州市'}\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            id: '2',\\n            title: '河北省',\\n            children: [\\n              {\\n                id: '2-1',\\n                title: '石家庄',\\n                children: [\\n                  {id: '2-1-1', title: '长安区'},\\n                  {id: '2-1-2', title: '新华区'},\\n                  {id: '2-1-3', title: '鼓楼区'}\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      })\\n      const treeRef = ref(null)\\n      const handleFilter = (value) => {\\n        treeRef.value.filter(value)\\n      }\\n      const filterNode = (value, node) => {\\n        if (!value) return true;\\n        // return node.title===value.trim()\\n        return node.title.indexOf(value) !== -1;\\n      }\\n      return {\\n        ...toRefs(states),\\n        treeRef,\\n        handleFilter,\\n        filterNode\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_21 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"renderhan-shu\"\n}, \"render函数\", -1);\n\nvar _hoisted_22 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, \"使用render函数可以设置更多自定义的效果\", -1);\n\nvar _hoisted_23 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div style=\\\"width: 300px;\\\">\\n    <b-tree :data=\\\"data\\\" :render=\\\"renderContent\\\" ref=\\\"tree\\\"></b-tree>\\n  </div>\\n</template>\\n<script>\\n  import {h} from 'vue'\\n\\n  export default {\\n    data() {\\n      return {\\n        data: [\\n          {\\n            title: 'parent 1',\\n            expand: true,\\n            render: ({root, node, data}) => {\\n              return h('span', {\\n                style: {display: 'inline-flex', justifyContent: 'space-between', width: '100%',}\\n              }, [\\n                h('span', data.title),\\n                h('i', {\\n                  'class': ['b-iconfont', 'b-icon-plus-square'],\\n                  style: {fontSize: '16px', color: '#1089ff'},\\n                  onClick: () => {\\n                    this.append(data)\\n                  }\\n                })\\n              ]);\\n            },\\n            children: [\\n              {title: 'child 1-1',},\\n              {title: 'child 1-2',}\\n            ]\\n          }\\n        ],\\n        id: 0,\\n      }\\n    },\\n    methods: {\\n      renderContent({root, node, data}) {\\n        return h('span', {\\n          style: {display: 'inline-flex', justifyContent: 'space-between', width: '100%',}\\n        }, [\\n          h('span', data.title),\\n          h('span', {style: {display: 'inline-block',}}, [\\n            h('i', {\\n              'class': ['b-iconfont', 'b-icon-plus-circle'],\\n              style: {fontSize: '16px', color: '#5d6d7e'},\\n              onClick: (e) => {\\n                e.stopPropagation()\\n                this.append(data)\\n              }\\n            }),\\n            h('i', {\\n              'class': ['b-iconfont', 'b-icon-minus-circle'],\\n              style: {fontSize: '16px', color: '#f5222d'},\\n              onClick: (e) => {\\n                e.stopPropagation()\\n                this.remove(root, node, data)\\n              }\\n            })\\n          ])\\n        ]);\\n      },\\n      append(data) {\\n        const children = data.children || [];\\n        data.expand = true\\n        children.push({title: 'new node'});\\n        data.children = children\\n        this.data = [...this.data]\\n      },\\n      remove(root, node, data) {\\n        console.log(root, node, data)\\n        const parentKey = root.find(el => el === node).parent;\\n        const parent = root.find(el => el.nodeKey === parentKey).node;\\n        const index = parent.children.indexOf(data);\\n        parent.children.splice(index, 1);\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_24 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"h3\", {\n  id: \"big-tree-chao-da-shu-ju-liang-de-shu-jie-gou\"\n}, \"Big-Tree 超大数据量的树结构\", -1);\n\nvar _hoisted_25 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\"如果需要渲染超大数据量的属性结构，需要使用扩展组件\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", null, \"<b-big-tree>\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\",组件内部api基本复用树结构所有属性，对树形结构进行优化，利用可视区域位置来进行过滤筛选节点并进行操作， 但为了性能的提示必然要牺牲部分体验，因此大数据量的树结构不提供动画展开缩放效果\")], -1);\n\nvar _hoisted_26 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"p\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\"默认节点高度为\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", null, \"28px\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\"，可通过\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", null, \"visible-count\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\"指定树可是区域显示的节点个数，默认为15个 即\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", null, \"420px\"), /*#__PURE__*/Object(vue_runtime_esm_bundler[\"m\" /* createTextVNode */])(\"因为是针对可视区域的滚动优化，因此必须指定容器高度\")], -1);\n\nvar _hoisted_27 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"pre\", null, [/*#__PURE__*/Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(\"code\", {\n  class: \"html\"\n}, \"\\n<template>\\n  <div>\\n    <div style=\\\"margin-bottom: 8px;\\\">\\n      数据条数：\\n      <b-input-number v-model=\\\"number\\\"></b-input-number>\\n      <b-button @click=\\\"init\\\">渲染</b-button>\\n    </div>\\n    <div flex=\\\"main:justify\\\">\\n      <b-input v-model=\\\"query\\\" search placeholder=\\\"输入过滤条件后回车筛选\\\" @search=\\\"handleFilter\\\" style=\\\"width: 230px;\\\"></b-input>\\n      <b-button-group>\\n        <b-button @click=\\\"expandAll\\\">展开所有</b-button>\\n        <b-button @click=\\\"collapseAll\\\">收起所有</b-button>\\n      </b-button-group>\\n    </div>\\n    <b-divider style=\\\"margin: 14px 0;\\\"></b-divider>\\n    <b-big-tree ref=\\\"tree\\\" :data=\\\"data\\\" :visible-count=\\\"10\\\"\\n                @select-change=\\\"handleSelected\\\" :filter-node-method=\\\"filterNode\\\"></b-big-tree>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        number: 5000,\\n        query: '',\\n        data: []\\n      }\\n    },\\n    methods: {\\n      init() {\\n        this.data = this.$generateTree(this.number)\\n      },\\n      handleSelected(allSelected, node) {\\n        console.log(allSelected, node)\\n      },\\n      expandAll() {\\n        this.$refs.tree.expandAll()\\n      },\\n      collapseAll() {\\n        this.$refs.tree.collapseAll()\\n      },\\n      handleFilter(value) {\\n        this.$refs.tree.filter(value)\\n      },\\n      filterNode(value, node) {\\n        if (!value) return true;\\n        // return node.title===value.trim()\\n        return node.title.indexOf(value) !== -1;\\n      }\\n    }\\n  }\\n</script>\\n\")], -1);\n\nvar _hoisted_28 = /*#__PURE__*/Object(vue_runtime_esm_bundler[\"l\" /* createStaticVNode */])(\"<h3 id=\\\"props\\\">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>data</td><td>可嵌套的节点属性的数组，生成 tree 的数据</td><td>Array</td><td>—</td><td>[]</td></tr><tr><td>multiple</td><td>是否支持多选</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>show-checkbox</td><td>是否显示多选框</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>empty-text</td><td>没有数据时的提示</td><td>String</td><td>—</td><td>暂无数据</td></tr><tr><td>load-data</td><td>异步加载数据的方法，见示例</td><td>Function</td><td>—</td><td>—</td></tr><tr><td>title-key</td><td>定义title键,默认title</td><td>String</td><td>—</td><td>title</td></tr><tr><td>children-key</td><td>定义子节点键,默认children为子节点key</td><td>String</td><td>—</td><td>children</td></tr><tr><td>check-strictly</td><td>复选框的情况下，是否严格的遵循父子不互相关联的做法</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>check-directly</td><td>开启后，在 show-checkbox 模式下，select 的交互也将转为 check</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>lock-select</td><td>锁定树选择，再部分业务中常用，比如开启弹窗后禁用树的选中操作</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>filter-node-method</td><td>筛选过滤树节点函数</td><td>Function</td><td>—</td><td>—</td></tr><tr><td>timeout</td><td>刷新频率（<code>&lt;b-big-tree&gt;</code>扩展组件可用）</td><td>Number</td><td>—</td><td>17</td></tr><tr><td>itemHeight</td><td>节点高度 （<code>&lt;b-big-tree&gt;</code>扩展组件可用）</td><td>Number</td><td>—</td><td>28</td></tr><tr><td>visibleCount</td><td>显示区域个数（<code>&lt;b-big-tree&gt;</code>扩展组件可用）</td><td>Number</td><td>—</td><td>15</td></tr></tbody></table><h3 id=\\\"events\\\">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>select-change</td><td>点击树节点时触发</td><td>当前已选中的节点数组、当前项、flatState</td></tr><tr><td>check-change</td><td>点击复选框时触发</td><td>当前已勾选节点的数组、当前项、包含半选的节点数组、flatState</td></tr><tr><td>toggle-expand</td><td>展开和收起子列表时触发</td><td>当前节点的数据</td></tr></tbody></table><h3 id=\\\"methods\\\">Methods</h3><table><thead><tr><th>事件名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>getFlatState</td><td>拍平的数组buffer，包含层级关系及索引 无</td><td></td></tr><tr><td>getCheckedNodes</td><td>获取被勾选的节点</td><td>无</td></tr><tr><td>getSelectedNodes</td><td>获取被选中的节点</td><td>无</td></tr><tr><td>getCheckedAndIndeterminateNodes</td><td>获取选中及半选节点</td><td>无</td></tr><tr><td>filter</td><td>树节点过滤函数，必须设置filter-node-method 过滤匹配函数</td><td>无</td></tr><tr><td>setChecked</td><td>设置node勾选 ，参数为 keys：nodeKey数组, flag：勾选状态，默认true</td><td>无</td></tr><tr><td>setSelected</td><td>设置node单选 ，参数为 keys：nodeKey数组, flag：勾选状态，默认true，expandParent：是否展开祖先节点，默认true</td><td>无</td></tr><tr><td>setExpand</td><td>设置node展开 ，参数为 keys：nodeKey数组, flag：勾选状态，默认true</td><td>无</td></tr><tr><td>expandAll</td><td>展开所有</td><td>无</td></tr><tr><td>collapseAll</td><td>收起所有</td><td>无</td></tr><tr><td>checkAll</td><td>勾选所有</td><td>无</td></tr><tr><td>unselectAll</td><td>取消所有单选</td><td>无</td></tr><tr><td>uncheckAll</td><td>取消全部勾选</td><td>无</td></tr></tbody></table><h3 id=\\\"children\\\">Children</h3><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>节点显示标题</td><td>String</td><td>—</td></tr><tr><td>expand</td><td>是否展开直子节点</td><td>Boolean</td><td>false</td></tr><tr><td>disabled</td><td>禁用</td><td>Boolean</td><td>false</td></tr><tr><td>disableCheckbox</td><td>禁用单选框</td><td>Boolean</td><td>false</td></tr><tr><td>selected</td><td>是否选中子节点</td><td>Boolean</td><td>false</td></tr><tr><td>checked</td><td>是否勾选(如果勾选，子节点也会全部勾选)</td><td>Boolean</td><td>false</td></tr><tr><td>visible</td><td>是否显示节点(可通过操作节点visible属性隐藏节点)</td><td>Boolean</td><td>false</td></tr><tr><td>children</td><td>子节点属性数组，可以设置tree 组件children-key属性来自定义</td><td>Array</td><td>—</td></tr><tr><td>loading</td><td>可设置为异步加载节点，需配合loadData设置加载函数</td><td>Boolean</td><td>—</td></tr><tr><td>isLeaf</td><td>是否为叶子节点，可控制是否显示箭头，可配合异步加载实现</td><td>Boolean</td><td>—</td></tr></tbody></table>\", 8);\n\nfunction treevue_type_template_id_afbfa88e_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_element_demo0 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo0\");\n\n  var _component_demo_block = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"demo-block\");\n\n  var _component_element_demo1 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo1\");\n\n  var _component_element_demo2 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo2\");\n\n  var _component_element_demo3 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo3\");\n\n  var _component_element_demo4 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo4\");\n\n  var _component_element_demo5 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo5\");\n\n  var _component_element_demo6 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo6\");\n\n  var _component_element_demo7 = Object(vue_runtime_esm_bundler[\"N\" /* resolveComponent */])(\"element-demo7\");\n\n  return Object(vue_runtime_esm_bundler[\"E\" /* openBlock */])(), Object(vue_runtime_esm_bundler[\"i\" /* createBlock */])(\"section\", treevue_type_template_id_afbfa88e_hoisted_1, [treevue_type_template_id_afbfa88e_hoisted_2, treevue_type_template_id_afbfa88e_hoisted_3, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo0)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [treevue_type_template_id_afbfa88e_hoisted_5];\n    }),\n    default: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [treevue_type_template_id_afbfa88e_hoisted_4];\n    }),\n    _: 1\n  }), treevue_type_template_id_afbfa88e_hoisted_6, treevue_type_template_id_afbfa88e_hoisted_7, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo1)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [treevue_type_template_id_afbfa88e_hoisted_8];\n    }),\n    _: 1\n  }), treevue_type_template_id_afbfa88e_hoisted_9, treevue_type_template_id_afbfa88e_hoisted_10, _hoisted_11, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo2)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [_hoisted_12];\n    }),\n    _: 1\n  }), _hoisted_13, _hoisted_14, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo3)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [_hoisted_15];\n    }),\n    _: 1\n  }), _hoisted_16, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo4)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [_hoisted_17];\n    }),\n    _: 1\n  }), _hoisted_18, _hoisted_19, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo5)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [_hoisted_20];\n    }),\n    _: 1\n  }), _hoisted_21, _hoisted_22, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo6)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [_hoisted_23];\n    }),\n    _: 1\n  }), _hoisted_24, _hoisted_25, _hoisted_26, Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_demo_block, null, {\n    source: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [Object(vue_runtime_esm_bundler[\"n\" /* createVNode */])(_component_element_demo7)];\n    }),\n    highlight: Object(vue_runtime_esm_bundler[\"cb\" /* withCtx */])(function () {\n      return [_hoisted_27];\n    }),\n    _: 1\n  }), _hoisted_28]);\n}\n// CONCATENATED MODULE: ./examples/docs/tree.md?vue&type=template&id=afbfa88e\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--2-0!./build/md-loader!./examples/docs/tree.md?vue&type=script&lang=js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n/* harmony default export */ var treevue_type_script_lang_js = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _createTextVNode = vue_runtime_esm_bundler[\"m\" /* createTextVNode */],\n          _withCtx = vue_runtime_esm_bundler[\"cb\" /* withCtx */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n      var _hoisted_1 = {\n        flex: \"\"\n      };\n      var _hoisted_2 = {\n        style: {\n          \"width\": \"200px\"\n        }\n      };\n      var _hoisted_3 = {\n        style: {\n          \"width\": \"80px\"\n        }\n      };\n\n      var _hoisted_4 = /*#__PURE__*/_createTextVNode(\"锁定\");\n\n      var _hoisted_5 = /*#__PURE__*/_createTextVNode(\"解锁\");\n\n      var _hoisted_6 = /*#__PURE__*/_createVNode(\"div\", null, null, -1);\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        var _component_b_switch = _resolveComponent(\"b-switch\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(\"div\", _hoisted_1, [_createVNode(\"div\", _hoisted_2, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          onSelectChange: _ctx.handleSelect,\n          \"lock-select\": _ctx.lockSelect\n        }, null, 8, [\"data\", \"onSelectChange\", \"lock-select\"])]), _createVNode(\"div\", _hoisted_3, [_createVNode(_component_b_switch, {\n          modelValue: _ctx.lockSelect,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.lockSelect = $event;\n          }),\n          size: \"large\"\n        }, {\n          open: _withCtx(function () {\n            return [_hoisted_4];\n          }),\n          close: _withCtx(function () {\n            return [_hoisted_5];\n          }),\n          _: 1\n        }, 8, [\"modelValue\"])])]), _hoisted_6]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [{\n              title: '一级 1',\n              expand: true,\n              children: [{\n                title: '二级 1-1',\n                expand: true,\n                children: [{\n                  title: '三级 1-1-1'\n                }, {\n                  title: '三级 1-1-2'\n                }]\n              }, {\n                title: '二级 1-2',\n                expand: true,\n                children: [{\n                  title: '三级 1-2-1'\n                }, {\n                  title: '三级 1-2-2'\n                }]\n              }]\n            }],\n            lockSelect: false\n          };\n        },\n        methods: {\n          handleSelect: function handleSelect(selected, node) {\n            console.log(node);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo1\": function () {\n      var _createTextVNode = vue_runtime_esm_bundler[\"m\" /* createTextVNode */],\n          _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _withCtx = vue_runtime_esm_bundler[\"cb\" /* withCtx */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n\n      var _hoisted_1 = /*#__PURE__*/_createTextVNode(\"初始化数据并默认选中前端组\");\n\n      var _hoisted_2 = {\n        flex: \"\",\n        class: \"mt-10\"\n      };\n      var _hoisted_3 = {\n        style: {\n          \"width\": \"200px\"\n        }\n      };\n\n      var _hoisted_4 = /*#__PURE__*/_createVNode(\"div\", null, null, -1);\n\n      function render(_ctx, _cache) {\n        var _component_b_button = _resolveComponent(\"b-button\");\n\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(_component_b_button, {\n          onClick: _ctx.initData\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_1];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(\"div\", _hoisted_2, [_createVNode(\"div\", _hoisted_3, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          ref: \"tree\",\n          onSelectChange: _ctx.handleSelect,\n          titleKey: \"text\"\n        }, null, 8, [\"data\", \"onSelectChange\"])])]), _hoisted_4]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [],\n            defaultId: '00102'\n          };\n        },\n        methods: {\n          initData: function initData() {\n            var _this = this;\n\n            // 初始化数据后\n            this.data = [{\n              id: '001',\n              text: '研发部',\n              deptCode: 'yfb',\n              status: '1',\n              desc: '研发中心',\n              parentId: null,\n              children: [{\n                id: '00101',\n                text: '后端组',\n                deptCode: 'hd',\n                status: '1',\n                desc: '后端研发中心',\n                parentId: '001'\n              }, {\n                id: '00102',\n                text: '前端组',\n                deptCode: 'qd',\n                status: '1',\n                desc: '前端研发中心',\n                parentId: '001'\n              }, {\n                id: '00103',\n                text: 'UI设计',\n                deptCode: 'sj',\n                status: '1',\n                desc: '交互、ui设计中心',\n                parentId: '001'\n              }, {\n                id: '00104',\n                text: '测试组',\n                deptCode: 'cs',\n                status: '1',\n                desc: '测试组',\n                parentId: '001'\n              }, {\n                id: '00105',\n                text: '运维组',\n                deptCode: 'yw',\n                status: '1',\n                desc: '运维、服务、巡检',\n                parentId: '001'\n              }]\n            }, {\n              id: '002',\n              text: '项目部',\n              deptCode: 'xmb',\n              status: '1',\n              desc: '项目服务部',\n              parentId: null,\n              children: [{\n                id: '00201',\n                text: '开发组',\n                deptCode: 'kf',\n                status: '1',\n                desc: '后端项目开发',\n                parentId: '002'\n              }, {\n                id: '00202',\n                text: '交付服务组',\n                deptCode: 'jf',\n                status: '1',\n                desc: '交付项目，技术服务支持',\n                parentId: '002'\n              }]\n            }];\n            this.$nextTick(function () {\n              // 获取树结构的拍平数据，查找当前需要选中的节点值\n              var flatState = _this.$refs.tree.getFlatState();\n\n              var current = flatState.find(function (node) {\n                return node.node.id === _this.defaultId;\n              });\n\n              if (current && current) {\n                _this.$refs.tree.setSelected([current.nodeKey]);\n              }\n            });\n          },\n          handleSelect: function handleSelect(selected, node) {\n            console.log(node);\n            this.$message(\"\\u9009\\u4E2D\\u8282\\u70B9\" + node.text);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo2\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(\"div\", null, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          multiple: \"\",\n          onSelectChange: _ctx.handleSelect,\n          onCheckChange: _ctx.handleChecked\n        }, null, 8, [\"data\", \"onSelectChange\", \"onCheckChange\"])])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [{\n              title: '一级 1',\n              expand: true,\n              children: [{\n                title: '二级 1-1',\n                expand: true,\n                disabled: true,\n                children: [{\n                  title: '三级 1-1-1'\n                }, {\n                  title: '三级 1-1-2'\n                }]\n              }, {\n                title: '二级 1-2',\n                expand: true,\n                children: [{\n                  title: '三级 1-2-1'\n                }, {\n                  title: '三级 1-2-2'\n                }]\n              }]\n            }]\n          };\n        },\n        methods: {\n          handleSelect: function handleSelect(selected, node) {\n            console.log(selected);\n            console.log(node);\n          },\n          handleChecked: function handleChecked(checked, node) {\n            console.log(checked);\n            console.log(node);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo3\": function () {\n      var _createTextVNode = vue_runtime_esm_bundler[\"m\" /* createTextVNode */],\n          _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _withCtx = vue_runtime_esm_bundler[\"cb\" /* withCtx */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n      var _hoisted_1 = {\n        class: \"mb-16\"\n      };\n\n      var _hoisted_2 = /*#__PURE__*/_createTextVNode(\"展开全部\");\n\n      var _hoisted_3 = /*#__PURE__*/_createTextVNode(\"收起全部\");\n\n      var _hoisted_4 = /*#__PURE__*/_createTextVNode(\"展开三级\");\n\n      var _hoisted_5 = /*#__PURE__*/_createTextVNode(\"选择全部\");\n\n      var _hoisted_6 = /*#__PURE__*/_createTextVNode(\"取消全选\");\n\n      var _hoisted_7 = /*#__PURE__*/_createTextVNode(\"设置选中1-2及以下\");\n\n      var _hoisted_8 = /*#__PURE__*/_createTextVNode(\"单选 1-2-1\");\n\n      var _hoisted_9 = /*#__PURE__*/_createTextVNode(\"清空单选和多选\");\n\n      var _hoisted_10 = {\n        style: {\n          \"width\": \"300px\"\n        }\n      };\n\n      function render(_ctx, _cache) {\n        var _component_b_button = _resolveComponent(\"b-button\");\n\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(\"div\", _hoisted_1, [_createVNode(_component_b_button, {\n          onClick: _ctx.expandAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_2];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.collapseAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_3];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.setExpand,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_4];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.checkAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_5];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.uncheckAll,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_6];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.setChecked,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_7];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.setSelected,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_8];\n          }),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.clear,\n          size: \"small\"\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_9];\n          }),\n          _: 1\n        }, 8, [\"onClick\"])]), _createVNode(\"div\", _hoisted_10, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          ref: \"tree\"\n        }, null, 8, [\"data\"])])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data: [{\n              title: '一级 1',\n              children: [{\n                title: '二级 1-1',\n                children: [{\n                  title: '三级 1-1-1'\n                }, {\n                  title: '三级 1-1-2'\n                }]\n              }, {\n                title: '二级 1-2',\n                children: [{\n                  title: '三级 1-2-1'\n                }, {\n                  title: '三级 1-2-2'\n                }]\n              }]\n            }, {\n              title: '一级 2',\n              children: [{\n                title: '二级 2-1'\n              }, {\n                title: '二级 2-2'\n              }]\n            }]\n          };\n        },\n        methods: {\n          expandAll: function expandAll() {\n            this.$refs.tree.expandAll();\n          },\n          collapseAll: function collapseAll() {\n            this.$refs.tree.collapseAll();\n          },\n          checkAll: function checkAll() {\n            this.$refs.tree.checkAll();\n          },\n          uncheckAll: function uncheckAll() {\n            this.$refs.tree.uncheckAll();\n          },\n          setChecked: function setChecked() {\n            // 默认是获取了nodeKey索引，如有特殊判断，如id，则可以自行根据flatState.find所有nodeKey值\n            this.$refs.tree.setChecked([5, 6]);\n          },\n          setSelected: function setSelected() {\n            this.$refs.tree.setSelected([5]);\n          },\n          clear: function clear() {\n            this.$refs.tree.uncheckAll();\n            this.$refs.tree.unselectAll();\n          },\n          setExpand: function setExpand() {\n            this.$refs.tree.setExpand([0, 4]);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo4\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(_component_b_tree, {\n          data: _ctx.data3,\n          \"show-checkbox\": \"\",\n          \"load-data\": _ctx.loadData\n        }, null, 8, [\"data\", \"load-data\"])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            data3: [{\n              title: 'root',\n              children: []\n            }, {\n              title: 'leaf',\n              isLeaf: true,\n              children: []\n            }]\n          };\n        },\n        methods: {\n          loadData: function loadData(item, callback) {\n            console.log(item);\n            setTimeout(function () {\n              var data = [{\n                title: 'have-child',\n                loading: false,\n                children: []\n              }, {\n                title: 'no-child',\n                loading: false,\n                children: []\n              }]; // 模拟请求数据有子项的时候\n\n              if (item.title === 'have-child') {\n                data = [{\n                  title: 'child1',\n                  loading: false,\n                  isLeaf: false,\n                  children: [],\n                  visible: true\n                }, {\n                  title: 'leaf node',\n                  isLeaf: true,\n                  children: []\n                }];\n              } else if (item.title === 'no-child') {\n                // 按需自行设置是否是叶子节点或者不设置\n                item['isLeaf'] = true; // 不设置会保留箭头可以再次点击\n                // data = []\n              }\n\n              callback(data);\n            }, 1000);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo5\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n\n      function render(_ctx, _cache) {\n        var _component_b_input = _resolveComponent(\"b-input\");\n\n        var _component_b_divider = _resolveComponent(\"b-divider\");\n\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(\"div\", null, [_createVNode(_component_b_input, {\n          modelValue: _ctx.query,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.query = $event;\n          }),\n          search: \"\",\n          placeholder: \"输入过滤条件后回车筛选\",\n          onSearch: _ctx.handleFilter,\n          style: {\n            \"width\": \"230px\"\n          }\n        }, null, 8, [\"modelValue\", \"onSearch\"]), _createVNode(_component_b_divider, {\n          style: {\n            \"margin\": \"14px 0\"\n          }\n        }), _createVNode(_component_b_tree, {\n          data: _ctx.data,\n          ref: \"treeRef\",\n          \"filter-node-method\": _ctx.filterNode\n        }, null, 8, [\"data\", \"filter-node-method\"])])]);\n      }\n\n      var reactive = vue_runtime_esm_bundler[\"I\" /* reactive */],\n          toRefs = vue_runtime_esm_bundler[\"U\" /* toRefs */],\n          ref = vue_runtime_esm_bundler[\"J\" /* ref */];\n      var democomponentExport = {\n        setup: function setup() {\n          var states = reactive({\n            query: '',\n            data: [{\n              id: '1',\n              title: '江苏省',\n              children: [{\n                id: '1-1',\n                title: '南京市',\n                children: [{\n                  id: '1-1-1',\n                  title: '玄武区'\n                }, {\n                  id: '1-1-2',\n                  title: '鼓楼区'\n                }, {\n                  id: '1-1-3',\n                  title: '建邺区'\n                }, {\n                  id: '1-1-4',\n                  title: '秦淮区'\n                }]\n              }, {\n                id: '1-2',\n                title: '无锡市',\n                children: [{\n                  id: '1-2-1',\n                  title: '锡山区'\n                }, {\n                  id: '1-2-2',\n                  title: '惠山区'\n                }, {\n                  id: '1-2-3',\n                  title: '滨湖区'\n                }, {\n                  id: '1-2-4',\n                  title: '梁溪区'\n                }]\n              }, {\n                id: '1-3',\n                title: '徐州市',\n                children: [{\n                  id: '1-3-1',\n                  title: '鼓楼区'\n                }, {\n                  id: '1-3-2',\n                  title: '云龙区'\n                }, {\n                  id: '1-3-3',\n                  title: '泉山区'\n                }, {\n                  id: '1-3-4',\n                  title: '铜山区'\n                }, {\n                  id: '1-3-5',\n                  title: '贾汪区'\n                }, {\n                  id: '1-3-6',\n                  title: '沛县'\n                }, {\n                  id: '1-3-7',\n                  title: '丰县'\n                }, {\n                  id: '1-3-8',\n                  title: '睢宁县'\n                }, {\n                  id: '1-3-9',\n                  title: '新沂市'\n                }, {\n                  id: '1-3-10',\n                  title: '邳州市'\n                }]\n              }]\n            }, {\n              id: '2',\n              title: '河北省',\n              children: [{\n                id: '2-1',\n                title: '石家庄',\n                children: [{\n                  id: '2-1-1',\n                  title: '长安区'\n                }, {\n                  id: '2-1-2',\n                  title: '新华区'\n                }, {\n                  id: '2-1-3',\n                  title: '鼓楼区'\n                }]\n              }]\n            }]\n          });\n          var treeRef = ref(null);\n\n          var handleFilter = function handleFilter(value) {\n            treeRef.value.filter(value);\n          };\n\n          var filterNode = function filterNode(value, node) {\n            if (!value) return true; // return node.title===value.trim()\n\n            return node.title.indexOf(value) !== -1;\n          };\n\n          return _extends({}, toRefs(states), {\n            treeRef: treeRef,\n            handleFilter: handleFilter,\n            filterNode: filterNode\n          });\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo6\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n      var _hoisted_1 = {\n        style: {\n          \"width\": \"300px\"\n        }\n      };\n\n      function render(_ctx, _cache) {\n        var _component_b_tree = _resolveComponent(\"b-tree\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(\"div\", _hoisted_1, [_createVNode(_component_b_tree, {\n          data: _ctx.data,\n          render: _ctx.renderContent,\n          ref: \"tree\"\n        }, null, 8, [\"data\", \"render\"])])]);\n      }\n\n      var h = vue_runtime_esm_bundler[\"q\" /* h */];\n      var democomponentExport = {\n        data: function data() {\n          var _this2 = this;\n\n          return {\n            data: [{\n              title: 'parent 1',\n              expand: true,\n              render: function render(_ref) {\n                var root = _ref.root,\n                    node = _ref.node,\n                    data = _ref.data;\n                return h('span', {\n                  style: {\n                    display: 'inline-flex',\n                    justifyContent: 'space-between',\n                    width: '100%'\n                  }\n                }, [h('span', data.title), h('i', {\n                  'class': ['b-iconfont', 'b-icon-plus-square'],\n                  style: {\n                    fontSize: '16px',\n                    color: '#1089ff'\n                  },\n                  onClick: function onClick() {\n                    _this2.append(data);\n                  }\n                })]);\n              },\n              children: [{\n                title: 'child 1-1'\n              }, {\n                title: 'child 1-2'\n              }]\n            }],\n            id: 0\n          };\n        },\n        methods: {\n          renderContent: function renderContent(_ref2) {\n            var _this3 = this;\n\n            var root = _ref2.root,\n                node = _ref2.node,\n                data = _ref2.data;\n            return h('span', {\n              style: {\n                display: 'inline-flex',\n                justifyContent: 'space-between',\n                width: '100%'\n              }\n            }, [h('span', data.title), h('span', {\n              style: {\n                display: 'inline-block'\n              }\n            }, [h('i', {\n              'class': ['b-iconfont', 'b-icon-plus-circle'],\n              style: {\n                fontSize: '16px',\n                color: '#5d6d7e'\n              },\n              onClick: function onClick(e) {\n                e.stopPropagation();\n\n                _this3.append(data);\n              }\n            }), h('i', {\n              'class': ['b-iconfont', 'b-icon-minus-circle'],\n              style: {\n                fontSize: '16px',\n                color: '#f5222d'\n              },\n              onClick: function onClick(e) {\n                e.stopPropagation();\n\n                _this3.remove(root, node, data);\n              }\n            })])]);\n          },\n          append: function append(data) {\n            var children = data.children || [];\n            data.expand = true;\n            children.push({\n              title: 'new node'\n            });\n            data.children = children;\n            this.data = [].concat(this.data);\n          },\n          remove: function remove(root, node, data) {\n            console.log(root, node, data);\n            var parentKey = root.find(function (el) {\n              return el === node;\n            }).parent;\n            var parent = root.find(function (el) {\n              return el.nodeKey === parentKey;\n            }).node;\n            var index = parent.children.indexOf(data);\n            parent.children.splice(index, 1);\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }(),\n    \"element-demo7\": function () {\n      var _resolveComponent = vue_runtime_esm_bundler[\"N\" /* resolveComponent */],\n          _createVNode = vue_runtime_esm_bundler[\"n\" /* createVNode */],\n          _createTextVNode = vue_runtime_esm_bundler[\"m\" /* createTextVNode */],\n          _withCtx = vue_runtime_esm_bundler[\"cb\" /* withCtx */],\n          _openBlock = vue_runtime_esm_bundler[\"E\" /* openBlock */],\n          _createBlock = vue_runtime_esm_bundler[\"i\" /* createBlock */];\n      var _hoisted_1 = {\n        style: {\n          \"margin-bottom\": \"8px\"\n        }\n      };\n\n      var _hoisted_2 = /*#__PURE__*/_createTextVNode(\" 数据条数： \");\n\n      var _hoisted_3 = /*#__PURE__*/_createTextVNode(\"渲染\");\n\n      var _hoisted_4 = {\n        flex: \"main:justify\"\n      };\n\n      var _hoisted_5 = /*#__PURE__*/_createTextVNode(\"展开所有\");\n\n      var _hoisted_6 = /*#__PURE__*/_createTextVNode(\"收起所有\");\n\n      function render(_ctx, _cache) {\n        var _component_b_input_number = _resolveComponent(\"b-input-number\");\n\n        var _component_b_button = _resolveComponent(\"b-button\");\n\n        var _component_b_input = _resolveComponent(\"b-input\");\n\n        var _component_b_button_group = _resolveComponent(\"b-button-group\");\n\n        var _component_b_divider = _resolveComponent(\"b-divider\");\n\n        var _component_b_big_tree = _resolveComponent(\"b-big-tree\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(\"div\", null, [_createVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_b_input_number, {\n          modelValue: _ctx.number,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.number = $event;\n          })\n        }, null, 8, [\"modelValue\"]), _createVNode(_component_b_button, {\n          onClick: _ctx.init\n        }, {\n          default: _withCtx(function () {\n            return [_hoisted_3];\n          }),\n          _: 1\n        }, 8, [\"onClick\"])]), _createVNode(\"div\", _hoisted_4, [_createVNode(_component_b_input, {\n          modelValue: _ctx.query,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n            return _ctx.query = $event;\n          }),\n          search: \"\",\n          placeholder: \"输入过滤条件后回车筛选\",\n          onSearch: _ctx.handleFilter,\n          style: {\n            \"width\": \"230px\"\n          }\n        }, null, 8, [\"modelValue\", \"onSearch\"]), _createVNode(_component_b_button_group, null, {\n          default: _withCtx(function () {\n            return [_createVNode(_component_b_button, {\n              onClick: _ctx.expandAll\n            }, {\n              default: _withCtx(function () {\n                return [_hoisted_5];\n              }),\n              _: 1\n            }, 8, [\"onClick\"]), _createVNode(_component_b_button, {\n              onClick: _ctx.collapseAll\n            }, {\n              default: _withCtx(function () {\n                return [_hoisted_6];\n              }),\n              _: 1\n            }, 8, [\"onClick\"])];\n          }),\n          _: 1\n        })]), _createVNode(_component_b_divider, {\n          style: {\n            \"margin\": \"14px 0\"\n          }\n        }), _createVNode(_component_b_big_tree, {\n          ref: \"tree\",\n          data: _ctx.data,\n          \"visible-count\": 10,\n          onSelectChange: _ctx.handleSelected,\n          \"filter-node-method\": _ctx.filterNode\n        }, null, 8, [\"data\", \"onSelectChange\", \"filter-node-method\"])])]);\n      }\n\n      var democomponentExport = {\n        data: function data() {\n          return {\n            number: 5000,\n            query: '',\n            data: []\n          };\n        },\n        methods: {\n          init: function init() {\n            this.data = this.$generateTree(this.number);\n          },\n          handleSelected: function handleSelected(allSelected, node) {\n            console.log(allSelected, node);\n          },\n          expandAll: function expandAll() {\n            this.$refs.tree.expandAll();\n          },\n          collapseAll: function collapseAll() {\n            this.$refs.tree.collapseAll();\n          },\n          handleFilter: function handleFilter(value) {\n            this.$refs.tree.filter(value);\n          },\n          filterNode: function filterNode(value, node) {\n            if (!value) return true; // return node.title===value.trim()\n\n            return node.title.indexOf(value) !== -1;\n          }\n        }\n      };\n      return _extends({\n        render: render\n      }, democomponentExport);\n    }()\n  }\n});\n// CONCATENATED MODULE: ./examples/docs/tree.md?vue&type=script&lang=js\n \n// CONCATENATED MODULE: ./examples/docs/tree.md\n\n\n\ntreevue_type_script_lang_js.render = treevue_type_template_id_afbfa88e_render\n\n/* harmony default export */ var tree = __webpack_exports__[\"default\"] = (treevue_type_script_lang_js);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL3RyZWUubWQ/NGE5OSIsIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL3RyZWUubWQ/NWZlOCIsIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL3RyZWUubWQ/NWU1YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFYSxPQUFLLEVBQUM7OzsrREFDYix1REFBdUMsSUFBdkMsRUFBdUM7QUFBbkMsSUFBRSxFQUFDO0FBQWdDLENBQXZDLEVBQTBCLFVBQTFCLEVBQWtDLEVBQWxDLEM7OytEQUNOLHVEQUFpQyxJQUFqQyxFQUFpQztBQUE3QixJQUFFLEVBQUM7QUFBMEIsQ0FBakMsRUFBd0IsTUFBeEIsRUFBNEIsRUFBNUIsQzs7K0RBRVEsdURBQ0YsS0FERSxFQUNGLElBREUsRUFDRixDLGFBRE8sdURBQWdFLEdBQWhFLEVBQWdFLElBQWhFLEVBQWdFLEMsYUFBN0QsdURBQXVCLE1BQXZCLEVBQXVCLElBQXZCLEVBQU0sWUFBTixDQUE2RCxFLHdFQUF0QyxvQyxDQUFzQyxDQUFoRSxDQUNQLENBREUsRSxFQUFBLEM7OytEQUdxQix1REF1RGhCLEtBdkRnQixFQXVEaEIsSUF2RGdCLEVBdURoQixDLGFBdkQyQix1REF1RGpDLE1BdkRpQyxFQXVEakM7QUF2RHVDLE9BQUssRUFBQztBQXVEN0MsQ0F2RGlDLEVBQW1CLHd0Q0FBbkIsQ0F1RDNCLENBdkRnQixFLEVBQUEsQzs7K0RBdURRLHVEQUEwQyxJQUExQyxFQUEwQztBQUF0QyxJQUFFLEVBQUM7QUFBbUMsQ0FBMUMsRUFBK0IsUUFBL0IsRUFBcUMsRUFBckMsQzs7K0RBQ3JDLHVEQUEwRSxHQUExRSxFQUEwRSxJQUExRSxFQUEwRSxDLHdFQUF2RSxtRCxDQUF1RSxFLGFBQXRCLHVEQUFrQixNQUFsQixFQUFrQixJQUFsQixFQUFNLE9BQU4sQ0FBc0IsQ0FBMUUsRSxFQUFBLEM7OytEQUk2Qix1REFxSGhCLEtBckhnQixFQXFIaEIsSUFy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QVRNO0FBVVAscUJBVk8seUJBVU87QUFDWixpQkFBSyxLQUFMLENBQVcsSUFBWCxDQUFnQixXQUFoQjtBQUNELFdBWk07QUFhUCxzQkFiTyx3QkFhTSxLQWJOLEVBYWE7QUFDbEIsaUJBQUssS0FBTCxDQUFXLElBQVgsQ0FBZ0IsTUFBaEIsQ0FBdUIsS0FBdkI7QUFDRCxXQWZNO0FBZ0JQLG9CQWhCTyxzQkFnQkksS0FoQkosRUFnQlcsSUFoQlgsRUFnQmlCO0FBQ3RCLGdCQUFJLENBQUMsS0FBTCxFQUFZLE9BQU8sSUFBUCxDQURVLENBRXRCOztBQUNBLG1CQUFPLElBQUksQ0FBQyxLQUFMLENBQVcsT0FBWCxDQUFtQixLQUFuQixNQUE4QixDQUFDLENBQXRDO0FBQ0Y7QUFwQk87QUFSbUIsT0FBNUI7QUErQkE7QUFDRSxjQUFNLEVBQU47QUFERixTQUVLLG1CQUZMO0FBSUQsS0E1R3FCO0FBMXZCSjtBQUZDLENBQWYsRTs7QUM3NkIwTCxDOztBQ0FoSTtBQUNWO0FBQ0w7QUFDakQsMkJBQU0sVUFBVSx3Q0FBTTs7QUFFUCxxRyIsImZpbGUiOiI3MTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgPHRlbXBsYXRlPlxuICAgIDxzZWN0aW9uIGNsYXNzPVwiY29udGVudCBlbGVtZW50LWRvY1wiPlxuICAgICAgPGgyIGlkPVwidHJlZS1zaHUtamllLWdvdVwiPlRyZWUg5qCR57uT5p6EPC9oMj5cbjxoMyBpZD1cImppLWNodS15b25nLWZhXCI+5Z+656GA55So5rOVPC9oMz5cbjxkZW1vLWJsb2NrPlxuICAgICAgICA8ZGl2PjxwPjxjb2RlPmxvY2tTZWxlY3Q8L2NvZGU+IOiuvue9ruWPr+S7pemUgeWumuagkeeahOmAieS4reS6i+S7tu+8jOi/meS4quWPr+S7peeUqOadpeaOp+WItuagkeiPnOWNleWcqOS4jeWQjOaDheWGteS4i+eahOaTjeS9nDwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMCAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+XG4mbHQ7dGVtcGxhdGUmZ3Q7XG4gICZsdDtkaXYgZmxleCZndDtcbiAgICAmbHQ7ZGl2IHN0eWxlPSZxdW90O3dpZHRoOiAyMDBweCZxdW90OyZndDtcbiAgICAgICZsdDtiLXRyZWUgOmRhdGE9JnF1b3Q7ZGF0YSZxdW90OyBAc2VsZWN0LWNoYW5nZT0mcXVvdDtoYW5kbGVTZWxlY3QmcXVvdDsgOmxvY2stc2VsZWN0PSZxdW90O2xvY2tTZWxlY3QmcXVvdDsmZ3Q7Jmx0Oy9iLXRyZWUmZ3Q7XG4gICAgJmx0Oy9kaXYmZ3Q7XG4gICAgJmx0O2RpdiBzdHlsZT0mcXVvdDt3aWR0aDogODBweCZxdW90OyZndDtcbiAgICAgICZsdDtiLXN3aXRjaCB2LW1vZGVsPSZxdW90O2xvY2tTZWxlY3QmcXVvdDsgc2l6ZT0mcXVvdDtsYXJnZSZxdW90OyZndDtcbiAgICAgICAgJmx0O3RlbXBsYXRlICNvcGVuJmd0O+mUgeWumiZsdDsvdGVtcGxhdGUmZ3Q7XG4gICAgICAgICZsdDt0ZW1wbGF0ZSAjY2xvc2UmZ3Q76Kej6ZSBJmx0Oy90ZW1wbGF0ZSZndDtcbiAgICAgICZsdDsvYi1zd2l0Y2gmZ3Q7XG4gICAgJmx0Oy9kaXYmZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuICAmbHQ7ZGl2Jmd0O1xuICAmbHQ7L2RpdiZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRpdGxlOiAn5LiA57qnIDEnLFxuICAgICAgICAgICAgZXhwYW5kOiB0cnVlLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5LqM57qnIDEtMScsXG4gICAgICAgICAgICAgICAgZXhwYW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0xLTEnLH0sXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0xLTInfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5LqM57qnIDEtMicsXG4gICAgICAgICAgICAgICAgZXhwYW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0yLTEnfSxcbiAgICAgICAgICAgICAgICAgIHt0aXRsZTogJ+S4iee6pyAxLTItMid9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBsb2NrU2VsZWN0OiBmYWxzZVxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgaGFuZGxlU2VsZWN0KHNlbGVjdGVkLCBub2RlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKG5vZGUpXG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJlLXdhaS1jYW4tc2h1LXBlaS16aGlcIj7pop3lpJblj4LmlbDphY3nva48L2gzPlxuPHA+5Y+v5Lul6YWN572u6aKd5aSW5Y+C5pWw6K6+572u77yM5q+U5aaC6ZmE5YqgaWTvvIxjb2Rl562J5Lia5Yqh5Y+C5pWw77yM5Lmf5Y+v5Lul5oyH5a6adGl0bGXmmL7npLrnmoTlrZfmrrXlkI3np7DvvIzpu5jorqTkuLo8Y29kZT50aXRsZTwvY29kZT48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgXG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW8xIC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj5cbiZsdDt0ZW1wbGF0ZSZndDtcbiAgJmx0O2ItYnV0dG9uIEBjbGljaz0mcXVvdDtpbml0RGF0YSZxdW90OyZndDvliJ3lp4vljJbmlbDmja7lubbpu5jorqTpgInkuK3liY3nq6/nu4QmbHQ7L2ItYnV0dG9uJmd0O1xuICAmbHQ7ZGl2IGZsZXggY2xhc3M9JnF1b3Q7bXQtMTAmcXVvdDsmZ3Q7XG4gICAgJmx0O2RpdiBzdHlsZT0mcXVvdDt3aWR0aDogMjAwcHgmcXVvdDsmZ3Q7XG4gICAgICAmbHQ7Yi10cmVlIDpkYXRhPSZxdW90O2RhdGEmcXVvdDsgcmVmPSZxdW90O3RyZWUmcXVvdDsgQHNlbGVjdC1jaGFuZ2U9JnF1b3Q7aGFuZGxlU2VsZWN0JnF1b3Q7IHRpdGxlS2V5PSZxdW90O3RleHQmcXVvdDsmZ3Q7Jmx0Oy9iLXRyZWUmZ3Q7XG4gICAgJmx0Oy9kaXYmZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuICAmbHQ7ZGl2Jmd0O1xuICAmbHQ7L2RpdiZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogW10sXG4gICAgICAgIGRlZmF1bHRJZDogJzAwMTAyJ1xuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgaW5pdERhdGEoKSB7XG4gICAgICAgIC8vIOWIneWni+WMluaVsOaNruWQjlxuICAgICAgICB0aGlzLmRhdGEgPSBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICcwMDEnLFxuICAgICAgICAgICAgdGV4dDogJ+eglOWPkemDqCcsXG4gICAgICAgICAgICBkZXB0Q29kZTogJ3lmYicsXG4gICAgICAgICAgICBzdGF0dXM6ICcxJyxcbiAgICAgICAgICAgIGRlc2M6ICfnoJTlj5HkuK3lv4MnLFxuICAgICAgICAgICAgcGFyZW50SWQ6IG51bGwsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6ICcwMDEwMScsXG4gICAgICAgICAgICAgICAgdGV4dDogJ+WQjuerr+e7hCcsXG4gICAgICAgICAgICAgICAgZGVwdENvZGU6ICdoZCcsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnMScsXG4gICAgICAgICAgICAgICAgZGVzYzogJ+WQjuerr+eglOWPkeS4reW/gycsXG4gICAgICAgICAgICAgICAgcGFyZW50SWQ6ICcwMDEnXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzAwMTAyJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiAn5YmN56uv57uEJyxcbiAgICAgICAgICAgICAgICBkZXB0Q29kZTogJ3FkJyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICcxJyxcbiAgICAgICAgICAgICAgICBkZXNjOiAn5YmN56uv56CU5Y+R5Lit5b+DJyxcbiAgICAgICAgICAgICAgICBwYXJlbnRJZDogJzAwMSdcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkOiAnMDAxMDMnLFxuICAgICAgICAgICAgICAgIHRleHQ6ICdVSeiuvuiuoScsXG4gICAgICAgICAgICAgICAgZGVwdENvZGU6ICdzaicsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnMScsXG4gICAgICAgICAgICAgICAgZGVzYzogJ+S6pOS6kuOAgXVp6K6+6K6h5Lit5b+DJyxcbiAgICAgICAgICAgICAgICBwYXJlbnRJZDogJzAwMSdcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkOiAnMDAxMDQnLFxuICAgICAgICAgICAgICAgIHRleHQ6ICfmtYvor5Xnu4QnLFxuICAgICAgICAgICAgICAgIGRlcHRDb2RlOiAnY3MnLFxuICAgICAgICAgICAgICAgIHN0YXR1czogJzEnLFxuICAgICAgICAgICAgICAgIGRlc2M6ICfmtYvor5Xnu4QnLFxuICAgICAgICAgICAgICAgIHBhcmVudElkOiAnMDAxJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6ICcwMDEwNScsXG4gICAgICAgICAgICAgICAgdGV4dDogJ+i/kOe7tOe7hCcsXG4gICAgICAgICAgICAgICAgZGVwdENvZGU6ICd5dycsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnMScsXG4gICAgICAgICAgICAgICAgZGVzYzogJ+i/kOe7tOOAgeacjeWKoeOAgeW3oeajgCcsXG4gICAgICAgICAgICAgICAgcGFyZW50SWQ6ICcwMDEnXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAnMDAyJyxcbiAgICAgICAgICAgIHRleHQ6ICfpobnnm67pg6gnLFxuICAgICAgICAgICAgZGVwdENvZGU6ICd4bWInLFxuICAgICAgICAgICAgc3RhdHVzOiAnMScsXG4gICAgICAgICAgICBkZXNjOiAn6aG555uu5pyN5Yqh6YOoJyxcbiAgICAgICAgICAgIHBhcmVudElkOiBudWxsLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkOiAnMDAyMDEnLFxuICAgICAgICAgICAgICAgIHRleHQ6ICflvIDlj5Hnu4QnLFxuICAgICAgICAgICAgICAgIGRlcHRDb2RlOiAna2YnLFxuICAgICAgICAgICAgICAgIHN0YXR1czogJzEnLFxuICAgICAgICAgICAgICAgIGRlc2M6ICflkI7nq6/pobnnm67lvIDlj5EnLFxuICAgICAgICAgICAgICAgIHBhcmVudElkOiAnMDAyJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6ICcwMDIwMicsXG4gICAgICAgICAgICAgICAgdGV4dDogJ+S6pOS7mOacjeWKoee7hCcsXG4gICAgICAgICAgICAgICAgZGVwdENvZGU6ICdqZicsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnMScsXG4gICAgICAgICAgICAgICAgZGVzYzogJ+S6pOS7mOmhueebru+8jOaKgOacr+acjeWKoeaUr+aMgScsXG4gICAgICAgICAgICAgICAgcGFyZW50SWQ6ICcwMDInXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPSZndDsge1xuICAgICAgICAgIC8vIOiOt+WPluagkee7k+aehOeahOaLjeW5s+aVsOaNru+8jOafpeaJvuW9k+WJjemcgOimgemAieS4reeahOiKgueCueWAvFxuICAgICAgICAgIGNvbnN0IGZsYXRTdGF0ZSA9IHRoaXMuJHJlZnMudHJlZS5nZXRGbGF0U3RhdGUoKVxuICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSBmbGF0U3RhdGUuZmluZChub2RlID0mZ3Q7IG5vZGUubm9kZS5pZCA9PT0gdGhpcy5kZWZhdWx0SWQpXG4gICAgICAgICAgaWYgKGN1cnJlbnQgJmFtcDsmYW1wOyBjdXJyZW50KSB7XG4gICAgICAgICAgICB0aGlzLiRyZWZzLnRyZWUuc2V0U2VsZWN0ZWQoW2N1cnJlbnQubm9kZUtleV0pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIGhhbmRsZVNlbGVjdChzZWxlY3RlZCwgbm9kZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhub2RlKVxuICAgICAgICB0aGlzLiRtZXNzYWdlKGDpgInkuK3oioLngrkke25vZGUudGV4dH1gKVxuICAgICAgfVxuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwicWktdGEtc2h1LXhpbmdcIj7lhbbku5blsZ7mgKc8L2gzPlxuPHA+5Y+v5Lul6K6+572uc2hvdy1jaGVja2JveOW8gOWQr+WLvumAie+8jOW5tuWPr+S7peiuvue9ruaVsOaNruagvOW8j+S4reeahOm7mOiupOmAieS4rTwvcD5cbjxwPmV4cGFuZOOAgXNlbGVjdGVk44CBY2hlY2tlZCDlkowgZGlzYWJsZWQg5Y+v5Lul6K6+572u5bGV5byA77yM6YCJ5Lit77yM5Yu+6YCJ5ZKM56aB55So44CCbXVsdGlwbGUg5byA5ZCv5aSa6YCJPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIFxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMiAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+XG4mbHQ7dGVtcGxhdGUmZ3Q7XG4gICZsdDtkaXYmZ3Q7XG4gICAgJmx0O2ItdHJlZSA6ZGF0YT0mcXVvdDtkYXRhJnF1b3Q7IHNob3ctY2hlY2tib3ggbXVsdGlwbGUgQHNlbGVjdC1jaGFuZ2U9JnF1b3Q7aGFuZGxlU2VsZWN0JnF1b3Q7IEBjaGVjay1jaGFuZ2U9JnF1b3Q7aGFuZGxlQ2hlY2tlZCZxdW90OyZndDsmbHQ7L2ItdHJlZSZndDtcbiAgJmx0Oy9kaXYmZ3Q7XG4mbHQ7L3RlbXBsYXRlJmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ+S4gOe6pyAxJyxcbiAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTEnLFxuICAgICAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0xJyx9LFxuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0yJ31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTInLFxuICAgICAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMi0xJ30sXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0yLTInfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgaGFuZGxlU2VsZWN0KHNlbGVjdGVkLCBub2RlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHNlbGVjdGVkKVxuICAgICAgICBjb25zb2xlLmxvZyhub2RlKVxuICAgICAgfSxcbiAgICAgIGhhbmRsZUNoZWNrZWQoY2hlY2tlZCwgbm9kZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhjaGVja2VkKVxuICAgICAgICBjb25zb2xlLmxvZyhub2RlKVxuICAgICAgfVxuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwic2h1LWppZS1kaWFuLWRlLWNhby16dW9cIj7moJHoioLngrnnmoTmk43kvZw8L2gzPlxuPHA+5qCR57uT5p6E6buY6K6k5ouN5bmz5LqG5omA5pyJ6IqC54K55pWw57uE77yM5bm25aGe5YWl5LqG5ZSv5LiA55qEbm9kZUtleeWAvOeUqOS6jue0ouW8leiKgueCue+8jOi/meagt+WPr+S7peaWueS+v+W/q+aNt+eahOiOt+WPluWSjOiuvue9ruagkeeahOeKtuaAgTwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICBcbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzMgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPlxuJmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O21iLTE2JnF1b3Q7Jmd0O1xuICAgICZsdDtiLWJ1dHRvbiBAY2xpY2s9JnF1b3Q7ZXhwYW5kQWxsJnF1b3Q7IHNpemU9JnF1b3Q7c21hbGwmcXVvdDsmZ3Q75bGV5byA5YWo6YOoJmx0Oy9iLWJ1dHRvbiZndDtcbiAgICAmbHQ7Yi1idXR0b24gQGNsaWNrPSZxdW90O2NvbGxhcHNlQWxsJnF1b3Q7IHNpemU9JnF1b3Q7c21hbGwmcXVvdDsmZ3Q75pS26LW35YWo6YOoJmx0Oy9iLWJ1dHRvbiZndDtcbiAgICAmbHQ7Yi1idXR0b24gQGNsaWNrPSZxdW90O3NldEV4cGFuZCZxdW90OyBzaXplPSZxdW90O3NtYWxsJnF1b3Q7Jmd0O+WxleW8gOS4iee6pyZsdDsvYi1idXR0b24mZ3Q7XG4gICAgJmx0O2ItYnV0dG9uIEBjbGljaz0mcXVvdDtjaGVja0FsbCZxdW90OyBzaXplPSZxdW90O3NtYWxsJnF1b3Q7Jmd0O+mAieaLqeWFqOmDqCZsdDsvYi1idXR0b24mZ3Q7XG4gICAgJmx0O2ItYnV0dG9uIEBjbGljaz0mcXVvdDt1bmNoZWNrQWxsJnF1b3Q7IHNpemU9JnF1b3Q7c21hbGwmcXVvdDsmZ3Q75Y+W5raI5YWo6YCJJmx0Oy9iLWJ1dHRvbiZndDtcbiAgICAmbHQ7Yi1idXR0b24gQGNsaWNrPSZxdW90O3NldENoZWNrZWQmcXVvdDsgc2l6ZT0mcXVvdDtzbWFsbCZxdW90OyZndDvorr7nva7pgInkuK0xLTLlj4rku6XkuIsmbHQ7L2ItYnV0dG9uJmd0O1xuICAgICZsdDtiLWJ1dHRvbiBAY2xpY2s9JnF1b3Q7c2V0U2VsZWN0ZWQmcXVvdDsgc2l6ZT0mcXVvdDtzbWFsbCZxdW90OyZndDvljZXpgIkgMS0yLTEmbHQ7L2ItYnV0dG9uJmd0O1xuICAgICZsdDtiLWJ1dHRvbiBAY2xpY2s9JnF1b3Q7Y2xlYXImcXVvdDsgc2l6ZT0mcXVvdDtzbWFsbCZxdW90OyZndDvmuIXnqbrljZXpgInlkozlpJrpgIkmbHQ7L2ItYnV0dG9uJmd0O1xuICAmbHQ7L2RpdiZndDtcbiAgJmx0O2RpdiBzdHlsZT0mcXVvdDt3aWR0aDogMzAwcHg7JnF1b3Q7Jmd0O1xuICAgICZsdDtiLXRyZWUgOmRhdGE9JnF1b3Q7ZGF0YSZxdW90OyBzaG93LWNoZWNrYm94IHJlZj0mcXVvdDt0cmVlJnF1b3Q7Jmd0OyZsdDsvYi10cmVlJmd0O1xuICAmbHQ7L2RpdiZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ+S4gOe6pyAxJyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTEnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0xLTEnLH0sXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0xLTInfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5LqM57qnIDEtMicsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgIHt0aXRsZTogJ+S4iee6pyAxLTItMSd9LFxuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMi0yJ31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRpdGxlOiAn5LiA57qnIDInLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5LqM57qnIDItMScsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAyLTInLFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgZXhwYW5kQWxsKCkge1xuICAgICAgICB0aGlzLiRyZWZzLnRyZWUuZXhwYW5kQWxsKClcbiAgICAgIH0sXG4gICAgICBjb2xsYXBzZUFsbCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLmNvbGxhcHNlQWxsKClcbiAgICAgIH0sXG4gICAgICBjaGVja0FsbCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLmNoZWNrQWxsKClcbiAgICAgIH0sXG4gICAgICB1bmNoZWNrQWxsKCkge1xuICAgICAgICB0aGlzLiRyZWZzLnRyZWUudW5jaGVja0FsbCgpXG4gICAgICB9LFxuICAgICAgc2V0Q2hlY2tlZCgpIHtcbiAgICAgICAgLy8g6buY6K6k5piv6I635Y+W5LqGbm9kZUtleee0ouW8le+8jOWmguacieeJueauiuWIpOaWre+8jOWmgmlk77yM5YiZ5Y+v5Lul6Ieq6KGM5qC55o2uZmxhdFN0YXRlLmZpbmTmiYDmnIlub2RlS2V55YC8XG4gICAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRDaGVja2VkKFs1LCA2XSlcbiAgICAgIH0sXG4gICAgICBzZXRTZWxlY3RlZCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldFNlbGVjdGVkKFs1XSlcbiAgICAgIH0sXG4gICAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnVuY2hlY2tBbGwoKVxuICAgICAgICB0aGlzLiRyZWZzLnRyZWUudW5zZWxlY3RBbGwoKVxuICAgICAgfSxcbiAgICAgIHNldEV4cGFuZCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldEV4cGFuZChbMCwgNF0pXG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJ5aS1idS1qaWEtemFpLXppLWppZS1kaWFuXCI+5byC5q2l5Yqg6L295a2Q6IqC54K5PC9oMz5cbjxkZW1vLWJsb2NrPlxuICAgICAgICBcbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzQgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPlxuJmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7Yi10cmVlIDpkYXRhPSZxdW90O2RhdGEzJnF1b3Q7IHNob3ctY2hlY2tib3ggOmxvYWQtZGF0YT0mcXVvdDtsb2FkRGF0YSZxdW90OyZndDsmbHQ7L2ItdHJlZSZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGEzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGl0bGU6ICdyb290JyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGl0bGU6ICdsZWFmJyxcbiAgICAgICAgICAgIGlzTGVhZjogdHJ1ZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgbG9hZERhdGEoaXRlbSwgY2FsbGJhY2spIHtcbiAgICAgICAgY29uc29sZS5sb2coaXRlbSlcbiAgICAgICAgc2V0VGltZW91dCgoKSA9Jmd0OyB7XG4gICAgICAgICAgbGV0IGRhdGEgPSBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRpdGxlOiAnaGF2ZS1jaGlsZCcsXG4gICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogW11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRpdGxlOiAnbm8tY2hpbGQnLFxuICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFtdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICAgIC8vIOaooeaLn+ivt+axguaVsOaNruacieWtkOmhueeahOaXtuWAmVxuICAgICAgICAgIGlmIChpdGVtLnRpdGxlID09PSAnaGF2ZS1jaGlsZCcpIHtcbiAgICAgICAgICAgIGRhdGEgPSBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ2NoaWxkMScsXG4gICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNMZWFmOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW10sXG4gICAgICAgICAgICAgICAgdmlzaWJsZTogdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICdsZWFmIG5vZGUnLFxuICAgICAgICAgICAgICAgIGlzTGVhZjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW11cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS50aXRsZSA9PT0gJ25vLWNoaWxkJykge1xuICAgICAgICAgICAgLy8g5oyJ6ZyA6Ieq6KGM6K6+572u5piv5ZCm5piv5Y+25a2Q6IqC54K55oiW6ICF5LiN6K6+572uXG4gICAgICAgICAgICBpdGVtWydpc0xlYWYnXSA9IHRydWVcbiAgICAgICAgICAgIC8vIOS4jeiuvue9ruS8muS/neeVmeeureWktOWPr+S7peWGjeasoeeCueWHu1xuICAgICAgICAgICAgLy8gZGF0YSA9IFtdXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2FsbGJhY2soZGF0YSk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwia2UteWktc2hhaS14dWFuXCI+5Y+v5Lul562b6YCJPC9oMz5cbjxwPuWmguaenOagkee7k+aehOWxgue6p+i+g+Wkmu+8jOWPr+mFjeWQiOi/h+a7pOWHveaVsOi/m+ihjOi/h+a7pOetm+mAiTwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICBcbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzUgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPlxuJmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7ZGl2Jmd0O1xuICAgICZsdDtiLWlucHV0IHYtbW9kZWw9JnF1b3Q7cXVlcnkmcXVvdDsgc2VhcmNoIHBsYWNlaG9sZGVyPSZxdW90O+i+k+WFpei/h+a7pOadoeS7tuWQjuWbnui9puetm+mAiSZxdW90OyBAc2VhcmNoPSZxdW90O2hhbmRsZUZpbHRlciZxdW90OyBzdHlsZT0mcXVvdDt3aWR0aDogMjMwcHg7JnF1b3Q7Jmd0OyZsdDsvYi1pbnB1dCZndDtcbiAgICAmbHQ7Yi1kaXZpZGVyIHN0eWxlPSZxdW90O21hcmdpbjogMTRweCAwOyZxdW90OyZndDsmbHQ7L2ItZGl2aWRlciZndDtcbiAgICAmbHQ7Yi10cmVlIDpkYXRhPSZxdW90O2RhdGEmcXVvdDsgcmVmPSZxdW90O3RyZWVSZWYmcXVvdDsgOmZpbHRlci1ub2RlLW1ldGhvZD0mcXVvdDtmaWx0ZXJOb2RlJnF1b3Q7Jmd0OyZsdDsvYi10cmVlJmd0O1xuICAmbHQ7L2RpdiZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBpbXBvcnQge3JlYWN0aXZlLCB0b1JlZnMsIHJlZn0gZnJvbSAndnVlJ1xuXG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBzZXR1cCgpIHtcbiAgICAgIGNvbnN0IHN0YXRlcyA9IHJlYWN0aXZlKHtcbiAgICAgICAgcXVlcnk6ICcnLFxuICAgICAgICBkYXRhOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICcxJyxcbiAgICAgICAgICAgIHRpdGxlOiAn5rGf6IuP55yBJyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzEtMScsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICfljZfkuqzluIInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtMScsIHRpdGxlOiAn546E5q2m5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtMicsIHRpdGxlOiAn6byT5qW85Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtMycsIHRpdGxlOiAn5bu66YK65Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtNCcsIHRpdGxlOiAn56em5reu5Yy6J31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzEtMicsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICfml6DplKHluIInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItMScsIHRpdGxlOiAn6ZSh5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItMicsIHRpdGxlOiAn5oOg5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItMycsIHRpdGxlOiAn5ruo5rmW5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItNCcsIHRpdGxlOiAn5qKB5rqq5Yy6J31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzEtMycsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICflvpDlt57luIInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMScsIHRpdGxlOiAn6byT5qW85Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMicsIHRpdGxlOiAn5LqR6b6Z5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMycsIHRpdGxlOiAn5rOJ5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNCcsIHRpdGxlOiAn6ZOc5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNScsIHRpdGxlOiAn6LS+5rGq5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNicsIHRpdGxlOiAn5rKb5Y6/J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNycsIHRpdGxlOiAn5Liw5Y6/J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtOCcsIHRpdGxlOiAn552i5a6B5Y6/J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtOScsIHRpdGxlOiAn5paw5rKC5biCJ30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMTAnLCB0aXRsZTogJ+mCs+W3nuW4gid9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpZDogJzInLFxuICAgICAgICAgICAgdGl0bGU6ICfmsrPljJfnnIEnLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkOiAnMi0xJyxcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+efs+WutuW6hCcsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgIHtpZDogJzItMS0xJywgdGl0bGU6ICfplb/lronljLonfSxcbiAgICAgICAgICAgICAgICAgIHtpZDogJzItMS0yJywgdGl0bGU6ICfmlrDljY7ljLonfSxcbiAgICAgICAgICAgICAgICAgIHtpZDogJzItMS0zJywgdGl0bGU6ICfpvJPmpbzljLonfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSlcbiAgICAgIGNvbnN0IHRyZWVSZWYgPSByZWYobnVsbClcbiAgICAgIGNvbnN0IGhhbmRsZUZpbHRlciA9ICh2YWx1ZSkgPSZndDsge1xuICAgICAgICB0cmVlUmVmLnZhbHVlLmZpbHRlcih2YWx1ZSlcbiAgICAgIH1cbiAgICAgIGNvbnN0IGZpbHRlck5vZGUgPSAodmFsdWUsIG5vZGUpID0mZ3Q7IHtcbiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgICAgIC8vIHJldHVybiBub2RlLnRpdGxlPT09dmFsdWUudHJpbSgpXG4gICAgICAgIHJldHVybiBub2RlLnRpdGxlLmluZGV4T2YodmFsdWUpICE9PSAtMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnRvUmVmcyhzdGF0ZXMpLFxuICAgICAgICB0cmVlUmVmLFxuICAgICAgICBoYW5kbGVGaWx0ZXIsXG4gICAgICAgIGZpbHRlck5vZGVcbiAgICAgIH1cbiAgICB9XG4gIH1cbiZsdDsvc2NyaXB0Jmd0O1xuPC9jb2RlPjwvcHJlPjwvdGVtcGxhdGU+PC9kZW1vLWJsb2NrPjxoMyBpZD1cInJlbmRlcmhhbi1zaHVcIj5yZW5kZXLlh73mlbA8L2gzPlxuPHA+5L2/55SocmVuZGVy5Ye95pWw5Y+v5Lul6K6+572u5pu05aSa6Ieq5a6a5LmJ55qE5pWI5p6cPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIFxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNiAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+XG4mbHQ7dGVtcGxhdGUmZ3Q7XG4gICZsdDtkaXYgc3R5bGU9JnF1b3Q7d2lkdGg6IDMwMHB4OyZxdW90OyZndDtcbiAgICAmbHQ7Yi10cmVlIDpkYXRhPSZxdW90O2RhdGEmcXVvdDsgOnJlbmRlcj0mcXVvdDtyZW5kZXJDb250ZW50JnF1b3Q7IHJlZj0mcXVvdDt0cmVlJnF1b3Q7Jmd0OyZsdDsvYi10cmVlJmd0O1xuICAmbHQ7L2RpdiZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBpbXBvcnQge2h9IGZyb20gJ3Z1ZSdcblxuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ3BhcmVudCAxJyxcbiAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgIHJlbmRlcjogKHtyb290LCBub2RlLCBkYXRhfSkgPSZndDsge1xuICAgICAgICAgICAgICByZXR1cm4gaCgnc3BhbicsIHtcbiAgICAgICAgICAgICAgICBzdHlsZToge2Rpc3BsYXk6ICdpbmxpbmUtZmxleCcsIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsIHdpZHRoOiAnMTAwJScsfVxuICAgICAgICAgICAgICB9LCBbXG4gICAgICAgICAgICAgICAgaCgnc3BhbicsIGRhdGEudGl0bGUpLFxuICAgICAgICAgICAgICAgIGgoJ2knLCB7XG4gICAgICAgICAgICAgICAgICAnY2xhc3MnOiBbJ2ItaWNvbmZvbnQnLCAnYi1pY29uLXBsdXMtc3F1YXJlJ10sXG4gICAgICAgICAgICAgICAgICBzdHlsZToge2ZvbnRTaXplOiAnMTZweCcsIGNvbG9yOiAnIzEwODlmZid9LFxuICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPSZndDsge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZChkYXRhKVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHt0aXRsZTogJ2NoaWxkIDEtMScsfSxcbiAgICAgICAgICAgICAge3RpdGxlOiAnY2hpbGQgMS0yJyx9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBpZDogMCxcbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHJlbmRlckNvbnRlbnQoe3Jvb3QsIG5vZGUsIGRhdGF9KSB7XG4gICAgICAgIHJldHVybiBoKCdzcGFuJywge1xuICAgICAgICAgIHN0eWxlOiB7ZGlzcGxheTogJ2lubGluZS1mbGV4JywganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJywgd2lkdGg6ICcxMDAlJyx9XG4gICAgICAgIH0sIFtcbiAgICAgICAgICBoKCdzcGFuJywgZGF0YS50aXRsZSksXG4gICAgICAgICAgaCgnc3BhbicsIHtzdHlsZToge2Rpc3BsYXk6ICdpbmxpbmUtYmxvY2snLH19LCBbXG4gICAgICAgICAgICBoKCdpJywge1xuICAgICAgICAgICAgICAnY2xhc3MnOiBbJ2ItaWNvbmZvbnQnLCAnYi1pY29uLXBsdXMtY2lyY2xlJ10sXG4gICAgICAgICAgICAgIHN0eWxlOiB7Zm9udFNpemU6ICcxNnB4JywgY29sb3I6ICcjNWQ2ZDdlJ30sXG4gICAgICAgICAgICAgIG9uQ2xpY2s6IChlKSA9Jmd0OyB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgICAgICAgIHRoaXMuYXBwZW5kKGRhdGEpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgaCgnaScsIHtcbiAgICAgICAgICAgICAgJ2NsYXNzJzogWydiLWljb25mb250JywgJ2ItaWNvbi1taW51cy1jaXJjbGUnXSxcbiAgICAgICAgICAgICAgc3R5bGU6IHtmb250U2l6ZTogJzE2cHgnLCBjb2xvcjogJyNmNTIyMmQnfSxcbiAgICAgICAgICAgICAgb25DbGljazogKGUpID0mZ3Q7IHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmUocm9vdCwgbm9kZSwgZGF0YSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICBdKVxuICAgICAgICBdKTtcbiAgICAgIH0sXG4gICAgICBhcHBlbmQoZGF0YSkge1xuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IGRhdGEuY2hpbGRyZW4gfHwgW107XG4gICAgICAgIGRhdGEuZXhwYW5kID0gdHJ1ZVxuICAgICAgICBjaGlsZHJlbi5wdXNoKHt0aXRsZTogJ25ldyBub2RlJ30pO1xuICAgICAgICBkYXRhLmNoaWxkcmVuID0gY2hpbGRyZW5cbiAgICAgICAgdGhpcy5kYXRhID0gWy4uLnRoaXMuZGF0YV1cbiAgICAgIH0sXG4gICAgICByZW1vdmUocm9vdCwgbm9kZSwgZGF0YSkge1xuICAgICAgICBjb25zb2xlLmxvZyhyb290LCBub2RlLCBkYXRhKVxuICAgICAgICBjb25zdCBwYXJlbnRLZXkgPSByb290LmZpbmQoZWwgPSZndDsgZWwgPT09IG5vZGUpLnBhcmVudDtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gcm9vdC5maW5kKGVsID0mZ3Q7IGVsLm5vZGVLZXkgPT09IHBhcmVudEtleSkubm9kZTtcbiAgICAgICAgY29uc3QgaW5kZXggPSBwYXJlbnQuY2hpbGRyZW4uaW5kZXhPZihkYXRhKTtcbiAgICAgICAgcGFyZW50LmNoaWxkcmVuLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJiaWctdHJlZS1jaGFvLWRhLXNodS1qdS1saWFuZy1kZS1zaHUtamllLWdvdVwiPkJpZy1UcmVlIOi2heWkp+aVsOaNrumHj+eahOagkee7k+aehDwvaDM+XG48cD7lpoLmnpzpnIDopoHmuLLmn5PotoXlpKfmlbDmja7ph4/nmoTlsZ7mgKfnu5PmnoTvvIzpnIDopoHkvb/nlKjmianlsZXnu4Tku7Y8Y29kZT4mbHQ7Yi1iaWctdHJlZSZndDs8L2NvZGU+LOe7hOS7tuWGhemDqGFwaeWfuuacrOWkjeeUqOagkee7k+aehOaJgOacieWxnuaAp++8jOWvueagkeW9oue7k+aehOi/m+ihjOS8mOWMlu+8jOWIqeeUqOWPr+inhuWMuuWfn+S9jee9ruadpei/m+ihjOi/h+a7pOetm+mAieiKgueCueW5tui/m+ihjOaTjeS9nO+8jFxu5L2G5Li65LqG5oCn6IO955qE5o+Q56S65b+F54S26KaB54m654my6YOo5YiG5L2T6aqM77yM5Zug5q2k5aSn5pWw5o2u6YeP55qE5qCR57uT5p6E5LiN5o+Q5L6b5Yqo55S75bGV5byA57yp5pS+5pWI5p6cPC9wPlxuPHA+6buY6K6k6IqC54K56auY5bqm5Li6PGNvZGU+MjhweDwvY29kZT7vvIzlj6/pgJrov4c8Y29kZT52aXNpYmxlLWNvdW50PC9jb2RlPuaMh+WumuagkeWPr+aYr+WMuuWfn+aYvuekuueahOiKgueCueS4quaVsO+8jOm7mOiupOS4ujE15LiqIOWNszxjb2RlPjQyMHB4PC9jb2RlPuWboOS4uuaYr+mSiOWvueWPr+inhuWMuuWfn+eahOa7muWKqOS8mOWMlu+8jOWboOatpOW/hemhu+aMh+WumuWuueWZqOmrmOW6pjwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICBcbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzcgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPlxuJmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7ZGl2Jmd0O1xuICAgICZsdDtkaXYgc3R5bGU9JnF1b3Q7bWFyZ2luLWJvdHRvbTogOHB4OyZxdW90OyZndDtcbiAgICAgIOaVsOaNruadoeaVsO+8mlxuICAgICAgJmx0O2ItaW5wdXQtbnVtYmVyIHYtbW9kZWw9JnF1b3Q7bnVtYmVyJnF1b3Q7Jmd0OyZsdDsvYi1pbnB1dC1udW1iZXImZ3Q7XG4gICAgICAmbHQ7Yi1idXR0b24gQGNsaWNrPSZxdW90O2luaXQmcXVvdDsmZ3Q75riy5p+TJmx0Oy9iLWJ1dHRvbiZndDtcbiAgICAmbHQ7L2RpdiZndDtcbiAgICAmbHQ7ZGl2IGZsZXg9JnF1b3Q7bWFpbjpqdXN0aWZ5JnF1b3Q7Jmd0O1xuICAgICAgJmx0O2ItaW5wdXQgdi1tb2RlbD0mcXVvdDtxdWVyeSZxdW90OyBzZWFyY2ggcGxhY2Vob2xkZXI9JnF1b3Q76L6T5YWl6L+H5ruk5p2h5Lu25ZCO5Zue6L2m562b6YCJJnF1b3Q7IEBzZWFyY2g9JnF1b3Q7aGFuZGxlRmlsdGVyJnF1b3Q7IHN0eWxlPSZxdW90O3dpZHRoOiAyMzBweDsmcXVvdDsmZ3Q7Jmx0Oy9iLWlucHV0Jmd0O1xuICAgICAgJmx0O2ItYnV0dG9uLWdyb3VwJmd0O1xuICAgICAgICAmbHQ7Yi1idXR0b24gQGNsaWNrPSZxdW90O2V4cGFuZEFsbCZxdW90OyZndDvlsZXlvIDmiYDmnIkmbHQ7L2ItYnV0dG9uJmd0O1xuICAgICAgICAmbHQ7Yi1idXR0b24gQGNsaWNrPSZxdW90O2NvbGxhcHNlQWxsJnF1b3Q7Jmd0O+aUtui1t+aJgOaciSZsdDsvYi1idXR0b24mZ3Q7XG4gICAgICAmbHQ7L2ItYnV0dG9uLWdyb3VwJmd0O1xuICAgICZsdDsvZGl2Jmd0O1xuICAgICZsdDtiLWRpdmlkZXIgc3R5bGU9JnF1b3Q7bWFyZ2luOiAxNHB4IDA7JnF1b3Q7Jmd0OyZsdDsvYi1kaXZpZGVyJmd0O1xuICAgICZsdDtiLWJpZy10cmVlIHJlZj0mcXVvdDt0cmVlJnF1b3Q7IDpkYXRhPSZxdW90O2RhdGEmcXVvdDsgOnZpc2libGUtY291bnQ9JnF1b3Q7MTAmcXVvdDtcbiAgICAgICAgICAgICAgICBAc2VsZWN0LWNoYW5nZT0mcXVvdDtoYW5kbGVTZWxlY3RlZCZxdW90OyA6ZmlsdGVyLW5vZGUtbWV0aG9kPSZxdW90O2ZpbHRlck5vZGUmcXVvdDsmZ3Q7Jmx0Oy9iLWJpZy10cmVlJmd0O1xuICAmbHQ7L2RpdiZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbnVtYmVyOiA1MDAwLFxuICAgICAgICBxdWVyeTogJycsXG4gICAgICAgIGRhdGE6IFtdXG4gICAgICB9XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBpbml0KCkge1xuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLiRnZW5lcmF0ZVRyZWUodGhpcy5udW1iZXIpXG4gICAgICB9LFxuICAgICAgaGFuZGxlU2VsZWN0ZWQoYWxsU2VsZWN0ZWQsIG5vZGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coYWxsU2VsZWN0ZWQsIG5vZGUpXG4gICAgICB9LFxuICAgICAgZXhwYW5kQWxsKCkge1xuICAgICAgICB0aGlzLiRyZWZzLnRyZWUuZXhwYW5kQWxsKClcbiAgICAgIH0sXG4gICAgICBjb2xsYXBzZUFsbCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLmNvbGxhcHNlQWxsKClcbiAgICAgIH0sXG4gICAgICBoYW5kbGVGaWx0ZXIodmFsdWUpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLmZpbHRlcih2YWx1ZSlcbiAgICAgIH0sXG4gICAgICBmaWx0ZXJOb2RlKHZhbHVlLCBub2RlKSB7XG4gICAgICAgIGlmICghdmFsdWUpIHJldHVybiB0cnVlO1xuICAgICAgICAvLyByZXR1cm4gbm9kZS50aXRsZT09PXZhbHVlLnRyaW0oKVxuICAgICAgICByZXR1cm4gbm9kZS50aXRsZS5pbmRleE9mKHZhbHVlKSAhPT0gLTE7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJwcm9wc1wiPlByb3BzPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD7lj4LmlbA8L3RoPlxuPHRoPuivtOaYjjwvdGg+XG48dGg+57G75Z6LPC90aD5cbjx0aD7lj6/pgInlgLw8L3RoPlxuPHRoPum7mOiupOWAvDwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD5kYXRhPC90ZD5cbjx0ZD7lj6/ltYzlpZfnmoToioLngrnlsZ7mgKfnmoTmlbDnu4TvvIznlJ/miJAgdHJlZSDnmoTmlbDmja48L3RkPlxuPHRkPkFycmF5PC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPltdPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bXVsdGlwbGU8L3RkPlxuPHRkPuaYr+WQpuaUr+aMgeWkmumAiTwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNob3ctY2hlY2tib3g8L3RkPlxuPHRkPuaYr+WQpuaYvuekuuWkmumAieahhjwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmVtcHR5LXRleHQ8L3RkPlxuPHRkPuayoeacieaVsOaNruaXtueahOaPkOekujwvdGQ+XG48dGQ+U3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuaaguaXoOaVsOaNrjwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmxvYWQtZGF0YTwvdGQ+XG48dGQ+5byC5q2l5Yqg6L295pWw5o2u55qE5pa55rOV77yM6KeB56S65L6LPC90ZD5cbjx0ZD5GdW5jdGlvbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD50aXRsZS1rZXk8L3RkPlxuPHRkPuWumuS5iXRpdGxl6ZSuLOm7mOiupHRpdGxlPC90ZD5cbjx0ZD5TdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+dGl0bGU8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5jaGlsZHJlbi1rZXk8L3RkPlxuPHRkPuWumuS5ieWtkOiKgueCuemUrizpu5jorqRjaGlsZHJlbuS4uuWtkOiKgueCuWtleTwvdGQ+XG48dGQ+U3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmNoaWxkcmVuPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2hlY2stc3RyaWN0bHk8L3RkPlxuPHRkPuWkjemAieahhueahOaDheWGteS4i++8jOaYr+WQpuS4peagvOeahOmBteW+queItuWtkOS4jeS6kuebuOWFs+iBlOeahOWBmuazlTwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmNoZWNrLWRpcmVjdGx5PC90ZD5cbjx0ZD7lvIDlkK/lkI7vvIzlnKggc2hvdy1jaGVja2JveCDmqKHlvI/kuIvvvIxzZWxlY3Qg55qE5Lqk5LqS5Lmf5bCG6L2s5Li6IGNoZWNrPC90ZD5cbjx0ZD5Cb29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bG9jay1zZWxlY3Q8L3RkPlxuPHRkPumUgeWumuagkemAieaLqe+8jOWGjemDqOWIhuS4muWKoeS4reW4uOeUqO+8jOavlOWmguW8gOWQr+W8ueeql+WQjuemgeeUqOagkeeahOmAieS4reaTjeS9nDwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmZpbHRlci1ub2RlLW1ldGhvZDwvdGQ+XG48dGQ+562b6YCJ6L+H5ruk5qCR6IqC54K55Ye95pWwPC90ZD5cbjx0ZD5GdW5jdGlvbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD50aW1lb3V0PC90ZD5cbjx0ZD7liLfmlrDpopHnjofvvIg8Y29kZT4mbHQ7Yi1iaWctdHJlZSZndDs8L2NvZGU+5omp5bGV57uE5Lu25Y+v55So77yJPC90ZD5cbjx0ZD5OdW1iZXI8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+MTc8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5pdGVtSGVpZ2h0PC90ZD5cbjx0ZD7oioLngrnpq5jluqYg77yIPGNvZGU+Jmx0O2ItYmlnLXRyZWUmZ3Q7PC9jb2RlPuaJqeWxlee7hOS7tuWPr+eUqO+8iTwvdGQ+XG48dGQ+TnVtYmVyPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPjI4PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dmlzaWJsZUNvdW50PC90ZD5cbjx0ZD7mmL7npLrljLrln5/kuKrmlbDvvIg8Y29kZT4mbHQ7Yi1iaWctdHJlZSZndDs8L2NvZGU+5omp5bGV57uE5Lu25Y+v55So77yJPC90ZD5cbjx0ZD5OdW1iZXI8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+MTU8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwiZXZlbnRzXCI+RXZlbnRzPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD7kuovku7blkI08L3RoPlxuPHRoPuivtOaYjjwvdGg+XG48dGg+6L+U5Zue5YC8PC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnNlbGVjdC1jaGFuZ2U8L3RkPlxuPHRkPueCueWHu+agkeiKgueCueaXtuinpuWPkTwvdGQ+XG48dGQ+5b2T5YmN5bey6YCJ5Lit55qE6IqC54K55pWw57uE44CB5b2T5YmN6aG544CBZmxhdFN0YXRlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2hlY2stY2hhbmdlPC90ZD5cbjx0ZD7ngrnlh7vlpI3pgInmoYbml7bop6blj5E8L3RkPlxuPHRkPuW9k+WJjeW3suWLvumAieiKgueCueeahOaVsOe7hOOAgeW9k+WJjemhueOAgeWMheWQq+WNiumAieeahOiKgueCueaVsOe7hOOAgWZsYXRTdGF0ZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnRvZ2dsZS1leHBhbmQ8L3RkPlxuPHRkPuWxleW8gOWSjOaUtui1t+WtkOWIl+ihqOaXtuinpuWPkTwvdGQ+XG48dGQ+5b2T5YmN6IqC54K555qE5pWw5o2uPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMyBpZD1cIm1ldGhvZHNcIj5NZXRob2RzPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD7kuovku7blkI08L3RoPlxuPHRoPuivtOaYjjwvdGg+XG48dGg+6L+U5Zue5YC8PC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPmdldEZsYXRTdGF0ZTwvdGQ+XG48dGQ+5ouN5bmz55qE5pWw57uEYnVmZmVy77yM5YyF5ZCr5bGC57qn5YWz57O75Y+K57Si5byVIOaXoDwvdGQ+XG48dGQ+PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Z2V0Q2hlY2tlZE5vZGVzPC90ZD5cbjx0ZD7ojrflj5booqvli77pgInnmoToioLngrk8L3RkPlxuPHRkPuaXoDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmdldFNlbGVjdGVkTm9kZXM8L3RkPlxuPHRkPuiOt+WPluiiq+mAieS4reeahOiKgueCuTwvdGQ+XG48dGQ+5pegPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Z2V0Q2hlY2tlZEFuZEluZGV0ZXJtaW5hdGVOb2RlczwvdGQ+XG48dGQ+6I635Y+W6YCJ5Lit5Y+K5Y2K6YCJ6IqC54K5PC90ZD5cbjx0ZD7ml6A8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5maWx0ZXI8L3RkPlxuPHRkPuagkeiKgueCuei/h+a7pOWHveaVsO+8jOW/hemhu+iuvue9rmZpbHRlci1ub2RlLW1ldGhvZCDov4fmu6TljLnphY3lh73mlbA8L3RkPlxuPHRkPuaXoDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNldENoZWNrZWQ8L3RkPlxuPHRkPuiuvue9rm5vZGXli77pgIkg77yM5Y+C5pWw5Li6IGtleXPvvJpub2RlS2V55pWw57uELCBmbGFn77ya5Yu+6YCJ54q25oCB77yM6buY6K6kdHJ1ZTwvdGQ+XG48dGQ+5pegPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+c2V0U2VsZWN0ZWQ8L3RkPlxuPHRkPuiuvue9rm5vZGXljZXpgIkg77yM5Y+C5pWw5Li6IGtleXPvvJpub2RlS2V55pWw57uELCBmbGFn77ya5Yu+6YCJ54q25oCB77yM6buY6K6kdHJ1Ze+8jGV4cGFuZFBhcmVudO+8muaYr+WQpuWxleW8gOelluWFiOiKgueCue+8jOm7mOiupHRydWU8L3RkPlxuPHRkPuaXoDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNldEV4cGFuZDwvdGQ+XG48dGQ+6K6+572ubm9kZeWxleW8gCDvvIzlj4LmlbDkuLoga2V5c++8mm5vZGVLZXnmlbDnu4QsIGZsYWfvvJrli77pgInnirbmgIHvvIzpu5jorqR0cnVlPC90ZD5cbjx0ZD7ml6A8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5leHBhbmRBbGw8L3RkPlxuPHRkPuWxleW8gOaJgOaciTwvdGQ+XG48dGQ+5pegPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y29sbGFwc2VBbGw8L3RkPlxuPHRkPuaUtui1t+aJgOaciTwvdGQ+XG48dGQ+5pegPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2hlY2tBbGw8L3RkPlxuPHRkPuWLvumAieaJgOaciTwvdGQ+XG48dGQ+5pegPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dW5zZWxlY3RBbGw8L3RkPlxuPHRkPuWPlua2iOaJgOacieWNlemAiTwvdGQ+XG48dGQ+5pegPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dW5jaGVja0FsbDwvdGQ+XG48dGQ+5Y+W5raI5YWo6YOo5Yu+6YCJPC90ZD5cbjx0ZD7ml6A8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwiY2hpbGRyZW5cIj5DaGlsZHJlbjwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+5bGe5oCnPC90aD5cbjx0aD7or7TmmI48L3RoPlxuPHRoPuexu+WeizwvdGg+XG48dGg+6buY6K6k5YC8PC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnRpdGxlPC90ZD5cbjx0ZD7oioLngrnmmL7npLrmoIfpopg8L3RkPlxuPHRkPlN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZXhwYW5kPC90ZD5cbjx0ZD7mmK/lkKblsZXlvIDnm7TlrZDoioLngrk8L3RkPlxuPHRkPkJvb2xlYW48L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZGlzYWJsZWQ8L3RkPlxuPHRkPuemgeeUqDwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5kaXNhYmxlQ2hlY2tib3g8L3RkPlxuPHRkPuemgeeUqOWNlemAieahhjwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5zZWxlY3RlZDwvdGQ+XG48dGQ+5piv5ZCm6YCJ5Lit5a2Q6IqC54K5PC90ZD5cbjx0ZD5Cb29sZWFuPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmNoZWNrZWQ8L3RkPlxuPHRkPuaYr+WQpuWLvumAiSjlpoLmnpzli77pgInvvIzlrZDoioLngrnkuZ/kvJrlhajpg6jli77pgIkpPC90ZD5cbjx0ZD5Cb29sZWFuPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnZpc2libGU8L3RkPlxuPHRkPuaYr+WQpuaYvuekuuiKgueCuSjlj6/pgJrov4fmk43kvZzoioLngrl2aXNpYmxl5bGe5oCn6ZqQ6JeP6IqC54K5KTwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5jaGlsZHJlbjwvdGQ+XG48dGQ+5a2Q6IqC54K55bGe5oCn5pWw57uE77yM5Y+v5Lul6K6+572udHJlZSDnu4Tku7ZjaGlsZHJlbi1rZXnlsZ7mgKfmnaXoh6rlrprkuYk8L3RkPlxuPHRkPkFycmF5PC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5sb2FkaW5nPC90ZD5cbjx0ZD7lj6/orr7nva7kuLrlvILmraXliqDovb3oioLngrnvvIzpnIDphY3lkIhsb2FkRGF0Yeiuvue9ruWKoOi9veWHveaVsDwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+aXNMZWFmPC90ZD5cbjx0ZD7mmK/lkKbkuLrlj7blrZDoioLngrnvvIzlj6/mjqfliLbmmK/lkKbmmL7npLrnrq3lpLTvvIzlj6/phY3lkIjlvILmraXliqDovb3lrp7njrA8L3RkPlxuPHRkPkJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG5cbiAgICA8L3NlY3Rpb24+XG4gIDwvdGVtcGxhdGU+XG4gIDxzY3JpcHQ+XG4gICAgICBpbXBvcnQgKiBhcyBWdWUgZnJvbSAndnVlJztcbiAgICAgIGV4cG9ydCBkZWZhdWx0IHtcbiAgICAgICAgbmFtZTogJ2NvbXBvbmVudC1kb2MnLFxuICAgICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgICAgXCJlbGVtZW50LWRlbW8wXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIHdpdGhDdHg6IF93aXRoQ3R4LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5jb25zdCBfaG9pc3RlZF8xID0geyBmbGV4OiBcIlwiIH1cbmNvbnN0IF9ob2lzdGVkXzIgPSB7IHN0eWxlOiB7XCJ3aWR0aFwiOlwiMjAwcHhcIn0gfVxuY29uc3QgX2hvaXN0ZWRfMyA9IHsgc3R5bGU6IHtcIndpZHRoXCI6XCI4MHB4XCJ9IH1cbmNvbnN0IF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZShcIumUgeWumlwiKVxuY29uc3QgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKFwi6Kej6ZSBXCIpXG5jb25zdCBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZShcImRpdlwiLCBudWxsLCBudWxsLCAtMSlcblxuZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2JfdHJlZSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiYi10cmVlXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfYl9zd2l0Y2ggPSBfcmVzb2x2ZUNvbXBvbmVudChcImItc3dpdGNoXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhcImRpdlwiLCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIF9ob2lzdGVkXzEsIFtcbiAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCBfaG9pc3RlZF8yLCBbXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfdHJlZSwge1xuICAgICAgICAgIGRhdGE6IF9jdHguZGF0YSxcbiAgICAgICAgICBvblNlbGVjdENoYW5nZTogX2N0eC5oYW5kbGVTZWxlY3QsXG4gICAgICAgICAgXCJsb2NrLXNlbGVjdFwiOiBfY3R4LmxvY2tTZWxlY3RcbiAgICAgICAgfSwgbnVsbCwgOCwgW1wiZGF0YVwiLCBcIm9uU2VsZWN0Q2hhbmdlXCIsIFwibG9jay1zZWxlY3RcIl0pXG4gICAgICBdKSxcbiAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCBfaG9pc3RlZF8zLCBbXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2Jfc3dpdGNoLCB7XG4gICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5sb2NrU2VsZWN0LFxuICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9ICRldmVudCA9PiAoX2N0eC5sb2NrU2VsZWN0ID0gJGV2ZW50KSksXG4gICAgICAgICAgc2l6ZTogXCJsYXJnZVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBvcGVuOiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICBfaG9pc3RlZF80XG4gICAgICAgICAgXSksXG4gICAgICAgICAgY2xvc2U6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgIF9ob2lzdGVkXzVcbiAgICAgICAgICBdKSxcbiAgICAgICAgICBfOiAxXG4gICAgICAgIH0sIDgsIFtcIm1vZGVsVmFsdWVcIl0pXG4gICAgICBdKVxuICAgIF0pLFxuICAgIF9ob2lzdGVkXzZcbiAgXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ+S4gOe6pyAxJyxcbiAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTEnLFxuICAgICAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0xJyx9LFxuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0yJ31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTInLFxuICAgICAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMi0xJ30sXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0yLTInfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgbG9ja1NlbGVjdDogZmFsc2VcbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGhhbmRsZVNlbGVjdChzZWxlY3RlZCwgbm9kZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhub2RlKVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vMVwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4OiBfd2l0aEN0eCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuY29uc3QgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKFwi5Yid5aeL5YyW5pWw5o2u5bm26buY6K6k6YCJ5Lit5YmN56uv57uEXCIpXG5jb25zdCBfaG9pc3RlZF8yID0ge1xuICBmbGV4OiBcIlwiLFxuICBjbGFzczogXCJtdC0xMFwiXG59XG5jb25zdCBfaG9pc3RlZF8zID0geyBzdHlsZToge1wid2lkdGhcIjpcIjIwMHB4XCJ9IH1cbmNvbnN0IF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIG51bGwsIG51bGwsIC0xKVxuXG5mdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfYl9idXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudChcImItYnV0dG9uXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfYl90cmVlID0gX3Jlc29sdmVDb21wb25lbnQoXCJiLXRyZWVcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKFwiZGl2XCIsIG51bGwsIFtcbiAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9iX2J1dHRvbiwgeyBvbkNsaWNrOiBfY3R4LmluaXREYXRhIH0sIHtcbiAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgX2hvaXN0ZWRfMVxuICAgICAgXSksXG4gICAgICBfOiAxXG4gICAgfSwgOCwgW1wib25DbGlja1wiXSksXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIF9ob2lzdGVkXzIsIFtcbiAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCBfaG9pc3RlZF8zLCBbXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfdHJlZSwge1xuICAgICAgICAgIGRhdGE6IF9jdHguZGF0YSxcbiAgICAgICAgICByZWY6IFwidHJlZVwiLFxuICAgICAgICAgIG9uU2VsZWN0Q2hhbmdlOiBfY3R4LmhhbmRsZVNlbGVjdCxcbiAgICAgICAgICB0aXRsZUtleTogXCJ0ZXh0XCJcbiAgICAgICAgfSwgbnVsbCwgOCwgW1wiZGF0YVwiLCBcIm9uU2VsZWN0Q2hhbmdlXCJdKVxuICAgICAgXSlcbiAgICBdKSxcbiAgICBfaG9pc3RlZF80XG4gIF0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiBbXSxcbiAgICAgICAgZGVmYXVsdElkOiAnMDAxMDInXG4gICAgICB9XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBpbml0RGF0YSgpIHtcbiAgICAgICAgLy8g5Yid5aeL5YyW5pWw5o2u5ZCOXG4gICAgICAgIHRoaXMuZGF0YSA9IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpZDogJzAwMScsXG4gICAgICAgICAgICB0ZXh0OiAn56CU5Y+R6YOoJyxcbiAgICAgICAgICAgIGRlcHRDb2RlOiAneWZiJyxcbiAgICAgICAgICAgIHN0YXR1czogJzEnLFxuICAgICAgICAgICAgZGVzYzogJ+eglOWPkeS4reW/gycsXG4gICAgICAgICAgICBwYXJlbnRJZDogbnVsbCxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzAwMTAxJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiAn5ZCO56uv57uEJyxcbiAgICAgICAgICAgICAgICBkZXB0Q29kZTogJ2hkJyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICcxJyxcbiAgICAgICAgICAgICAgICBkZXNjOiAn5ZCO56uv56CU5Y+R5Lit5b+DJyxcbiAgICAgICAgICAgICAgICBwYXJlbnRJZDogJzAwMSdcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkOiAnMDAxMDInLFxuICAgICAgICAgICAgICAgIHRleHQ6ICfliY3nq6/nu4QnLFxuICAgICAgICAgICAgICAgIGRlcHRDb2RlOiAncWQnLFxuICAgICAgICAgICAgICAgIHN0YXR1czogJzEnLFxuICAgICAgICAgICAgICAgIGRlc2M6ICfliY3nq6/noJTlj5HkuK3lv4MnLFxuICAgICAgICAgICAgICAgIHBhcmVudElkOiAnMDAxJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6ICcwMDEwMycsXG4gICAgICAgICAgICAgICAgdGV4dDogJ1VJ6K6+6K6hJyxcbiAgICAgICAgICAgICAgICBkZXB0Q29kZTogJ3NqJyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICcxJyxcbiAgICAgICAgICAgICAgICBkZXNjOiAn5Lqk5LqS44CBdWnorr7orqHkuK3lv4MnLFxuICAgICAgICAgICAgICAgIHBhcmVudElkOiAnMDAxJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6ICcwMDEwNCcsXG4gICAgICAgICAgICAgICAgdGV4dDogJ+a1i+ivlee7hCcsXG4gICAgICAgICAgICAgICAgZGVwdENvZGU6ICdjcycsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnMScsXG4gICAgICAgICAgICAgICAgZGVzYzogJ+a1i+ivlee7hCcsXG4gICAgICAgICAgICAgICAgcGFyZW50SWQ6ICcwMDEnXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzAwMTA1JyxcbiAgICAgICAgICAgICAgICB0ZXh0OiAn6L+Q57u057uEJyxcbiAgICAgICAgICAgICAgICBkZXB0Q29kZTogJ3l3JyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICcxJyxcbiAgICAgICAgICAgICAgICBkZXNjOiAn6L+Q57u044CB5pyN5Yqh44CB5beh5qOAJyxcbiAgICAgICAgICAgICAgICBwYXJlbnRJZDogJzAwMSdcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICcwMDInLFxuICAgICAgICAgICAgdGV4dDogJ+mhueebrumDqCcsXG4gICAgICAgICAgICBkZXB0Q29kZTogJ3htYicsXG4gICAgICAgICAgICBzdGF0dXM6ICcxJyxcbiAgICAgICAgICAgIGRlc2M6ICfpobnnm67mnI3liqHpg6gnLFxuICAgICAgICAgICAgcGFyZW50SWQ6IG51bGwsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWQ6ICcwMDIwMScsXG4gICAgICAgICAgICAgICAgdGV4dDogJ+W8gOWPkee7hCcsXG4gICAgICAgICAgICAgICAgZGVwdENvZGU6ICdrZicsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnMScsXG4gICAgICAgICAgICAgICAgZGVzYzogJ+WQjuerr+mhueebruW8gOWPkScsXG4gICAgICAgICAgICAgICAgcGFyZW50SWQ6ICcwMDInXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzAwMjAyJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiAn5Lqk5LuY5pyN5Yqh57uEJyxcbiAgICAgICAgICAgICAgICBkZXB0Q29kZTogJ2pmJyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICcxJyxcbiAgICAgICAgICAgICAgICBkZXNjOiAn5Lqk5LuY6aG555uu77yM5oqA5pyv5pyN5Yqh5pSv5oyBJyxcbiAgICAgICAgICAgICAgICBwYXJlbnRJZDogJzAwMidcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgLy8g6I635Y+W5qCR57uT5p6E55qE5ouN5bmz5pWw5o2u77yM5p+l5om+5b2T5YmN6ZyA6KaB6YCJ5Lit55qE6IqC54K55YC8XG4gICAgICAgICAgY29uc3QgZmxhdFN0YXRlID0gdGhpcy4kcmVmcy50cmVlLmdldEZsYXRTdGF0ZSgpXG4gICAgICAgICAgY29uc3QgY3VycmVudCA9IGZsYXRTdGF0ZS5maW5kKG5vZGUgPT4gbm9kZS5ub2RlLmlkID09PSB0aGlzLmRlZmF1bHRJZClcbiAgICAgICAgICBpZiAoY3VycmVudCAmJiBjdXJyZW50KSB7XG4gICAgICAgICAgICB0aGlzLiRyZWZzLnRyZWUuc2V0U2VsZWN0ZWQoW2N1cnJlbnQubm9kZUtleV0pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIGhhbmRsZVNlbGVjdChzZWxlY3RlZCwgbm9kZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhub2RlKVxuICAgICAgICB0aGlzLiRtZXNzYWdlKGDpgInkuK3oioLngrkke25vZGUudGV4dH1gKVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vMlwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2JfdHJlZSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiYi10cmVlXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhcImRpdlwiLCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIG51bGwsIFtcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfdHJlZSwge1xuICAgICAgICBkYXRhOiBfY3R4LmRhdGEsXG4gICAgICAgIFwic2hvdy1jaGVja2JveFwiOiBcIlwiLFxuICAgICAgICBtdWx0aXBsZTogXCJcIixcbiAgICAgICAgb25TZWxlY3RDaGFuZ2U6IF9jdHguaGFuZGxlU2VsZWN0LFxuICAgICAgICBvbkNoZWNrQ2hhbmdlOiBfY3R4LmhhbmRsZUNoZWNrZWRcbiAgICAgIH0sIG51bGwsIDgsIFtcImRhdGFcIiwgXCJvblNlbGVjdENoYW5nZVwiLCBcIm9uQ2hlY2tDaGFuZ2VcIl0pXG4gICAgXSlcbiAgXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ+S4gOe6pyAxJyxcbiAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTEnLFxuICAgICAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0xJyx9LFxuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0yJ31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTInLFxuICAgICAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMi0xJ30sXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0yLTInfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgaGFuZGxlU2VsZWN0KHNlbGVjdGVkLCBub2RlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHNlbGVjdGVkKVxuICAgICAgICBjb25zb2xlLmxvZyhub2RlKVxuICAgICAgfSxcbiAgICAgIGhhbmRsZUNoZWNrZWQoY2hlY2tlZCwgbm9kZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhjaGVja2VkKVxuICAgICAgICBjb25zb2xlLmxvZyhub2RlKVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vM1wiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4OiBfd2l0aEN0eCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuY29uc3QgX2hvaXN0ZWRfMSA9IHsgY2xhc3M6IFwibWItMTZcIiB9XG5jb25zdCBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoXCLlsZXlvIDlhajpg6hcIilcbmNvbnN0IF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZShcIuaUtui1t+WFqOmDqFwiKVxuY29uc3QgX2hvaXN0ZWRfNCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKFwi5bGV5byA5LiJ57qnXCIpXG5jb25zdCBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoXCLpgInmi6nlhajpg6hcIilcbmNvbnN0IF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZShcIuWPlua2iOWFqOmAiVwiKVxuY29uc3QgX2hvaXN0ZWRfNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKFwi6K6+572u6YCJ5LitMS0y5Y+K5Lul5LiLXCIpXG5jb25zdCBfaG9pc3RlZF84ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoXCLljZXpgIkgMS0yLTFcIilcbmNvbnN0IF9ob2lzdGVkXzkgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZShcIua4heepuuWNlemAieWSjOWkmumAiVwiKVxuY29uc3QgX2hvaXN0ZWRfMTAgPSB7IHN0eWxlOiB7XCJ3aWR0aFwiOlwiMzAwcHhcIn0gfVxuXG5mdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfYl9idXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudChcImItYnV0dG9uXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfYl90cmVlID0gX3Jlc29sdmVDb21wb25lbnQoXCJiLXRyZWVcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKFwiZGl2XCIsIG51bGwsIFtcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgX2hvaXN0ZWRfMSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9idXR0b24sIHtcbiAgICAgICAgb25DbGljazogX2N0eC5leHBhbmRBbGwsXG4gICAgICAgIHNpemU6IFwic21hbGxcIlxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2hvaXN0ZWRfMlxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSwgOCwgW1wib25DbGlja1wiXSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9iX2J1dHRvbiwge1xuICAgICAgICBvbkNsaWNrOiBfY3R4LmNvbGxhcHNlQWxsLFxuICAgICAgICBzaXplOiBcInNtYWxsXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9ob2lzdGVkXzNcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0sIDgsIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9idXR0b24sIHtcbiAgICAgICAgb25DbGljazogX2N0eC5zZXRFeHBhbmQsXG4gICAgICAgIHNpemU6IFwic21hbGxcIlxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2hvaXN0ZWRfNFxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSwgOCwgW1wib25DbGlja1wiXSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9iX2J1dHRvbiwge1xuICAgICAgICBvbkNsaWNrOiBfY3R4LmNoZWNrQWxsLFxuICAgICAgICBzaXplOiBcInNtYWxsXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9ob2lzdGVkXzVcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0sIDgsIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9idXR0b24sIHtcbiAgICAgICAgb25DbGljazogX2N0eC51bmNoZWNrQWxsLFxuICAgICAgICBzaXplOiBcInNtYWxsXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9ob2lzdGVkXzZcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0sIDgsIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9idXR0b24sIHtcbiAgICAgICAgb25DbGljazogX2N0eC5zZXRDaGVja2VkLFxuICAgICAgICBzaXplOiBcInNtYWxsXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9ob2lzdGVkXzdcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0sIDgsIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9idXR0b24sIHtcbiAgICAgICAgb25DbGljazogX2N0eC5zZXRTZWxlY3RlZCxcbiAgICAgICAgc2l6ZTogXCJzbWFsbFwiXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfaG9pc3RlZF84XG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9LCA4LCBbXCJvbkNsaWNrXCJdKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfYnV0dG9uLCB7XG4gICAgICAgIG9uQ2xpY2s6IF9jdHguY2xlYXIsXG4gICAgICAgIHNpemU6IFwic21hbGxcIlxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2hvaXN0ZWRfOVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSwgOCwgW1wib25DbGlja1wiXSlcbiAgICBdKSxcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgX2hvaXN0ZWRfMTAsIFtcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfdHJlZSwge1xuICAgICAgICBkYXRhOiBfY3R4LmRhdGEsXG4gICAgICAgIFwic2hvdy1jaGVja2JveFwiOiBcIlwiLFxuICAgICAgICByZWY6IFwidHJlZVwiXG4gICAgICB9LCBudWxsLCA4LCBbXCJkYXRhXCJdKVxuICAgIF0pXG4gIF0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGl0bGU6ICfkuIDnuqcgMScsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICfkuoznuqcgMS0xJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0xJyx9LFxuICAgICAgICAgICAgICAgICAge3RpdGxlOiAn5LiJ57qnIDEtMS0yJ31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAxLTInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7dGl0bGU6ICfkuInnuqcgMS0yLTEnfSxcbiAgICAgICAgICAgICAgICAgIHt0aXRsZTogJ+S4iee6pyAxLTItMid9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ+S4gOe6pyAyJyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+S6jOe6pyAyLTEnLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICfkuoznuqcgMi0yJyxcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGV4cGFuZEFsbCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLmV4cGFuZEFsbCgpXG4gICAgICB9LFxuICAgICAgY29sbGFwc2VBbGwoKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudHJlZS5jb2xsYXBzZUFsbCgpXG4gICAgICB9LFxuICAgICAgY2hlY2tBbGwoKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudHJlZS5jaGVja0FsbCgpXG4gICAgICB9LFxuICAgICAgdW5jaGVja0FsbCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnVuY2hlY2tBbGwoKVxuICAgICAgfSxcbiAgICAgIHNldENoZWNrZWQoKSB7XG4gICAgICAgIC8vIOm7mOiupOaYr+iOt+WPluS6hm5vZGVLZXnntKLlvJXvvIzlpoLmnInnibnmrorliKTmlq3vvIzlpoJpZO+8jOWImeWPr+S7peiHquihjOagueaNrmZsYXRTdGF0ZS5maW5k5omA5pyJbm9kZUtleeWAvFxuICAgICAgICB0aGlzLiRyZWZzLnRyZWUuc2V0Q2hlY2tlZChbNSwgNl0pXG4gICAgICB9LFxuICAgICAgc2V0U2VsZWN0ZWQoKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRTZWxlY3RlZChbNV0pXG4gICAgICB9LFxuICAgICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudHJlZS51bmNoZWNrQWxsKClcbiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnVuc2VsZWN0QWxsKClcbiAgICAgIH0sXG4gICAgICBzZXRFeHBhbmQoKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRFeHBhbmQoWzAsIDRdKVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vNFwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2JfdHJlZSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiYi10cmVlXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhcImRpdlwiLCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl90cmVlLCB7XG4gICAgICBkYXRhOiBfY3R4LmRhdGEzLFxuICAgICAgXCJzaG93LWNoZWNrYm94XCI6IFwiXCIsXG4gICAgICBcImxvYWQtZGF0YVwiOiBfY3R4LmxvYWREYXRhXG4gICAgfSwgbnVsbCwgOCwgW1wiZGF0YVwiLCBcImxvYWQtZGF0YVwiXSlcbiAgXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGEzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGl0bGU6ICdyb290JyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGl0bGU6ICdsZWFmJyxcbiAgICAgICAgICAgIGlzTGVhZjogdHJ1ZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgbG9hZERhdGEoaXRlbSwgY2FsbGJhY2spIHtcbiAgICAgICAgY29uc29sZS5sb2coaXRlbSlcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgbGV0IGRhdGEgPSBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRpdGxlOiAnaGF2ZS1jaGlsZCcsXG4gICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogW11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRpdGxlOiAnbm8tY2hpbGQnLFxuICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFtdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICAgIC8vIOaooeaLn+ivt+axguaVsOaNruacieWtkOmhueeahOaXtuWAmVxuICAgICAgICAgIGlmIChpdGVtLnRpdGxlID09PSAnaGF2ZS1jaGlsZCcpIHtcbiAgICAgICAgICAgIGRhdGEgPSBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ2NoaWxkMScsXG4gICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNMZWFmOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW10sXG4gICAgICAgICAgICAgICAgdmlzaWJsZTogdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICdsZWFmIG5vZGUnLFxuICAgICAgICAgICAgICAgIGlzTGVhZjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW11cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS50aXRsZSA9PT0gJ25vLWNoaWxkJykge1xuICAgICAgICAgICAgLy8g5oyJ6ZyA6Ieq6KGM6K6+572u5piv5ZCm5piv5Y+25a2Q6IqC54K55oiW6ICF5LiN6K6+572uXG4gICAgICAgICAgICBpdGVtWydpc0xlYWYnXSA9IHRydWVcbiAgICAgICAgICAgIC8vIOS4jeiuvue9ruS8muS/neeVmeeureWktOWPr+S7peWGjeasoeeCueWHu1xuICAgICAgICAgICAgLy8gZGF0YSA9IFtdXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2FsbGJhY2soZGF0YSk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vNVwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2JfaW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImItaW5wdXRcIilcbiAgY29uc3QgX2NvbXBvbmVudF9iX2RpdmlkZXIgPSBfcmVzb2x2ZUNvbXBvbmVudChcImItZGl2aWRlclwiKVxuICBjb25zdCBfY29tcG9uZW50X2JfdHJlZSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiYi10cmVlXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhcImRpdlwiLCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIG51bGwsIFtcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfaW5wdXQsIHtcbiAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5xdWVyeSxcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gJGV2ZW50ID0+IChfY3R4LnF1ZXJ5ID0gJGV2ZW50KSksXG4gICAgICAgIHNlYXJjaDogXCJcIixcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwi6L6T5YWl6L+H5ruk5p2h5Lu25ZCO5Zue6L2m562b6YCJXCIsXG4gICAgICAgIG9uU2VhcmNoOiBfY3R4LmhhbmRsZUZpbHRlcixcbiAgICAgICAgc3R5bGU6IHtcIndpZHRoXCI6XCIyMzBweFwifVxuICAgICAgfSwgbnVsbCwgOCwgW1wibW9kZWxWYWx1ZVwiLCBcIm9uU2VhcmNoXCJdKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfZGl2aWRlciwgeyBzdHlsZToge1wibWFyZ2luXCI6XCIxNHB4IDBcIn0gfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9iX3RyZWUsIHtcbiAgICAgICAgZGF0YTogX2N0eC5kYXRhLFxuICAgICAgICByZWY6IFwidHJlZVJlZlwiLFxuICAgICAgICBcImZpbHRlci1ub2RlLW1ldGhvZFwiOiBfY3R4LmZpbHRlck5vZGVcbiAgICAgIH0sIG51bGwsIDgsIFtcImRhdGFcIiwgXCJmaWx0ZXItbm9kZS1tZXRob2RcIl0pXG4gICAgXSlcbiAgXSkpXG59XG4gIFxuICAgIGNvbnN0IHtyZWFjdGl2ZSwgdG9SZWZzLCByZWZ9ID0gVnVlXG5cbiAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBzZXR1cCgpIHtcbiAgICAgIGNvbnN0IHN0YXRlcyA9IHJlYWN0aXZlKHtcbiAgICAgICAgcXVlcnk6ICcnLFxuICAgICAgICBkYXRhOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICcxJyxcbiAgICAgICAgICAgIHRpdGxlOiAn5rGf6IuP55yBJyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzEtMScsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICfljZfkuqzluIInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtMScsIHRpdGxlOiAn546E5q2m5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtMicsIHRpdGxlOiAn6byT5qW85Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtMycsIHRpdGxlOiAn5bu66YK65Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTEtNCcsIHRpdGxlOiAn56em5reu5Yy6J31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzEtMicsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICfml6DplKHluIInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItMScsIHRpdGxlOiAn6ZSh5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItMicsIHRpdGxlOiAn5oOg5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItMycsIHRpdGxlOiAn5ruo5rmW5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTItNCcsIHRpdGxlOiAn5qKB5rqq5Yy6J31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZDogJzEtMycsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICflvpDlt57luIInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMScsIHRpdGxlOiAn6byT5qW85Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMicsIHRpdGxlOiAn5LqR6b6Z5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMycsIHRpdGxlOiAn5rOJ5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNCcsIHRpdGxlOiAn6ZOc5bGx5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNScsIHRpdGxlOiAn6LS+5rGq5Yy6J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNicsIHRpdGxlOiAn5rKb5Y6/J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtNycsIHRpdGxlOiAn5Liw5Y6/J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtOCcsIHRpdGxlOiAn552i5a6B5Y6/J30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtOScsIHRpdGxlOiAn5paw5rKC5biCJ30sXG4gICAgICAgICAgICAgICAgICB7aWQ6ICcxLTMtMTAnLCB0aXRsZTogJ+mCs+W3nuW4gid9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpZDogJzInLFxuICAgICAgICAgICAgdGl0bGU6ICfmsrPljJfnnIEnLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlkOiAnMi0xJyxcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+efs+WutuW6hCcsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgIHtpZDogJzItMS0xJywgdGl0bGU6ICfplb/lronljLonfSxcbiAgICAgICAgICAgICAgICAgIHtpZDogJzItMS0yJywgdGl0bGU6ICfmlrDljY7ljLonfSxcbiAgICAgICAgICAgICAgICAgIHtpZDogJzItMS0zJywgdGl0bGU6ICfpvJPmpbzljLonfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSlcbiAgICAgIGNvbnN0IHRyZWVSZWYgPSByZWYobnVsbClcbiAgICAgIGNvbnN0IGhhbmRsZUZpbHRlciA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICB0cmVlUmVmLnZhbHVlLmZpbHRlcih2YWx1ZSlcbiAgICAgIH1cbiAgICAgIGNvbnN0IGZpbHRlck5vZGUgPSAodmFsdWUsIG5vZGUpID0+IHtcbiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgICAgIC8vIHJldHVybiBub2RlLnRpdGxlPT09dmFsdWUudHJpbSgpXG4gICAgICAgIHJldHVybiBub2RlLnRpdGxlLmluZGV4T2YodmFsdWUpICE9PSAtMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnRvUmVmcyhzdGF0ZXMpLFxuICAgICAgICB0cmVlUmVmLFxuICAgICAgICBoYW5kbGVGaWx0ZXIsXG4gICAgICAgIGZpbHRlck5vZGVcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgICByZXR1cm4ge1xuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzZcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmNvbnN0IF9ob2lzdGVkXzEgPSB7IHN0eWxlOiB7XCJ3aWR0aFwiOlwiMzAwcHhcIn0gfVxuXG5mdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfYl90cmVlID0gX3Jlc29sdmVDb21wb25lbnQoXCJiLXRyZWVcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKFwiZGl2XCIsIG51bGwsIFtcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgX2hvaXN0ZWRfMSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl90cmVlLCB7XG4gICAgICAgIGRhdGE6IF9jdHguZGF0YSxcbiAgICAgICAgcmVuZGVyOiBfY3R4LnJlbmRlckNvbnRlbnQsXG4gICAgICAgIHJlZjogXCJ0cmVlXCJcbiAgICAgIH0sIG51bGwsIDgsIFtcImRhdGFcIiwgXCJyZW5kZXJcIl0pXG4gICAgXSlcbiAgXSkpXG59XG4gIFxuICAgIGNvbnN0IHtofSA9IFZ1ZVxuXG4gIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ3BhcmVudCAxJyxcbiAgICAgICAgICAgIGV4cGFuZDogdHJ1ZSxcbiAgICAgICAgICAgIHJlbmRlcjogKHtyb290LCBub2RlLCBkYXRhfSkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gaCgnc3BhbicsIHtcbiAgICAgICAgICAgICAgICBzdHlsZToge2Rpc3BsYXk6ICdpbmxpbmUtZmxleCcsIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsIHdpZHRoOiAnMTAwJScsfVxuICAgICAgICAgICAgICB9LCBbXG4gICAgICAgICAgICAgICAgaCgnc3BhbicsIGRhdGEudGl0bGUpLFxuICAgICAgICAgICAgICAgIGgoJ2knLCB7XG4gICAgICAgICAgICAgICAgICAnY2xhc3MnOiBbJ2ItaWNvbmZvbnQnLCAnYi1pY29uLXBsdXMtc3F1YXJlJ10sXG4gICAgICAgICAgICAgICAgICBzdHlsZToge2ZvbnRTaXplOiAnMTZweCcsIGNvbG9yOiAnIzEwODlmZid9LFxuICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZChkYXRhKVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHt0aXRsZTogJ2NoaWxkIDEtMScsfSxcbiAgICAgICAgICAgICAge3RpdGxlOiAnY2hpbGQgMS0yJyx9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBpZDogMCxcbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHJlbmRlckNvbnRlbnQoe3Jvb3QsIG5vZGUsIGRhdGF9KSB7XG4gICAgICAgIHJldHVybiBoKCdzcGFuJywge1xuICAgICAgICAgIHN0eWxlOiB7ZGlzcGxheTogJ2lubGluZS1mbGV4JywganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJywgd2lkdGg6ICcxMDAlJyx9XG4gICAgICAgIH0sIFtcbiAgICAgICAgICBoKCdzcGFuJywgZGF0YS50aXRsZSksXG4gICAgICAgICAgaCgnc3BhbicsIHtzdHlsZToge2Rpc3BsYXk6ICdpbmxpbmUtYmxvY2snLH19LCBbXG4gICAgICAgICAgICBoKCdpJywge1xuICAgICAgICAgICAgICAnY2xhc3MnOiBbJ2ItaWNvbmZvbnQnLCAnYi1pY29uLXBsdXMtY2lyY2xlJ10sXG4gICAgICAgICAgICAgIHN0eWxlOiB7Zm9udFNpemU6ICcxNnB4JywgY29sb3I6ICcjNWQ2ZDdlJ30sXG4gICAgICAgICAgICAgIG9uQ2xpY2s6IChlKSA9PiB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgICAgICAgIHRoaXMuYXBwZW5kKGRhdGEpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgaCgnaScsIHtcbiAgICAgICAgICAgICAgJ2NsYXNzJzogWydiLWljb25mb250JywgJ2ItaWNvbi1taW51cy1jaXJjbGUnXSxcbiAgICAgICAgICAgICAgc3R5bGU6IHtmb250U2l6ZTogJzE2cHgnLCBjb2xvcjogJyNmNTIyMmQnfSxcbiAgICAgICAgICAgICAgb25DbGljazogKGUpID0+IHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmUocm9vdCwgbm9kZSwgZGF0YSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICBdKVxuICAgICAgICBdKTtcbiAgICAgIH0sXG4gICAgICBhcHBlbmQoZGF0YSkge1xuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IGRhdGEuY2hpbGRyZW4gfHwgW107XG4gICAgICAgIGRhdGEuZXhwYW5kID0gdHJ1ZVxuICAgICAgICBjaGlsZHJlbi5wdXNoKHt0aXRsZTogJ25ldyBub2RlJ30pO1xuICAgICAgICBkYXRhLmNoaWxkcmVuID0gY2hpbGRyZW5cbiAgICAgICAgdGhpcy5kYXRhID0gWy4uLnRoaXMuZGF0YV1cbiAgICAgIH0sXG4gICAgICByZW1vdmUocm9vdCwgbm9kZSwgZGF0YSkge1xuICAgICAgICBjb25zb2xlLmxvZyhyb290LCBub2RlLCBkYXRhKVxuICAgICAgICBjb25zdCBwYXJlbnRLZXkgPSByb290LmZpbmQoZWwgPT4gZWwgPT09IG5vZGUpLnBhcmVudDtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gcm9vdC5maW5kKGVsID0+IGVsLm5vZGVLZXkgPT09IHBhcmVudEtleSkubm9kZTtcbiAgICAgICAgY29uc3QgaW5kZXggPSBwYXJlbnQuY2hpbGRyZW4uaW5kZXhPZihkYXRhKTtcbiAgICAgICAgcGFyZW50LmNoaWxkcmVuLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW83XCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIHdpdGhDdHg6IF93aXRoQ3R4LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5jb25zdCBfaG9pc3RlZF8xID0geyBzdHlsZToge1wibWFyZ2luLWJvdHRvbVwiOlwiOHB4XCJ9IH1cbmNvbnN0IF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZShcIiDmlbDmja7mnaHmlbDvvJogXCIpXG5jb25zdCBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoXCLmuLLmn5NcIilcbmNvbnN0IF9ob2lzdGVkXzQgPSB7IGZsZXg6IFwibWFpbjpqdXN0aWZ5XCIgfVxuY29uc3QgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKFwi5bGV5byA5omA5pyJXCIpXG5jb25zdCBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoXCLmlLbotbfmiYDmnIlcIilcblxuZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2JfaW5wdXRfbnVtYmVyID0gX3Jlc29sdmVDb21wb25lbnQoXCJiLWlucHV0LW51bWJlclwiKVxuICBjb25zdCBfY29tcG9uZW50X2JfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJiLWJ1dHRvblwiKVxuICBjb25zdCBfY29tcG9uZW50X2JfaW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImItaW5wdXRcIilcbiAgY29uc3QgX2NvbXBvbmVudF9iX2J1dHRvbl9ncm91cCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiYi1idXR0b24tZ3JvdXBcIilcbiAgY29uc3QgX2NvbXBvbmVudF9iX2RpdmlkZXIgPSBfcmVzb2x2ZUNvbXBvbmVudChcImItZGl2aWRlclwiKVxuICBjb25zdCBfY29tcG9uZW50X2JfYmlnX3RyZWUgPSBfcmVzb2x2ZUNvbXBvbmVudChcImItYmlnLXRyZWVcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKFwiZGl2XCIsIG51bGwsIFtcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgbnVsbCwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIF9ob2lzdGVkXzEsIFtcbiAgICAgICAgX2hvaXN0ZWRfMixcbiAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9pbnB1dF9udW1iZXIsIHtcbiAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4Lm51bWJlcixcbiAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSAkZXZlbnQgPT4gKF9jdHgubnVtYmVyID0gJGV2ZW50KSlcbiAgICAgICAgfSwgbnVsbCwgOCwgW1wibW9kZWxWYWx1ZVwiXSksXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfYnV0dG9uLCB7IG9uQ2xpY2s6IF9jdHguaW5pdCB9LCB7XG4gICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgX2hvaXN0ZWRfM1xuICAgICAgICAgIF0pLFxuICAgICAgICAgIF86IDFcbiAgICAgICAgfSwgOCwgW1wib25DbGlja1wiXSlcbiAgICAgIF0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIF9ob2lzdGVkXzQsIFtcbiAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9pbnB1dCwge1xuICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHgucXVlcnksXG4gICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gJGV2ZW50ID0+IChfY3R4LnF1ZXJ5ID0gJGV2ZW50KSksXG4gICAgICAgICAgc2VhcmNoOiBcIlwiLFxuICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIui+k+WFpei/h+a7pOadoeS7tuWQjuWbnui9puetm+mAiVwiLFxuICAgICAgICAgIG9uU2VhcmNoOiBfY3R4LmhhbmRsZUZpbHRlcixcbiAgICAgICAgICBzdHlsZToge1wid2lkdGhcIjpcIjIzMHB4XCJ9XG4gICAgICAgIH0sIG51bGwsIDgsIFtcIm1vZGVsVmFsdWVcIiwgXCJvblNlYXJjaFwiXSksXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2JfYnV0dG9uX2dyb3VwLCBudWxsLCB7XG4gICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9idXR0b24sIHsgb25DbGljazogX2N0eC5leHBhbmRBbGwgfSwge1xuICAgICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgICAgX2hvaXN0ZWRfNVxuICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgXzogMVxuICAgICAgICAgICAgfSwgOCwgW1wib25DbGlja1wiXSksXG4gICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9iX2J1dHRvbiwgeyBvbkNsaWNrOiBfY3R4LmNvbGxhcHNlQWxsIH0sIHtcbiAgICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICAgIF9ob2lzdGVkXzZcbiAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgIH0sIDgsIFtcIm9uQ2xpY2tcIl0pXG4gICAgICAgICAgXSksXG4gICAgICAgICAgXzogMVxuICAgICAgICB9KVxuICAgICAgXSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9iX2RpdmlkZXIsIHsgc3R5bGU6IHtcIm1hcmdpblwiOlwiMTRweCAwXCJ9IH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfYl9iaWdfdHJlZSwge1xuICAgICAgICByZWY6IFwidHJlZVwiLFxuICAgICAgICBkYXRhOiBfY3R4LmRhdGEsXG4gICAgICAgIFwidmlzaWJsZS1jb3VudFwiOiAxMCxcbiAgICAgICAgb25TZWxlY3RDaGFuZ2U6IF9jdHguaGFuZGxlU2VsZWN0ZWQsXG4gICAgICAgIFwiZmlsdGVyLW5vZGUtbWV0aG9kXCI6IF9jdHguZmlsdGVyTm9kZVxuICAgICAgfSwgbnVsbCwgOCwgW1wiZGF0YVwiLCBcIm9uU2VsZWN0Q2hhbmdlXCIsIFwiZmlsdGVyLW5vZGUtbWV0aG9kXCJdKVxuICAgIF0pXG4gIF0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBudW1iZXI6IDUwMDAsXG4gICAgICAgIHF1ZXJ5OiAnJyxcbiAgICAgICAgZGF0YTogW11cbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IHRoaXMuJGdlbmVyYXRlVHJlZSh0aGlzLm51bWJlcilcbiAgICAgIH0sXG4gICAgICBoYW5kbGVTZWxlY3RlZChhbGxTZWxlY3RlZCwgbm9kZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhhbGxTZWxlY3RlZCwgbm9kZSlcbiAgICAgIH0sXG4gICAgICBleHBhbmRBbGwoKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudHJlZS5leHBhbmRBbGwoKVxuICAgICAgfSxcbiAgICAgIGNvbGxhcHNlQWxsKCkge1xuICAgICAgICB0aGlzLiRyZWZzLnRyZWUuY29sbGFwc2VBbGwoKVxuICAgICAgfSxcbiAgICAgIGhhbmRsZUZpbHRlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLiRyZWZzLnRyZWUuZmlsdGVyKHZhbHVlKVxuICAgICAgfSxcbiAgICAgIGZpbHRlck5vZGUodmFsdWUsIG5vZGUpIHtcbiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgICAgIC8vIHJldHVybiBub2RlLnRpdGxlPT09dmFsdWUudHJpbSgpXG4gICAgICAgIHJldHVybiBub2RlLnRpdGxlLmluZGV4T2YodmFsdWUpICE9PSAtMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgICByZXR1cm4ge1xuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIDwvc2NyaXB0PlxuICAiLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0yLTAhLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdHJlZS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTItMCEuLi8uLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi90cmVlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwiLi90cmVlLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWFmYmZhODhlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdHJlZS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi90cmVlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbnNjcmlwdC5yZW5kZXIgPSByZW5kZXJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///711\n");

/***/ })

}]);