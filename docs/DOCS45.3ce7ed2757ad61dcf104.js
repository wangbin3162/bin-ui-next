(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[40],{

/***/ 591:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm-browser.js
var vue_esm_browser = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./build/md-loader!./examples/docs/sortablejs.md?vue&type=template&id=1c65aae2

var _hoisted_1 = {
  class: "content element-doc"
};

var _hoisted_2 = /*#__PURE__*/Object(vue_esm_browser["g" /* createStaticVNode */])("<h2 id=\"draggable-tuo-zhuai\"><a class=\"header-anchor\" href=\"#draggable-tuo-zhuai\">¶</a> Draggable 拖拽</h2><p>表格的拖拽排序，现已采用<code>sortablejs</code>进行实现，由于后续拖拽需求可能会日益增多，现已将<code>sortablejs</code>内置进入组件库， 由于官方示例加载较慢，这里摘取部分内容示例如下，</p><p>演示demo如下</p><p><a href=\"https://gitee.com/wangbin3162/Vue.Draggable\" target=\"_blank\">[vuedraggable]</a> | <a href=\"https://wangbin3162.gitee.io/vue.draggable/#/simple\" target=\"_blank\">[vuedraggable Demo]</a> | <a href=\" https://wangbin3162.gitee.io/sortable\" target=\"_blank\">[Sortable Demo]</a></p><h3 id=\"an-zhuang\"><a class=\"header-anchor\" href=\"#an-zhuang\">¶</a> 安装</h3><pre><code class=\"hljs language-bash\">$ npm install sortablejs --save\n$ npm install vuedraggable --save\n</code></pre><p>cdn</p><pre><code class=\"hljs language-javascript\">&lt;script src=<span class=\"hljs-string\">&quot;//cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js&quot;</span>&gt;&lt;/script&gt;\n&lt;!-- CDNJS :: Sortable (https:<span class=\"hljs-comment\">//cdnjs.com/) --&gt;</span>\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;//cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></span>\n&lt;!-- CDNJS :: Vue.Draggable (https:<span class=\"hljs-comment\">//cdnjs.com/) --&gt;</span>\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.20.0/vuedraggable.umd.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></span>\n</code></pre><h3 id=\"shi-yong\"><a class=\"header-anchor\" href=\"#shi-yong\">¶</a> 使用</h3><p>Sortable</p><pre><code class=\"hljs language-javascript\">    <span class=\"hljs-comment\">// Cherrypick extra plugins</span>\n    <span class=\"hljs-keyword\">import</span> Sortable, { MultiDrag, Swap } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;sortablejs&#39;</span>;\n    Sortable.mount(<span class=\"hljs-keyword\">new</span> MultiDrag(), <span class=\"hljs-keyword\">new</span> Swap());\n    <span class=\"hljs-comment\">// Cherrypick default plugins</span>\n    <span class=\"hljs-keyword\">import</span> Sortable, { AutoScroll } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;sortablejs/modular/sortable.core.esm.js&#39;</span>;\n    Sortable.mount(<span class=\"hljs-keyword\">new</span> AutoScroll());\n\n    <span class=\"hljs-keyword\">var</span> el = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">&#39;items&#39;</span>);\n    <span class=\"hljs-keyword\">var</span> sortable = Sortable.create(el,{});\n</code></pre><p>vuedraggable</p><pre><code class=\"hljs language-javascript\">  <span class=\"hljs-keyword\">import</span> draggable <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vuedraggable&#39;</span>\n  <span class=\"hljs-comment\">//...</span>\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n        <span class=\"hljs-attr\">components</span>: {\n            draggable,\n        }\n  }\n  <span class=\"hljs-comment\">//...</span>\n</code></pre>", 13);

var _hoisted_15 = /*#__PURE__*/Object(vue_esm_browser["g" /* createStaticVNode */])("<h3 id=\"sortable-options-pei-zhi-xiang\"><a class=\"header-anchor\" href=\"#sortable-options-pei-zhi-xiang\">¶</a> Sortable Options 配置项</h3><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// sortable.create() 也可以创建新实例</span>\n<span class=\"hljs-keyword\">var</span> sortable = <span class=\"hljs-keyword\">new</span> Sortable(el, {\n\t<span class=\"hljs-attr\">group</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,  <span class=\"hljs-comment\">// or { name: &quot;...&quot;, pull: [true, false, &#39;clone&#39;, array], put: [true, false, array] }</span>\n\t<span class=\"hljs-attr\">sort</span>: <span class=\"hljs-literal\">true</span>,  <span class=\"hljs-comment\">// sorting inside list</span>\n\t<span class=\"hljs-attr\">delay</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">// time in milliseconds to define when the sorting should start</span>\n\t<span class=\"hljs-attr\">delayOnTouchOnly</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">// only delay if user is using touch</span>\n\t<span class=\"hljs-attr\">touchStartThreshold</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">// px, how many pixels the point should move before cancelling a delayed drag event</span>\n\t<span class=\"hljs-attr\">disabled</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">// Disables the sortable if set to true.</span>\n\t<span class=\"hljs-attr\">store</span>: <span class=\"hljs-literal\">null</span>,  <span class=\"hljs-comment\">// @see Store</span>\n\t<span class=\"hljs-attr\">animation</span>: <span class=\"hljs-number\">150</span>,  <span class=\"hljs-comment\">// ms, animation speed moving items when sorting, `0` — without animation</span>\n\t<span class=\"hljs-attr\">easing</span>: <span class=\"hljs-string\">&quot;cubic-bezier(1, 0, 0, 1)&quot;</span>, <span class=\"hljs-comment\">// Easing for animation. Defaults to null. See https://easings.net/ for examples.</span>\n\t<span class=\"hljs-attr\">handle</span>: <span class=\"hljs-string\">&quot;.my-handle&quot;</span>,  <span class=\"hljs-comment\">// Drag handle selector within list items</span>\n\t<span class=\"hljs-attr\">filter</span>: <span class=\"hljs-string\">&quot;.ignore-elements&quot;</span>,  <span class=\"hljs-comment\">// Selectors that do not lead to dragging (String or Function)</span>\n\t<span class=\"hljs-attr\">preventOnFilter</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// Call `event.preventDefault()` when triggered `filter`</span>\n\t<span class=\"hljs-attr\">draggable</span>: <span class=\"hljs-string\">&quot;.item&quot;</span>,  <span class=\"hljs-comment\">// Specifies which items inside the element should be draggable</span>\n\n\t<span class=\"hljs-attr\">dataIdAttr</span>: <span class=\"hljs-string\">&#39;data-id&#39;</span>,\n\n\t<span class=\"hljs-attr\">ghostClass</span>: <span class=\"hljs-string\">&quot;sortable-ghost&quot;</span>,  <span class=\"hljs-comment\">// Class name for the drop placeholder</span>\n\t<span class=\"hljs-attr\">chosenClass</span>: <span class=\"hljs-string\">&quot;sortable-chosen&quot;</span>,  <span class=\"hljs-comment\">// Class name for the chosen item</span>\n\t<span class=\"hljs-attr\">dragClass</span>: <span class=\"hljs-string\">&quot;sortable-drag&quot;</span>,  <span class=\"hljs-comment\">// Class name for the dragging item</span>\n\n\t<span class=\"hljs-attr\">swapThreshold</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-comment\">// Threshold of the swap zone</span>\n\t<span class=\"hljs-attr\">invertSwap</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">// Will always use inverted swap zone if set to true</span>\n\t<span class=\"hljs-attr\">invertedSwapThreshold</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-comment\">// Threshold of the inverted swap zone (will be set to swapThreshold value by default)</span>\n\t<span class=\"hljs-attr\">direction</span>: <span class=\"hljs-string\">&#39;horizontal&#39;</span>, <span class=\"hljs-comment\">// Direction of Sortable (will be detected automatically if not given)</span>\n\n\t<span class=\"hljs-attr\">forceFallback</span>: <span class=\"hljs-literal\">false</span>,  <span class=\"hljs-comment\">// ignore the HTML5 DnD behaviour and force the fallback to kick in</span>\n\n\t<span class=\"hljs-attr\">fallbackClass</span>: <span class=\"hljs-string\">&quot;sortable-fallback&quot;</span>,  <span class=\"hljs-comment\">// Class name for the cloned DOM Element when using forceFallback</span>\n\t<span class=\"hljs-attr\">fallbackOnBody</span>: <span class=\"hljs-literal\">false</span>,  <span class=\"hljs-comment\">// Appends the cloned DOM Element into the Document&#39;s Body</span>\n\t<span class=\"hljs-attr\">fallbackTolerance</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">// Specify in pixels how far the mouse should move before it&#39;s considered as a drag.</span>\n\n\t<span class=\"hljs-attr\">dragoverBubble</span>: <span class=\"hljs-literal\">false</span>,\n\t<span class=\"hljs-attr\">removeCloneOnHide</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// Remove the clone element when it is not showing, rather than just hiding it</span>\n\t<span class=\"hljs-attr\">emptyInsertThreshold</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-comment\">// px, distance mouse must be from empty sortable to insert drag element into it</span>\n\n\t<span class=\"hljs-attr\">setData</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/** DataTransfer */</span>dataTransfer, <span class=\"hljs-comment\">/** HTMLElement*/</span>dragEl</span>) </span>{\n\t\tdataTransfer.setData(<span class=\"hljs-string\">&#39;Text&#39;</span>, dragEl.textContent); <span class=\"hljs-comment\">// `dataTransfer` object of HTML5 DragEvent</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Element is chosen</span>\n\t<span class=\"hljs-attr\">onChoose</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\tevt.oldIndex;  <span class=\"hljs-comment\">// element index within parent</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Element is unchosen</span>\n\t<span class=\"hljs-attr\">onUnchoose</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-comment\">// same properties as onEnd</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Element dragging started</span>\n\t<span class=\"hljs-attr\">onStart</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\tevt.oldIndex;  <span class=\"hljs-comment\">// element index within parent</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Element dragging ended</span>\n\t<span class=\"hljs-attr\">onEnd</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-keyword\">var</span> itemEl = evt.item;  <span class=\"hljs-comment\">// dragged HTMLElement</span>\n\t\tevt.to;    <span class=\"hljs-comment\">// target list</span>\n\t\tevt.from;  <span class=\"hljs-comment\">// previous list</span>\n\t\tevt.oldIndex;  <span class=\"hljs-comment\">// element&#39;s old index within old parent</span>\n\t\tevt.newIndex;  <span class=\"hljs-comment\">// element&#39;s new index within new parent</span>\n\t\tevt.oldDraggableIndex; <span class=\"hljs-comment\">// element&#39;s old index within old parent, only counting draggable elements</span>\n\t\tevt.newDraggableIndex; <span class=\"hljs-comment\">// element&#39;s new index within new parent, only counting draggable elements</span>\n\t\tevt.clone <span class=\"hljs-comment\">// the clone element</span>\n\t\tevt.pullMode;  <span class=\"hljs-comment\">// when item is in another sortable: `&quot;clone&quot;` if cloning, `true` if moving</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Element is dropped into the list from another list</span>\n\t<span class=\"hljs-attr\">onAdd</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-comment\">// same properties as onEnd</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Changed sorting within list</span>\n\t<span class=\"hljs-attr\">onUpdate</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-comment\">// same properties as onEnd</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Called by any change to the list (add / update / remove)</span>\n\t<span class=\"hljs-attr\">onSort</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-comment\">// same properties as onEnd</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Element is removed from the list into another list</span>\n\t<span class=\"hljs-attr\">onRemove</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-comment\">// same properties as onEnd</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Attempt to drag a filtered element</span>\n\t<span class=\"hljs-attr\">onFilter</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-keyword\">var</span> itemEl = evt.item;  <span class=\"hljs-comment\">// HTMLElement receiving the `mousedown|tapstart` event.</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Event when you move an item in the list or between lists</span>\n\t<span class=\"hljs-attr\">onMove</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt, <span class=\"hljs-comment\">/**Event*/</span>originalEvent</span>) </span>{\n\t\t<span class=\"hljs-comment\">// Example: https://jsbin.com/nawahef/edit?js,output</span>\n\t\tevt.dragged; <span class=\"hljs-comment\">// dragged HTMLElement</span>\n\t\tevt.draggedRect; <span class=\"hljs-comment\">// DOMRect {left, top, right, bottom}</span>\n\t\tevt.related; <span class=\"hljs-comment\">// HTMLElement on which have guided</span>\n\t\tevt.relatedRect; <span class=\"hljs-comment\">// DOMRect</span>\n\t\tevt.willInsertAfter; <span class=\"hljs-comment\">// Boolean that is true if Sortable will insert drag element after target by default</span>\n\t\toriginalEvent.clientY; <span class=\"hljs-comment\">// mouse position</span>\n\t\t<span class=\"hljs-comment\">// return false; — for cancel</span>\n\t\t<span class=\"hljs-comment\">// return -1; — insert before target</span>\n\t\t<span class=\"hljs-comment\">// return 1; — insert after target</span>\n\t},\n\n\t<span class=\"hljs-comment\">// Called when creating a clone of element</span>\n\t<span class=\"hljs-attr\">onClone</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\t<span class=\"hljs-keyword\">var</span> origEl = evt.item;\n\t\t<span class=\"hljs-keyword\">var</span> cloneEl = evt.clone;\n\t},\n\n\t<span class=\"hljs-comment\">// Called when dragging element changes position</span>\n\t<span class=\"hljs-attr\">onChange</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"><span class=\"hljs-comment\">/**Event*/</span>evt</span>) </span>{\n\t\tevt.newIndex <span class=\"hljs-comment\">// most likely why this event is used is to get the dragging element&#39;s current index</span>\n\t\t<span class=\"hljs-comment\">// same properties as onEnd</span>\n\t}\n});\n</code></pre>", 2);

function render(_ctx, _cache) {
  var _component_draggable_demo = Object(vue_esm_browser["D" /* resolveComponent */])("draggable-demo");

  return Object(vue_esm_browser["u" /* openBlock */])(), Object(vue_esm_browser["e" /* createBlock */])("section", _hoisted_1, [_hoisted_2, Object(vue_esm_browser["i" /* createVNode */])("p", null, [Object(vue_esm_browser["i" /* createVNode */])(_component_draggable_demo)]), _hoisted_15]);
}
// CONCATENATED MODULE: ./examples/docs/sortablejs.md?vue&type=template&id=1c65aae2

// CONCATENATED MODULE: ./examples/docs/sortablejs.md

const script = {}
script.render = render

/* harmony default export */ var sortablejs = __webpack_exports__["default"] = (script);

/***/ })

}]);